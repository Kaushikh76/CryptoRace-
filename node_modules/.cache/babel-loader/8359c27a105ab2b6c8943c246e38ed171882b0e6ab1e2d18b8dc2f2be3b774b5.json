{"ast":null,"code":"var _jsxFileName = \"F:\\\\crypto-chicken-run\\\\src\\\\components\\\\CryptoChickenRace.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport * as roomService from '../services/roomService';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RACE_DURATION = 60000; // 60 seconds\nconst UPDATE_INTERVAL = 1000; // 1 second\nconst TRACK_LENGTH = 100;\nconst CryptoChickenRace = ({\n  roomCode,\n  playerName,\n  isHost\n}) => {\n  _s();\n  const [cryptos, setCryptos] = useState([]);\n  const [players, setPlayers] = useState([]);\n  const [raceStarted, setRaceStarted] = useState(false);\n  const [winner, setWinner] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(RACE_DURATION / 1000);\n  const [chartData, setChartData] = useState([]);\n  useEffect(() => {\n    const fetchCryptos = async () => {\n      const fetchedCryptos = await roomService.fetchCryptocurrencies();\n      setCryptos(fetchedCryptos.map(crypto => ({\n        ...crypto,\n        position: 0,\n        startPrice: 0,\n        currentPrice: 0,\n        color: `#${Math.floor(Math.random() * 16777215).toString(16)}` // Random color\n      })));\n    };\n    fetchCryptos();\n  }, []);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const updatedPlayers = roomService.getRoomPlayers(roomCode);\n      if (updatedPlayers) {\n        setPlayers(updatedPlayers);\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [roomCode]);\n  useEffect(() => {\n    if (raceStarted) {\n      const interval = setInterval(() => {\n        updatePrices();\n        setTimeLeft(prevTime => {\n          if (prevTime <= 1) {\n            clearInterval(interval);\n            endRace();\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, UPDATE_INTERVAL);\n      return () => clearInterval(interval);\n    }\n  }, [raceStarted]);\n  const startRace = async () => {\n    if (players.some(player => player.selection === null)) {\n      alert('All players must select a cryptocurrency before starting the race!');\n      return;\n    }\n    setRaceStarted(true);\n    setWinner(null);\n    setTimeLeft(RACE_DURATION / 1000);\n    roomService.startRace(roomCode);\n    await fetchInitialPrices();\n  };\n  const fetchInitialPrices = async () => {\n    const selectedCryptos = players.map(player => player.selection);\n    const ids = [...new Set(selectedCryptos)].join(',');\n    try {\n      const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${ids}&vs_currencies=usd`);\n      const data = await response.json();\n      setCryptos(prevCryptos => prevCryptos.map(crypto => {\n        var _data$crypto$id;\n        const price = ((_data$crypto$id = data[crypto.id]) === null || _data$crypto$id === void 0 ? void 0 : _data$crypto$id.usd) || Math.random() * 1000;\n        return {\n          ...crypto,\n          position: 0,\n          startPrice: price,\n          currentPrice: price\n        };\n      }));\n      setChartData([{\n        time: 0\n      }]);\n    } catch (error) {\n      console.error('Error fetching initial prices:', error);\n    }\n  };\n  const updatePrices = () => {\n    setCryptos(prevCryptos => {\n      const updatedCryptos = prevCryptos.map(crypto => {\n        if (players.some(player => player.selection === crypto.id)) {\n          const priceChange = (Math.random() - 0.5) * 2; // Random price change between -1% and 1%\n          const newPrice = crypto.currentPrice * (1 + priceChange / 100);\n          const totalChange = (newPrice - crypto.startPrice) / crypto.startPrice * 100;\n          const newPosition = Math.min(TRACK_LENGTH, Math.max(0, totalChange));\n          return {\n            ...crypto,\n            position: newPosition,\n            currentPrice: newPrice\n          };\n        }\n        return crypto;\n      });\n      setChartData(prevData => {\n        const newDataPoint = {\n          time: prevData.length * UPDATE_INTERVAL / 1000,\n          ...updatedCryptos.reduce((acc, crypto) => {\n            if (players.some(player => player.selection === crypto.id)) {\n              acc[crypto.id] = crypto.currentPrice;\n            }\n            return acc;\n          }, {})\n        };\n        return [...prevData, newDataPoint];\n      });\n      return updatedCryptos;\n    });\n  };\n  const endRace = () => {\n    setRaceStarted(false);\n    const selectedCryptos = cryptos.filter(crypto => players.some(player => player.selection === crypto.id));\n    const winningCrypto = selectedCryptos.reduce((prev, current) => prev.position > current.position ? prev : current);\n    setWinner(winningCrypto);\n    setPlayers(prevPlayers => prevPlayers.map(player => ({\n      ...player,\n      winner: player.selection === winningCrypto.id\n    })));\n  };\n  const selectCrypto = (playerName, cryptoId) => {\n    roomService.updatePlayerSelection(roomCode, playerName, cryptoId);\n  };\n  const selectedCryptos = cryptos.filter(crypto => players.some(player => player.selection === crypto.id));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gray-900 text-cyan-300\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-8 bg-gray-800 rounded-lg shadow-xl max-w-md w-full border border-cyan-500\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold mb-6 text-center text-cyan-400 animate-pulse\",\n        children: \"Crypto Race 2077\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Your NetRunner Handle\",\n          value: playerName,\n          onChange: e => setPlayerName(e.target.value),\n          className: \"w-full p-2 border rounded bg-gray-700 text-cyan-300 border-cyan-500 placeholder-cyan-600 focus:outline-none focus:ring-2 focus:ring-pink-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Room Code (for joining)\",\n          value: roomCode,\n          onChange: e => setRoomCode(e.target.value),\n          className: \"w-full p-2 border rounded bg-gray-700 text-cyan-300 border-cyan-500 placeholder-cyan-600 focus:outline-none focus:ring-2 focus:ring-pink-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: createRoom,\n            className: \"flex-1 px-4 py-2 bg-pink-600 text-white rounded hover:bg-pink-700 transition duration-300 ease-in-out transform hover:-translate-y-1 hover:scale-105 shadow-lg shadow-pink-500/50\",\n            children: \"Create Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: joinRoom,\n            className: \"flex-1 px-4 py-2 bg-cyan-600 text-white rounded hover:bg-cyan-700 transition duration-300 ease-in-out transform hover:-translate-y-1 hover:scale-105 shadow-lg shadow-cyan-500/50\",\n            children: \"Join Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500 text-center bg-gray-700 p-2 rounded animate-pulse\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8 text-sm text-center text-gray-400\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enter the neon-lit world of Crypto Race 2077.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Create a room to start your own race, or join an existing one with a room code.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(CryptoChickenRace, \"6y3dV/R40pe928igwTii9xQ0eJs=\");\n_c = CryptoChickenRace;\nexport default CryptoRaceLobby;\nvar _c;\n$RefreshReg$(_c, \"CryptoChickenRace\");","map":{"version":3,"names":["React","useState","useEffect","roomService","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","RACE_DURATION","UPDATE_INTERVAL","TRACK_LENGTH","CryptoChickenRace","roomCode","playerName","isHost","_s","cryptos","setCryptos","players","setPlayers","raceStarted","setRaceStarted","winner","setWinner","timeLeft","setTimeLeft","chartData","setChartData","fetchCryptos","fetchedCryptos","fetchCryptocurrencies","map","crypto","position","startPrice","currentPrice","color","Math","floor","random","toString","interval","setInterval","updatedPlayers","getRoomPlayers","clearInterval","updatePrices","prevTime","endRace","startRace","some","player","selection","alert","fetchInitialPrices","selectedCryptos","ids","Set","join","response","fetch","data","json","prevCryptos","_data$crypto$id","price","id","usd","time","error","console","updatedCryptos","priceChange","newPrice","totalChange","newPosition","min","max","prevData","newDataPoint","length","reduce","acc","filter","winningCrypto","prev","current","prevPlayers","selectCrypto","cryptoId","updatePlayerSelection","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","setPlayerName","target","setRoomCode","onClick","createRoom","joinRoom","_c","CryptoRaceLobby","$RefreshReg$"],"sources":["F:/crypto-chicken-run/src/components/CryptoChickenRace.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport * as roomService from '../services/roomService';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\nconst RACE_DURATION = 60000; // 60 seconds\r\nconst UPDATE_INTERVAL = 1000; // 1 second\r\nconst TRACK_LENGTH = 100;\r\n\r\nconst CryptoChickenRace = ({ roomCode, playerName, isHost }) => {\r\n  const [cryptos, setCryptos] = useState([]);\r\n  const [players, setPlayers] = useState([]);\r\n  const [raceStarted, setRaceStarted] = useState(false);\r\n  const [winner, setWinner] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(RACE_DURATION / 1000);\r\n  const [chartData, setChartData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCryptos = async () => {\r\n      const fetchedCryptos = await roomService.fetchCryptocurrencies();\r\n      setCryptos(fetchedCryptos.map(crypto => ({\r\n        ...crypto,\r\n        position: 0,\r\n        startPrice: 0,\r\n        currentPrice: 0,\r\n        color: `#${Math.floor(Math.random()*16777215).toString(16)}` // Random color\r\n      })));\r\n    };\r\n    fetchCryptos();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const updatedPlayers = roomService.getRoomPlayers(roomCode);\r\n      if (updatedPlayers) {\r\n        setPlayers(updatedPlayers);\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [roomCode]);\r\n\r\n  useEffect(() => {\r\n    if (raceStarted) {\r\n      const interval = setInterval(() => {\r\n        updatePrices();\r\n        setTimeLeft((prevTime) => {\r\n          if (prevTime <= 1) {\r\n            clearInterval(interval);\r\n            endRace();\r\n            return 0;\r\n          }\r\n          return prevTime - 1;\r\n        });\r\n      }, UPDATE_INTERVAL);\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [raceStarted]);\r\n\r\n  const startRace = async () => {\r\n    if (players.some(player => player.selection === null)) {\r\n      alert('All players must select a cryptocurrency before starting the race!');\r\n      return;\r\n    }\r\n    setRaceStarted(true);\r\n    setWinner(null);\r\n    setTimeLeft(RACE_DURATION / 1000);\r\n    roomService.startRace(roomCode);\r\n    await fetchInitialPrices();\r\n  };\r\n\r\n  const fetchInitialPrices = async () => {\r\n    const selectedCryptos = players.map(player => player.selection);\r\n    const ids = [...new Set(selectedCryptos)].join(',');\r\n    try {\r\n      const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${ids}&vs_currencies=usd`);\r\n      const data = await response.json();\r\n      \r\n      setCryptos(prevCryptos => \r\n        prevCryptos.map(crypto => {\r\n          const price = data[crypto.id]?.usd || Math.random() * 1000;\r\n          return {\r\n            ...crypto,\r\n            position: 0,\r\n            startPrice: price,\r\n            currentPrice: price\r\n          };\r\n        })\r\n      );\r\n      \r\n      setChartData([{ time: 0 }]);\r\n    } catch (error) {\r\n      console.error('Error fetching initial prices:', error);\r\n    }\r\n  };\r\n\r\n  const updatePrices = () => {\r\n    setCryptos(prevCryptos => {\r\n      const updatedCryptos = prevCryptos.map(crypto => {\r\n        if (players.some(player => player.selection === crypto.id)) {\r\n          const priceChange = (Math.random() - 0.5) * 2; // Random price change between -1% and 1%\r\n          const newPrice = crypto.currentPrice * (1 + priceChange / 100);\r\n          const totalChange = ((newPrice - crypto.startPrice) / crypto.startPrice) * 100;\r\n          const newPosition = Math.min(TRACK_LENGTH, Math.max(0, totalChange));\r\n          \r\n          return {\r\n            ...crypto,\r\n            position: newPosition,\r\n            currentPrice: newPrice,\r\n          };\r\n        }\r\n        return crypto;\r\n      });\r\n\r\n      setChartData(prevData => {\r\n        const newDataPoint = {\r\n          time: prevData.length * UPDATE_INTERVAL / 1000,\r\n          ...updatedCryptos.reduce((acc, crypto) => {\r\n            if (players.some(player => player.selection === crypto.id)) {\r\n              acc[crypto.id] = crypto.currentPrice;\r\n            }\r\n            return acc;\r\n          }, {})\r\n        };\r\n        return [...prevData, newDataPoint];\r\n      });\r\n\r\n      return updatedCryptos;\r\n    });\r\n  };\r\n\r\n  const endRace = () => {\r\n    setRaceStarted(false);\r\n    const selectedCryptos = cryptos.filter(crypto => \r\n      players.some(player => player.selection === crypto.id)\r\n    );\r\n    const winningCrypto = selectedCryptos.reduce((prev, current) => \r\n      (prev.position > current.position) ? prev : current\r\n    );\r\n    setWinner(winningCrypto);\r\n    \r\n    setPlayers(prevPlayers => \r\n      prevPlayers.map(player => ({\r\n        ...player,\r\n        winner: player.selection === winningCrypto.id\r\n      }))\r\n    );\r\n  };\r\n\r\n  const selectCrypto = (playerName, cryptoId) => {\r\n    roomService.updatePlayerSelection(roomCode, playerName, cryptoId);\r\n  };\r\n\r\n  const selectedCryptos = cryptos.filter(crypto => \r\n    players.some(player => player.selection === crypto.id)\r\n  );\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-900 text-cyan-300\">\r\n      <div className=\"p-8 bg-gray-800 rounded-lg shadow-xl max-w-md w-full border border-cyan-500\">\r\n        <h2 className=\"text-3xl font-bold mb-6 text-center text-cyan-400 animate-pulse\">Crypto Race 2077</h2>\r\n        <div className=\"space-y-4\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Your NetRunner Handle\"\r\n            value={playerName}\r\n            onChange={(e) => setPlayerName(e.target.value)}\r\n            className=\"w-full p-2 border rounded bg-gray-700 text-cyan-300 border-cyan-500 placeholder-cyan-600 focus:outline-none focus:ring-2 focus:ring-pink-500\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Room Code (for joining)\"\r\n            value={roomCode}\r\n            onChange={(e) => setRoomCode(e.target.value)}\r\n            className=\"w-full p-2 border rounded bg-gray-700 text-cyan-300 border-cyan-500 placeholder-cyan-600 focus:outline-none focus:ring-2 focus:ring-pink-500\"\r\n          />\r\n          <div className=\"flex space-x-4\">\r\n            <button\r\n              onClick={createRoom}\r\n              className=\"flex-1 px-4 py-2 bg-pink-600 text-white rounded hover:bg-pink-700 transition duration-300 ease-in-out transform hover:-translate-y-1 hover:scale-105 shadow-lg shadow-pink-500/50\"\r\n            >\r\n              Create Room\r\n            </button>\r\n            <button\r\n              onClick={joinRoom}\r\n              className=\"flex-1 px-4 py-2 bg-cyan-600 text-white rounded hover:bg-cyan-700 transition duration-300 ease-in-out transform hover:-translate-y-1 hover:scale-105 shadow-lg shadow-cyan-500/50\"\r\n            >\r\n              Join Room\r\n            </button>\r\n          </div>\r\n          {error && (\r\n            <p className=\"text-red-500 text-center bg-gray-700 p-2 rounded animate-pulse\">\r\n              {error}\r\n            </p>\r\n          )}\r\n        </div>\r\n        <div className=\"mt-8 text-sm text-center text-gray-400\">\r\n          <p>Enter the neon-lit world of Crypto Race 2077.</p>\r\n          <p>Create a room to start your own race, or join an existing one with a room code.</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoRaceLobby;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}