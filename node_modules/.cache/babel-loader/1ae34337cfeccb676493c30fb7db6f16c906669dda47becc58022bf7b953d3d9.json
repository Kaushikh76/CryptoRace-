{"ast":null,"code":"var _jsxFileName = \"F:\\\\crypto-chicken-run\\\\src\\\\components\\\\CryptoChickenRace.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport * as roomService from '../services/roomService';\nimport LoadingScreen from './LoadingScreen';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RACE_DURATION = 60000; // 60 seconds\nconst UPDATE_INTERVAL = 1000; // 1 second\n\nconst LivePriceDisplay = ({\n  crypto\n}) => {\n  _s();\n  const [livePrice, setLivePrice] = useState(null);\n  useEffect(() => {\n    const fetchLivePrice = async () => {\n      try {\n        const response = await fetch(`https://min-api.cryptocompare.com/data/price?fsym=${crypto.symbol}&tsyms=USD`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setLivePrice(data.USD);\n      } catch (error) {\n        console.error('Error fetching live price:', error);\n      }\n    };\n    fetchLivePrice();\n    const interval = setInterval(fetchLivePrice, 5000); // Update every 5 seconds\n\n    return () => clearInterval(interval);\n  }, [crypto]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-xl font-bold text-yellow-400 mb-4\",\n    children: livePrice ? `Live Price: $${livePrice.toFixed(2)}` : 'Fetching live price...'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(LivePriceDisplay, \"7VDhp3us8hj+fzj5J511H9K5lok=\");\n_c = LivePriceDisplay;\nconst CryptoChickenRace = ({\n  roomCode,\n  playerName,\n  isHost\n}) => {\n  _s2();\n  const [crypto, setCrypto] = useState(null);\n  const [players, setPlayers] = useState([]);\n  const [raceStarted, setRaceStarted] = useState(false);\n  const [winner, setWinner] = useState(null);\n  const [winnerInfo, setWinnerInfo] = useState({\n    name: null,\n    prediction: null,\n    finalPrice: null\n  });\n  const [timeLeft, setTimeLeft] = useState(RACE_DURATION / 1000);\n  const [isLoading, setIsLoading] = useState(true);\n  const [prediction, setPrediction] = useState('');\n  const [initialPrice, setInitialPrice] = useState(null);\n  const [currentPrice, setCurrentPrice] = useState(null);\n  const [finalPrice, setFinalPrice] = useState(null);\n  const [error, setError] = useState(null);\n  const [priceData, setPriceData] = useState([]);\n  const [startTimestamp, setStartTimestamp] = useState(null);\n  const [endTimestamp, setEndTimestamp] = useState(null);\n  const chartRef = useRef(null);\n  const fetchRoomData = useCallback(async () => {\n    try {\n      const roomData = await roomService.getRoomData(roomCode);\n      if (roomData && roomData.selectedCrypto) {\n        setCrypto(roomData.selectedCrypto);\n        setPlayers(roomData.players || []);\n        setRaceStarted(roomData.started);\n        setWinner(roomData.winner);\n        if (roomData.priceData && roomData.priceData.length > 0) {\n          setPriceData(roomData.priceData);\n          setInitialPrice(roomData.priceData[0].price);\n          setCurrentPrice(roomData.priceData[roomData.priceData.length - 1].price);\n          if (!roomData.started) {\n            // If the race has ended\n            setFinalPrice(roomData.priceData[roomData.priceData.length - 1].price);\n            setEndTimestamp(new Date(roomData.priceData[roomData.priceData.length - 1].timestamp));\n          }\n        }\n        if (roomData.started) {\n          const elapsedTime = Math.floor((Date.now() - new Date(roomData.startTime).getTime()) / 1000);\n          setTimeLeft(Math.max(0, RACE_DURATION / 1000 - elapsedTime));\n          setStartTimestamp(new Date(roomData.startTime));\n        }\n      } else {\n        setError('Failed to load room data. The room might not exist or no cryptocurrency was selected.');\n      }\n      setIsLoading(false);\n    } catch (err) {\n      console.error('Error fetching room data:', err);\n      setError('An error occurred while loading the room data.');\n      setIsLoading(false);\n    }\n  }, [roomCode]);\n  useEffect(() => {\n    fetchRoomData();\n    // Only update room data every 5 seconds to reduce unnecessary updates\n    const interval = setInterval(fetchRoomData, 5000);\n    return () => clearInterval(interval);\n  }, [fetchRoomData]);\n  useEffect(() => {\n    let interval;\n    if (raceStarted && timeLeft > 0) {\n      interval = setInterval(async () => {\n        try {\n          const currentPriceData = await fetchCurrentPrice();\n          if (currentPriceData !== null) {\n            setTimeLeft(prevTime => {\n              if (prevTime <= 1) {\n                clearInterval(interval);\n                endRace();\n                return 0;\n              }\n              return prevTime - 1;\n            });\n            setCurrentPrice(currentPriceData.price);\n            setPriceData(prevData => {\n              const newData = [...prevData, currentPriceData];\n              if (isHost) {\n                roomService.updateRaceData(roomCode, newData);\n              }\n              return newData;\n            });\n          }\n        } catch (error) {\n          console.error('Error updating price:', error);\n          setError('Failed to update the current price.');\n        }\n      }, 1000); // Update every second\n    }\n    return () => {\n      if (interval) {\n        clearInterval(interval);\n      }\n    };\n  }, [raceStarted, timeLeft, roomCode, isHost, crypto]);\n  const startRace = async () => {\n    setRaceStarted(true);\n    setWinner(null);\n    setTimeLeft(RACE_DURATION / 1000);\n    setPriceData([]);\n    const startTime = new Date();\n    setStartTimestamp(startTime);\n    try {\n      const initialPriceData = await fetchCurrentPrice();\n      if (initialPriceData !== null) {\n        setInitialPrice(initialPriceData.price);\n        setCurrentPrice(initialPriceData.price);\n        setPriceData([initialPriceData]);\n        roomService.startRace(roomCode, startTime, [initialPriceData]);\n      }\n    } catch (error) {\n      console.error('Error starting race:', error);\n      setError('Failed to start the race. Please try again.');\n      setRaceStarted(false);\n    }\n  };\n  const fetchCurrentPrice = async () => {\n    if (!crypto || !crypto.symbol) {\n      throw new Error('No cryptocurrency selected for this race.');\n    }\n    const response = await fetch(`https://min-api.cryptocompare.com/data/price?fsym=${crypto.symbol}&tsyms=USD`);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    const price = data.USD;\n    if (price === undefined) {\n      throw new Error('Price data not available');\n    }\n    const timestamp = new Date();\n    console.log(`Fetched price for ${crypto.symbol}: $${price} at ${timestamp.toISOString()}`);\n    return {\n      time: RACE_DURATION / 1000 - timeLeft,\n      price: price,\n      timestamp: timestamp.toISOString()\n    };\n  };\n  const endRace = async () => {\n    console.log(\"Ending race...\");\n    setRaceStarted(false);\n    try {\n      const finalPriceData = await fetchCurrentPrice();\n      const endTimestamp = new Date(finalPriceData.timestamp);\n      const finalPrice = finalPriceData.price;\n      console.log(\"Final price:\", finalPrice, \"End time:\", endTimestamp);\n      setEndTimestamp(endTimestamp);\n      setFinalPrice(finalPrice);\n      setCurrentPrice(finalPrice);\n      setPriceData(prevData => {\n        const newData = [...prevData, finalPriceData];\n        if (isHost) {\n          roomService.updateRaceData(roomCode, newData);\n        }\n        return newData;\n      });\n      console.log(\"Players:\", players);\n      const winningPlayer = players.reduce((closest, player) => {\n        if (player.prediction === null) return closest;\n        const currentDiff = Math.abs(player.prediction - finalPrice);\n        const closestDiff = Math.abs(closest.prediction - finalPrice);\n        return currentDiff < closestDiff ? player : closest;\n      }, {\n        name: 'No winner',\n        prediction: Infinity\n      });\n      console.log(\"Winning player:\", winningPlayer);\n      setWinner(winningPlayer);\n      setWinnerInfo({\n        name: winningPlayer.name,\n        prediction: winningPlayer.prediction,\n        finalPrice: finalPrice\n      });\n      if (isHost) {\n        roomService.updateWinner(roomCode, winningPlayer.name, winningPlayer.prediction, finalPrice);\n      }\n      console.log(\"Race ended. Final price:\", finalPrice, \"End time:\", endTimestamp, \"Winner:\", winningPlayer.name);\n    } catch (error) {\n      console.error('Error ending race:', error);\n      setError('Failed to end the race properly.');\n    }\n  };\n  const submitPrediction = () => {\n    if (prediction && !isNaN(prediction)) {\n      const updatedPrediction = parseFloat(prediction);\n      roomService.updatePlayerPrediction(roomCode, playerName, updatedPrediction);\n      setPlayers(prevPlayers => prevPlayers.map(player => player.name === playerName ? {\n        ...player,\n        prediction: updatedPrediction\n      } : player));\n      setPrediction('');\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center bg-gray-900 text-red-500\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-8 bg-gray-800 rounded-lg shadow-xl max-w-md w-full border border-red-500\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold mb-4\",\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gray-900 text-cyan-300\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-8 bg-gray-800 rounded-lg shadow-xl max-w-4xl w-full border border-cyan-500\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-4xl font-bold mb-6 text-center text-cyan-400 animate-pulse\",\n        children: \"Crypto Race 2077\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 text-center\",\n        children: [\"Room Code: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-bold text-pink-500\",\n          children: roomCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 54\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-2xl font-bold text-yellow-400\",\n          children: crypto && crypto.name ? `${crypto.name} (${crypto.symbol ? crypto.symbol.toUpperCase() : 'N/A'})` : 'No cryptocurrency selected'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), !raceStarted && crypto && /*#__PURE__*/_jsxDEV(LivePriceDisplay, {\n          crypto: crypto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 38\n        }, this), initialPrice && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg\",\n          children: [\"Starting Price: $\", initialPrice.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 28\n        }, this), currentPrice && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg\",\n          children: [\"Current Price: $\", currentPrice.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 28\n        }, this), finalPrice && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg\",\n          children: [\"Final Price: $\", finalPrice.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 26\n        }, this), startTimestamp && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm\",\n          children: [\"Start Time: \", startTimestamp.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 30\n        }, this), endTimestamp && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm\",\n          children: [\"End Time: \", endTimestamp.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 flex justify-center\",\n        children: [isHost && !raceStarted && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startRace,\n          className: \"px-6 py-3 bg-pink-600 text-white rounded-full hover:bg-pink-700 transition duration-300 ease-in-out transform hover:-translate-y-1 hover:scale-110 shadow-lg shadow-pink-500/50\",\n          children: \"Initiate Race\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this), raceStarted && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-2xl font-semibold text-yellow-400\",\n          children: [\"Time left: \", timeLeft, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), !raceStarted && !winner && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 flex justify-center items-center space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          placeholder: \"Your price prediction\",\n          value: prediction,\n          onChange: e => setPrediction(e.target.value),\n          className: \"p-2 border rounded bg-gray-700 text-cyan-300 border-cyan-500 placeholder-cyan-600 focus:outline-none focus:ring-2 focus:ring-pink-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: submitPrediction,\n          className: \"px-4 py-2 bg-cyan-600 text-white rounded hover:bg-cyan-700 transition duration-300 ease-in-out\",\n          children: \"Submit Prediction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 h-64\",\n        children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: \"100%\",\n          children: /*#__PURE__*/_jsxDEV(LineChart, {\n            data: priceData,\n            margin: {\n              top: 5,\n              right: 30,\n              left: 20,\n              bottom: 5\n            },\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"time\",\n              label: {\n                value: 'Time (s)',\n                position: 'insideBottomRight',\n                offset: -10\n              },\n              domain: [0, 60]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              label: {\n                value: 'Price (USD)',\n                angle: -90,\n                position: 'insideLeft'\n              },\n              domain: ['auto', 'auto']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              labelFormatter: value => `Time: ${value}s`,\n              formatter: (value, name, props) => [`$${value.toFixed(2)}`, name, `Timestamp: ${new Date(props.payload.timestamp).toLocaleString()}`]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: \"price\",\n              stroke: \"#8884d8\",\n              dot: false,\n              strokeWidth: 2,\n              animationDuration: 300\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 15\n            }, this), players.map((player, index) => /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: () => player.prediction,\n              stroke: `hsl(${index * 137.5 % 360}, 70%, 50%)`,\n              strokeDasharray: \"5 5\",\n              strokeWidth: 2,\n              name: `${player.name}'s Prediction`\n            }, player.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold mb-2 text-pink-400\",\n          children: \"Racers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: players.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between bg-gray-700 p-2 rounded border border-pink-700\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-cyan-300\",\n              children: player.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-yellow-400\",\n              children: player.prediction ? `$${player.prediction.toFixed(2)}` : 'No prediction yet'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, this), winner && player.name === winner.name && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ml-2 text-2xl\",\n              children: \"\\uD83C\\uDFC6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 59\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), winner && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl font-bold text-center bg-yellow-600 text-black p-4 rounded-lg animate-pulse\",\n        children: winner.name && winner.name !== 'No winner' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"Winner: \", winner.name, \" \\uD83C\\uDFC6\"]\n        }, void 0, true) : winner.name === 'No winner' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"No winner this time!\"\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"Winner determined, but name is missing \\uD83C\\uDFC6\"\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 5\n      }, this), !winner && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl font-bold text-center bg-gray-600 text-white p-4 rounded-lg\",\n        children: \"Waiting for race to end...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 5\n  }, this);\n};\n_s2(CryptoChickenRace, \"qXDssEnfq3YFvyJ3X57tzn+g8pk=\");\n_c2 = CryptoChickenRace;\nexport default CryptoChickenRace;\nvar _c, _c2;\n$RefreshReg$(_c, \"LivePriceDisplay\");\n$RefreshReg$(_c2, \"CryptoChickenRace\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","roomService","LoadingScreen","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","RACE_DURATION","UPDATE_INTERVAL","LivePriceDisplay","crypto","_s","livePrice","setLivePrice","fetchLivePrice","response","fetch","symbol","ok","Error","status","data","json","USD","error","console","interval","setInterval","clearInterval","className","children","toFixed","fileName","_jsxFileName","lineNumber","columnNumber","_c","CryptoChickenRace","roomCode","playerName","isHost","_s2","setCrypto","players","setPlayers","raceStarted","setRaceStarted","winner","setWinner","winnerInfo","setWinnerInfo","name","prediction","finalPrice","timeLeft","setTimeLeft","isLoading","setIsLoading","setPrediction","initialPrice","setInitialPrice","currentPrice","setCurrentPrice","setFinalPrice","setError","priceData","setPriceData","startTimestamp","setStartTimestamp","endTimestamp","setEndTimestamp","chartRef","fetchRoomData","roomData","getRoomData","selectedCrypto","started","length","price","Date","timestamp","elapsedTime","Math","floor","now","startTime","getTime","max","err","currentPriceData","fetchCurrentPrice","prevTime","endRace","prevData","newData","updateRaceData","startRace","initialPriceData","undefined","log","toISOString","time","finalPriceData","winningPlayer","reduce","closest","player","currentDiff","abs","closestDiff","Infinity","updateWinner","submitPrediction","isNaN","updatedPrediction","parseFloat","updatePlayerPrediction","prevPlayers","map","toUpperCase","toLocaleString","onClick","type","step","placeholder","value","onChange","e","target","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","label","position","offset","domain","angle","labelFormatter","formatter","props","payload","stroke","dot","strokeWidth","animationDuration","index","_c2","$RefreshReg$"],"sources":["F:/crypto-chicken-run/src/components/CryptoChickenRace.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport * as roomService from '../services/roomService';\r\nimport LoadingScreen from './LoadingScreen';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\nconst RACE_DURATION = 60000; // 60 seconds\r\nconst UPDATE_INTERVAL = 1000; // 1 second\r\n\r\nconst LivePriceDisplay = ({ crypto }) => {\r\n  const [livePrice, setLivePrice] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchLivePrice = async () => {\r\n      try {\r\n        const response = await fetch(`https://min-api.cryptocompare.com/data/price?fsym=${crypto.symbol}&tsyms=USD`);\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        setLivePrice(data.USD);\r\n      } catch (error) {\r\n        console.error('Error fetching live price:', error);\r\n      }\r\n    };\r\n\r\n    fetchLivePrice();\r\n    const interval = setInterval(fetchLivePrice, 5000); // Update every 5 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, [crypto]);\r\n\r\n  return (\r\n    <div className=\"text-xl font-bold text-yellow-400 mb-4\">\r\n      {livePrice ? `Live Price: $${livePrice.toFixed(2)}` : 'Fetching live price...'}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CryptoChickenRace = ({ roomCode, playerName, isHost }) => {\r\n  const [crypto, setCrypto] = useState(null);\r\n  const [players, setPlayers] = useState([]);\r\n  const [raceStarted, setRaceStarted] = useState(false);\r\n  const [winner, setWinner] = useState(null);\r\n  const [winnerInfo, setWinnerInfo] = useState({ name: null, prediction: null, finalPrice: null });  const [timeLeft, setTimeLeft] = useState(RACE_DURATION / 1000);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [prediction, setPrediction] = useState('');\r\n  const [initialPrice, setInitialPrice] = useState(null);\r\n  const [currentPrice, setCurrentPrice] = useState(null);\r\n  const [finalPrice, setFinalPrice] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [priceData, setPriceData] = useState([]);\r\n  const [startTimestamp, setStartTimestamp] = useState(null);\r\n  const [endTimestamp, setEndTimestamp] = useState(null);\r\n  const chartRef = useRef(null);\r\n\r\n  const fetchRoomData = useCallback(async () => {\r\n    try {\r\n      const roomData = await roomService.getRoomData(roomCode);\r\n      if (roomData && roomData.selectedCrypto) {\r\n        setCrypto(roomData.selectedCrypto);\r\n        setPlayers(roomData.players || []);\r\n        setRaceStarted(roomData.started);\r\n        setWinner(roomData.winner);\r\n        if (roomData.priceData && roomData.priceData.length > 0) {\r\n          setPriceData(roomData.priceData);\r\n          setInitialPrice(roomData.priceData[0].price);\r\n          setCurrentPrice(roomData.priceData[roomData.priceData.length - 1].price);\r\n          \r\n          if (!roomData.started) {  // If the race has ended\r\n            setFinalPrice(roomData.priceData[roomData.priceData.length - 1].price);\r\n            setEndTimestamp(new Date(roomData.priceData[roomData.priceData.length - 1].timestamp));\r\n          }\r\n        }\r\n        if (roomData.started) {\r\n          const elapsedTime = Math.floor((Date.now() - new Date(roomData.startTime).getTime()) / 1000);\r\n          setTimeLeft(Math.max(0, RACE_DURATION / 1000 - elapsedTime));\r\n          setStartTimestamp(new Date(roomData.startTime));\r\n        }\r\n      } else {\r\n        setError('Failed to load room data. The room might not exist or no cryptocurrency was selected.');\r\n      }\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      console.error('Error fetching room data:', err);\r\n      setError('An error occurred while loading the room data.');\r\n      setIsLoading(false);\r\n    }\r\n  }, [roomCode]);\r\n\r\n  useEffect(() => {\r\n    fetchRoomData();\r\n    // Only update room data every 5 seconds to reduce unnecessary updates\r\n    const interval = setInterval(fetchRoomData, 5000);\r\n    return () => clearInterval(interval);\r\n  }, [fetchRoomData]);\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n    if (raceStarted && timeLeft > 0) {\r\n      interval = setInterval(async () => {\r\n        try {\r\n          const currentPriceData = await fetchCurrentPrice();\r\n          if (currentPriceData !== null) {\r\n            setTimeLeft((prevTime) => {\r\n              if (prevTime <= 1) {\r\n                clearInterval(interval);\r\n                endRace();\r\n                return 0;\r\n              }\r\n              return prevTime - 1;\r\n            });\r\n  \r\n            setCurrentPrice(currentPriceData.price);\r\n            setPriceData(prevData => {\r\n              const newData = [...prevData, currentPriceData];\r\n              if (isHost) {\r\n                roomService.updateRaceData(roomCode, newData);\r\n              }\r\n              return newData;\r\n            });\r\n          }\r\n        } catch (error) {\r\n          console.error('Error updating price:', error);\r\n          setError('Failed to update the current price.');\r\n        }\r\n      }, 1000);  // Update every second\r\n    }\r\n  \r\n    return () => {\r\n      if (interval) {\r\n        clearInterval(interval);\r\n      }\r\n    };\r\n  }, [raceStarted, timeLeft, roomCode, isHost, crypto]);\r\n\r\n  const startRace = async () => {\r\n    setRaceStarted(true);\r\n    setWinner(null);\r\n    setTimeLeft(RACE_DURATION / 1000);\r\n    setPriceData([]);\r\n    const startTime = new Date();\r\n    setStartTimestamp(startTime);\r\n    try {\r\n      const initialPriceData = await fetchCurrentPrice();\r\n      if (initialPriceData !== null) {\r\n        setInitialPrice(initialPriceData.price);\r\n        setCurrentPrice(initialPriceData.price);\r\n        setPriceData([initialPriceData]);\r\n        roomService.startRace(roomCode, startTime, [initialPriceData]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error starting race:', error);\r\n      setError('Failed to start the race. Please try again.');\r\n      setRaceStarted(false);\r\n    }\r\n  };\r\n\r\n  const fetchCurrentPrice = async () => {\r\n    if (!crypto || !crypto.symbol) {\r\n      throw new Error('No cryptocurrency selected for this race.');\r\n    }\r\n    const response = await fetch(`https://min-api.cryptocompare.com/data/price?fsym=${crypto.symbol}&tsyms=USD`);\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    const data = await response.json();\r\n    const price = data.USD;\r\n    if (price === undefined) {\r\n      throw new Error('Price data not available');\r\n    }\r\n    const timestamp = new Date();\r\n    \r\n    console.log(`Fetched price for ${crypto.symbol}: $${price} at ${timestamp.toISOString()}`);\r\n    \r\n    return {\r\n      time: (RACE_DURATION / 1000) - timeLeft,\r\n      price: price,\r\n      timestamp: timestamp.toISOString(),\r\n    };\r\n  };\r\n\r\n  const endRace = async () => {\r\n    console.log(\"Ending race...\");\r\n    setRaceStarted(false);\r\n    try {\r\n      const finalPriceData = await fetchCurrentPrice();\r\n      const endTimestamp = new Date(finalPriceData.timestamp);\r\n      const finalPrice = finalPriceData.price;\r\n  \r\n      console.log(\"Final price:\", finalPrice, \"End time:\", endTimestamp);\r\n  \r\n      setEndTimestamp(endTimestamp);\r\n      setFinalPrice(finalPrice);\r\n      setCurrentPrice(finalPrice);\r\n  \r\n      setPriceData(prevData => {\r\n        const newData = [...prevData, finalPriceData];\r\n        if (isHost) {\r\n          roomService.updateRaceData(roomCode, newData);\r\n        }\r\n        return newData;\r\n      });\r\n  \r\n      console.log(\"Players:\", players);\r\n  \r\n      const winningPlayer = players.reduce((closest, player) => {\r\n        if (player.prediction === null) return closest;\r\n        const currentDiff = Math.abs(player.prediction - finalPrice);\r\n        const closestDiff = Math.abs(closest.prediction - finalPrice);\r\n        return currentDiff < closestDiff ? player : closest;\r\n      }, { name: 'No winner', prediction: Infinity });\r\n  \r\n      console.log(\"Winning player:\", winningPlayer);\r\n  \r\n      setWinner(winningPlayer);\r\n      setWinnerInfo({\r\n        name: winningPlayer.name,\r\n        prediction: winningPlayer.prediction,\r\n        finalPrice: finalPrice\r\n      });\r\n  \r\n      if (isHost) {\r\n        roomService.updateWinner(roomCode, winningPlayer.name, winningPlayer.prediction, finalPrice);\r\n      }\r\n  \r\n      console.log(\"Race ended. Final price:\", finalPrice, \"End time:\", endTimestamp, \"Winner:\", winningPlayer.name);\r\n  \r\n    } catch (error) {\r\n      console.error('Error ending race:', error);\r\n      setError('Failed to end the race properly.');\r\n    }\r\n  };\r\n\r\n  const submitPrediction = () => {\r\n    if (prediction && !isNaN(prediction)) {\r\n      const updatedPrediction = parseFloat(prediction);\r\n      roomService.updatePlayerPrediction(roomCode, playerName, updatedPrediction);\r\n      setPlayers(prevPlayers => \r\n        prevPlayers.map(player => \r\n          player.name === playerName ? { ...player, prediction: updatedPrediction } : player\r\n        )\r\n      );\r\n      setPrediction('');\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <LoadingScreen />;\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-900 text-red-500\">\r\n        <div className=\"p-8 bg-gray-800 rounded-lg shadow-xl max-w-md w-full border border-red-500\">\r\n          <h2 className=\"text-2xl font-bold mb-4\">Error</h2>\r\n          <p>{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-900 text-cyan-300\">\r\n      <div className=\"p-8 bg-gray-800 rounded-lg shadow-xl max-w-4xl w-full border border-cyan-500\">\r\n        <h2 className=\"text-4xl font-bold mb-6 text-center text-cyan-400 animate-pulse\">Crypto Race 2077</h2>\r\n        <div className=\"mb-4 text-center\">Room Code: <span className=\"font-bold text-pink-500\">{roomCode}</span></div>\r\n        <div className=\"mb-6 text-center\">\r\n          <h3 className=\"text-2xl font-bold text-yellow-400\">\r\n            {crypto && crypto.name ? \r\n              `${crypto.name} (${crypto.symbol ? crypto.symbol.toUpperCase() : 'N/A'})` : \r\n              'No cryptocurrency selected'}\r\n          </h3>\r\n          {!raceStarted && crypto && <LivePriceDisplay crypto={crypto} />}\r\n          {initialPrice && <p className=\"text-lg\">Starting Price: ${initialPrice.toFixed(2)}</p>}\r\n          {currentPrice && <p className=\"text-lg\">Current Price: ${currentPrice.toFixed(2)}</p>}\r\n          {finalPrice && <p className=\"text-lg\">Final Price: ${finalPrice.toFixed(2)}</p>}\r\n          {startTimestamp && <p className=\"text-sm\">Start Time: {startTimestamp.toLocaleString()}</p>}\r\n          {endTimestamp && <p className=\"text-sm\">End Time: {endTimestamp.toLocaleString()}</p>}\r\n        </div>\r\n        <div className=\"mb-6 flex justify-center\">\r\n          {isHost && !raceStarted && (\r\n            <button \r\n              onClick={startRace} \r\n              className=\"px-6 py-3 bg-pink-600 text-white rounded-full hover:bg-pink-700 transition duration-300 ease-in-out transform hover:-translate-y-1 hover:scale-110 shadow-lg shadow-pink-500/50\"\r\n            >\r\n              Initiate Race\r\n            </button>\r\n          )}\r\n          {raceStarted && <span className=\"text-2xl font-semibold text-yellow-400\">Time left: {timeLeft}s</span>}\r\n        </div>\r\n        {!raceStarted && !winner && (\r\n          <div className=\"mb-6 flex justify-center items-center space-x-4\">\r\n            <input\r\n              type=\"number\"\r\n              step=\"0.01\"\r\n              placeholder=\"Your price prediction\"\r\n              value={prediction}\r\n              onChange={(e) => setPrediction(e.target.value)}\r\n              className=\"p-2 border rounded bg-gray-700 text-cyan-300 border-cyan-500 placeholder-cyan-600 focus:outline-none focus:ring-2 focus:ring-pink-500\"\r\n            />\r\n            <button\r\n              onClick={submitPrediction}\r\n              className=\"px-4 py-2 bg-cyan-600 text-white rounded hover:bg-cyan-700 transition duration-300 ease-in-out\"\r\n            >\r\n              Submit Prediction\r\n            </button>\r\n          </div>\r\n        )}\r\n        <div className=\"mb-6 h-64\">\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <LineChart\r\n              data={priceData}\r\n              margin={{\r\n                top: 5,\r\n                right: 30,\r\n                left: 20,\r\n                bottom: 5,\r\n              }}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis \r\n                dataKey=\"time\" \r\n                label={{ value: 'Time (s)', position: 'insideBottomRight', offset: -10 }} \r\n                domain={[0, 60]}\r\n              />\r\n              <YAxis \r\n                label={{ value: 'Price (USD)', angle: -90, position: 'insideLeft' }} \r\n                domain={['auto', 'auto']}\r\n              />\r\n              <Tooltip \r\n                labelFormatter={(value) => `Time: ${value}s`}\r\n                formatter={(value, name, props) => [\r\n                  `$${value.toFixed(2)}`, \r\n                  name, \r\n                  `Timestamp: ${new Date(props.payload.timestamp).toLocaleString()}`\r\n                ]}\r\n              />\r\n              <Legend />\r\n              <Line \r\n                type=\"monotone\" \r\n                dataKey=\"price\" \r\n                stroke=\"#8884d8\" \r\n                dot={false} \r\n                strokeWidth={2}\r\n                animationDuration={300}\r\n              />\r\n              {players.map((player, index) => (\r\n                <Line\r\n                  key={player.name}\r\n                  type=\"monotone\"\r\n                  dataKey={() => player.prediction}\r\n                  stroke={`hsl(${index * 137.5 % 360}, 70%, 50%)`}\r\n                  strokeDasharray=\"5 5\"\r\n                  strokeWidth={2}\r\n                  name={`${player.name}'s Prediction`}\r\n                />\r\n              ))}\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n        <div className=\"mb-6\">\r\n          <h3 className=\"text-xl font-bold mb-2 text-pink-400\">Racers</h3>\r\n          <div className=\"space-y-2\">\r\n            {players.map((player, index) => (\r\n              <div key={index} className=\"flex items-center justify-between bg-gray-700 p-2 rounded border border-pink-700\">\r\n                <span className=\"text-cyan-300\">{player.name}</span>\r\n                <span className=\"text-yellow-400\">\r\n                  {player.prediction ? `$${player.prediction.toFixed(2)}` : 'No prediction yet'}\r\n                </span>\r\n                {winner && player.name === winner.name && <span className=\"ml-2 text-2xl\">🏆</span>}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        {winner && (\r\n    <div className=\"text-2xl font-bold text-center bg-yellow-600 text-black p-4 rounded-lg animate-pulse\">\r\n      {winner.name && winner.name !== 'No winner' ? (\r\n        <>Winner: {winner.name} 🏆</>\r\n      ) : winner.name === 'No winner' ? (\r\n        <>No winner this time!</>\r\n      ) : (\r\n        <>Winner determined, but name is missing 🏆</>\r\n      )}\r\n    </div>\r\n  )}\r\n  {!winner && (\r\n    <div className=\"text-2xl font-bold text-center bg-gray-600 text-white p-4 rounded-lg\">\r\n      Waiting for race to end...\r\n    </div>\r\n  )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoChickenRace;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}