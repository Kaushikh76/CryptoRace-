{"ast":null,"code":"const STORAGE_KEY = 'crypto_race_rooms';\nconst getRooms = () => {\n  const rooms = localStorage.getItem(STORAGE_KEY);\n  return rooms ? JSON.parse(rooms) : {};\n};\nconst saveRooms = rooms => {\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(rooms));\n};\nexport const createRoom = (roomCode, playerName) => {\n  const rooms = getRooms();\n  rooms[roomCode] = {\n    players: [{\n      name: playerName,\n      selection: null\n    }],\n    started: false\n  };\n  saveRooms(rooms);\n};\nexport const joinRoom = (roomCode, playerName) => {\n  const rooms = getRooms();\n  if (rooms[roomCode] && !rooms[roomCode].started) {\n    rooms[roomCode].players.push({\n      name: playerName,\n      selection: null\n    });\n    saveRooms(rooms);\n    return true;\n  }\n  return false;\n};\nexport const getRoomPlayers = roomCode => {\n  const rooms = getRooms();\n  return rooms[roomCode] ? rooms[roomCode].players : null;\n};\nexport const updatePlayerSelection = (roomCode, playerName, selection) => {\n  const rooms = getRooms();\n  if (rooms[roomCode]) {\n    const playerIndex = rooms[roomCode].players.findIndex(p => p.name === playerName);\n    if (playerIndex !== -1) {\n      rooms[roomCode].players[playerIndex].selection = selection;\n      saveRooms(rooms);\n    }\n  }\n};\nexport const startRace = roomCode => {\n  const rooms = getRooms();\n  if (rooms[roomCode]) {\n    rooms[roomCode].started = true;\n    saveRooms(rooms);\n  }\n};","map":{"version":3,"names":["STORAGE_KEY","getRooms","rooms","localStorage","getItem","JSON","parse","saveRooms","setItem","stringify","createRoom","roomCode","playerName","players","name","selection","started","joinRoom","push","getRoomPlayers","updatePlayerSelection","playerIndex","findIndex","p","startRace"],"sources":["F:/crypto-chicken-run/src/services/roomService.js"],"sourcesContent":["const STORAGE_KEY = 'crypto_race_rooms';\r\n\r\nconst getRooms = () => {\r\n  const rooms = localStorage.getItem(STORAGE_KEY);\r\n  return rooms ? JSON.parse(rooms) : {};\r\n};\r\n\r\nconst saveRooms = (rooms) => {\r\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(rooms));\r\n};\r\n\r\nexport const createRoom = (roomCode, playerName) => {\r\n  const rooms = getRooms();\r\n  rooms[roomCode] = { players: [{ name: playerName, selection: null }], started: false };\r\n  saveRooms(rooms);\r\n};\r\n\r\nexport const joinRoom = (roomCode, playerName) => {\r\n  const rooms = getRooms();\r\n  if (rooms[roomCode] && !rooms[roomCode].started) {\r\n    rooms[roomCode].players.push({ name: playerName, selection: null });\r\n    saveRooms(rooms);\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const getRoomPlayers = (roomCode) => {\r\n  const rooms = getRooms();\r\n  return rooms[roomCode] ? rooms[roomCode].players : null;\r\n};\r\n\r\nexport const updatePlayerSelection = (roomCode, playerName, selection) => {\r\n  const rooms = getRooms();\r\n  if (rooms[roomCode]) {\r\n    const playerIndex = rooms[roomCode].players.findIndex(p => p.name === playerName);\r\n    if (playerIndex !== -1) {\r\n      rooms[roomCode].players[playerIndex].selection = selection;\r\n      saveRooms(rooms);\r\n    }\r\n  }\r\n};\r\n\r\nexport const startRace = (roomCode) => {\r\n  const rooms = getRooms();\r\n  if (rooms[roomCode]) {\r\n    rooms[roomCode].started = true;\r\n    saveRooms(rooms);\r\n  }\r\n};"],"mappings":"AAAA,MAAMA,WAAW,GAAG,mBAAmB;AAEvC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAACJ,WAAW,CAAC;EAC/C,OAAOE,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,GAAG,CAAC,CAAC;AACvC,CAAC;AAED,MAAMK,SAAS,GAAIL,KAAK,IAAK;EAC3BC,YAAY,CAACK,OAAO,CAACR,WAAW,EAAEK,IAAI,CAACI,SAAS,CAACP,KAAK,CAAC,CAAC;AAC1D,CAAC;AAED,OAAO,MAAMQ,UAAU,GAAGA,CAACC,QAAQ,EAAEC,UAAU,KAAK;EAClD,MAAMV,KAAK,GAAGD,QAAQ,CAAC,CAAC;EACxBC,KAAK,CAACS,QAAQ,CAAC,GAAG;IAAEE,OAAO,EAAE,CAAC;MAAEC,IAAI,EAAEF,UAAU;MAAEG,SAAS,EAAE;IAAK,CAAC,CAAC;IAAEC,OAAO,EAAE;EAAM,CAAC;EACtFT,SAAS,CAACL,KAAK,CAAC;AAClB,CAAC;AAED,OAAO,MAAMe,QAAQ,GAAGA,CAACN,QAAQ,EAAEC,UAAU,KAAK;EAChD,MAAMV,KAAK,GAAGD,QAAQ,CAAC,CAAC;EACxB,IAAIC,KAAK,CAACS,QAAQ,CAAC,IAAI,CAACT,KAAK,CAACS,QAAQ,CAAC,CAACK,OAAO,EAAE;IAC/Cd,KAAK,CAACS,QAAQ,CAAC,CAACE,OAAO,CAACK,IAAI,CAAC;MAAEJ,IAAI,EAAEF,UAAU;MAAEG,SAAS,EAAE;IAAK,CAAC,CAAC;IACnER,SAAS,CAACL,KAAK,CAAC;IAChB,OAAO,IAAI;EACb;EACA,OAAO,KAAK;AACd,CAAC;AAED,OAAO,MAAMiB,cAAc,GAAIR,QAAQ,IAAK;EAC1C,MAAMT,KAAK,GAAGD,QAAQ,CAAC,CAAC;EACxB,OAAOC,KAAK,CAACS,QAAQ,CAAC,GAAGT,KAAK,CAACS,QAAQ,CAAC,CAACE,OAAO,GAAG,IAAI;AACzD,CAAC;AAED,OAAO,MAAMO,qBAAqB,GAAGA,CAACT,QAAQ,EAAEC,UAAU,EAAEG,SAAS,KAAK;EACxE,MAAMb,KAAK,GAAGD,QAAQ,CAAC,CAAC;EACxB,IAAIC,KAAK,CAACS,QAAQ,CAAC,EAAE;IACnB,MAAMU,WAAW,GAAGnB,KAAK,CAACS,QAAQ,CAAC,CAACE,OAAO,CAACS,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACT,IAAI,KAAKF,UAAU,CAAC;IACjF,IAAIS,WAAW,KAAK,CAAC,CAAC,EAAE;MACtBnB,KAAK,CAACS,QAAQ,CAAC,CAACE,OAAO,CAACQ,WAAW,CAAC,CAACN,SAAS,GAAGA,SAAS;MAC1DR,SAAS,CAACL,KAAK,CAAC;IAClB;EACF;AACF,CAAC;AAED,OAAO,MAAMsB,SAAS,GAAIb,QAAQ,IAAK;EACrC,MAAMT,KAAK,GAAGD,QAAQ,CAAC,CAAC;EACxB,IAAIC,KAAK,CAACS,QAAQ,CAAC,EAAE;IACnBT,KAAK,CAACS,QAAQ,CAAC,CAACK,OAAO,GAAG,IAAI;IAC9BT,SAAS,CAACL,KAAK,CAAC;EAClB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}