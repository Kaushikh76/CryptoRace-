{"ast":null,"code":"var _jsxFileName = \"F:\\\\crypto-chicken-run\\\\src\\\\components\\\\CryptoChickenRace.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RACE_DURATION = 60000; // 60 seconds\nconst UPDATE_INTERVAL = 1000; // 1 second\nconst TRACK_LENGTH = 100;\nconst CryptoChickenRace = () => {\n  _s();\n  const [cryptos, setCryptos] = useState([{\n    id: 'bitcoin',\n    name: 'Bitcoin',\n    color: '#f7931a',\n    position: 0,\n    priceHistory: []\n  }, {\n    id: 'ethereum',\n    name: 'Ethereum',\n    color: '#62688f',\n    position: 0,\n    priceHistory: []\n  }, {\n    id: 'dogecoin',\n    name: 'Dogecoin',\n    color: '#c3a634',\n    position: 0,\n    priceHistory: []\n  }]);\n  const [raceStarted, setRaceStarted] = useState(false);\n  const [winner, setWinner] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(RACE_DURATION / 1000);\n  useEffect(() => {\n    if (raceStarted) {\n      const interval = setInterval(() => {\n        updatePrices();\n        setTimeLeft(prevTime => {\n          if (prevTime <= 1) {\n            clearInterval(interval);\n            endRace();\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, UPDATE_INTERVAL);\n      return () => clearInterval(interval);\n    }\n  }, [raceStarted]);\n  const startRace = () => {\n    setRaceStarted(true);\n    setWinner(null);\n    setTimeLeft(RACE_DURATION / 1000);\n    setCryptos(cryptos.map(crypto => ({\n      ...crypto,\n      position: 0,\n      priceHistory: []\n    })));\n  };\n  const updatePrices = async () => {\n    const ids = cryptos.map(crypto => crypto.id).join(',');\n    try {\n      const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${ids}&vs_currencies=usd`);\n      const data = await response.json();\n      setCryptos(prevCryptos => prevCryptos.map(crypto => {\n        var _crypto$priceHistory;\n        const newPrice = data[crypto.id].usd;\n        const lastPrice = ((_crypto$priceHistory = crypto.priceHistory[crypto.priceHistory.length - 1]) === null || _crypto$priceHistory === void 0 ? void 0 : _crypto$priceHistory.price) || newPrice;\n        const priceChange = (newPrice - lastPrice) / lastPrice * 100;\n        const newPosition = Math.min(TRACK_LENGTH, Math.max(0, crypto.position + priceChange));\n        return {\n          ...crypto,\n          position: newPosition,\n          priceHistory: [...crypto.priceHistory, {\n            time: Date.now(),\n            price: newPrice\n          }]\n        };\n      }));\n    } catch (error) {\n      console.error('Error fetching prices:', error);\n    }\n  };\n  const endRace = () => {\n    setRaceStarted(false);\n    const winner = cryptos.reduce((prev, current) => prev.position > current.position ? prev : current);\n    setWinner(winner);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 bg-white rounded shadow-md max-w-4xl mx-auto mt-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Crypto Chicken Race\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startRace,\n        disabled: raceStarted,\n        className: \"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 disabled:bg-gray-400\",\n        children: raceStarted ? 'Race in Progress' : 'Start Race'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), raceStarted && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-4\",\n        children: [\"Time left: \", timeLeft, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 h-40 relative bg-gray-200\",\n      children: cryptos.map((crypto, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          left: `${crypto.position}%`,\n          top: `${index * 33}%`,\n          transition: 'left 1s linear'\n        },\n        children: [\"\\uD83D\\uDC14 \", crypto.name]\n      }, crypto.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), winner && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 text-xl font-bold\",\n      children: [\"Winner: \", winner.name, \" \\uD83C\\uDFC6\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: cryptos[0].priceHistory,\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"time\",\n          type: \"number\",\n          domain: ['dataMin', 'dataMax'],\n          tickFormatter: unixTime => new Date(unixTime).toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          labelFormatter: label => new Date(label).toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), cryptos.map(crypto => /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"price\",\n          stroke: crypto.color,\n          name: crypto.name,\n          data: crypto.priceHistory\n        }, crypto.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(CryptoChickenRace, \"puZ12UIFqPpQujrhn3ugg40NRao=\");\n_c = CryptoChickenRace;\nexport default CryptoChickenRace;\nvar _c;\n$RefreshReg$(_c, \"CryptoChickenRace\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","RACE_DURATION","UPDATE_INTERVAL","TRACK_LENGTH","CryptoChickenRace","_s","cryptos","setCryptos","id","name","color","position","priceHistory","raceStarted","setRaceStarted","winner","setWinner","timeLeft","setTimeLeft","interval","setInterval","updatePrices","prevTime","clearInterval","endRace","startRace","map","crypto","ids","join","response","fetch","data","json","prevCryptos","_crypto$priceHistory","newPrice","usd","lastPrice","length","price","priceChange","newPosition","Math","min","max","time","Date","now","error","console","reduce","prev","current","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","index","style","left","top","transition","width","height","dataKey","type","domain","tickFormatter","unixTime","toLocaleTimeString","labelFormatter","label","stroke","_c","$RefreshReg$"],"sources":["F:/crypto-chicken-run/src/components/CryptoChickenRace.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\nconst RACE_DURATION = 60000; // 60 seconds\r\nconst UPDATE_INTERVAL = 1000; // 1 second\r\nconst TRACK_LENGTH = 100;\r\n\r\nconst CryptoChickenRace = () => {\r\n  const [cryptos, setCryptos] = useState([\r\n    { id: 'bitcoin', name: 'Bitcoin', color: '#f7931a', position: 0, priceHistory: [] },\r\n    { id: 'ethereum', name: 'Ethereum', color: '#62688f', position: 0, priceHistory: [] },\r\n    { id: 'dogecoin', name: 'Dogecoin', color: '#c3a634', position: 0, priceHistory: [] },\r\n  ]);\r\n  const [raceStarted, setRaceStarted] = useState(false);\r\n  const [winner, setWinner] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(RACE_DURATION / 1000);\r\n\r\n  useEffect(() => {\r\n    if (raceStarted) {\r\n      const interval = setInterval(() => {\r\n        updatePrices();\r\n        setTimeLeft((prevTime) => {\r\n          if (prevTime <= 1) {\r\n            clearInterval(interval);\r\n            endRace();\r\n            return 0;\r\n          }\r\n          return prevTime - 1;\r\n        });\r\n      }, UPDATE_INTERVAL);\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [raceStarted]);\r\n\r\n  const startRace = () => {\r\n    setRaceStarted(true);\r\n    setWinner(null);\r\n    setTimeLeft(RACE_DURATION / 1000);\r\n    setCryptos(cryptos.map(crypto => ({ ...crypto, position: 0, priceHistory: [] })));\r\n  };\r\n\r\n  const updatePrices = async () => {\r\n    const ids = cryptos.map(crypto => crypto.id).join(',');\r\n    try {\r\n      const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${ids}&vs_currencies=usd`);\r\n      const data = await response.json();\r\n      \r\n      setCryptos(prevCryptos => \r\n        prevCryptos.map(crypto => {\r\n          const newPrice = data[crypto.id].usd;\r\n          const lastPrice = crypto.priceHistory[crypto.priceHistory.length - 1]?.price || newPrice;\r\n          const priceChange = ((newPrice - lastPrice) / lastPrice) * 100;\r\n          const newPosition = Math.min(TRACK_LENGTH, Math.max(0, crypto.position + priceChange));\r\n          \r\n          return {\r\n            ...crypto,\r\n            position: newPosition,\r\n            priceHistory: [...crypto.priceHistory, { time: Date.now(), price: newPrice }],\r\n          };\r\n        })\r\n      );\r\n    } catch (error) {\r\n      console.error('Error fetching prices:', error);\r\n    }\r\n  };\r\n\r\n  const endRace = () => {\r\n    setRaceStarted(false);\r\n    const winner = cryptos.reduce((prev, current) => \r\n      (prev.position > current.position) ? prev : current\r\n    );\r\n    setWinner(winner);\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 bg-white rounded shadow-md max-w-4xl mx-auto mt-10\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Crypto Chicken Race</h2>\r\n      <div className=\"mb-4\">\r\n        <button \r\n          onClick={startRace} \r\n          disabled={raceStarted}\r\n          className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 disabled:bg-gray-400\"\r\n        >\r\n          {raceStarted ? 'Race in Progress' : 'Start Race'}\r\n        </button>\r\n        {raceStarted && <span className=\"ml-4\">Time left: {timeLeft}s</span>}\r\n      </div>\r\n      <div className=\"mb-4 h-40 relative bg-gray-200\">\r\n        {cryptos.map((crypto, index) => (\r\n          <div \r\n            key={crypto.id}\r\n            style={{\r\n              position: 'absolute',\r\n              left: `${crypto.position}%`,\r\n              top: `${index * 33}%`,\r\n              transition: 'left 1s linear',\r\n            }}\r\n          >\r\n            🐔 {crypto.name}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {winner && (\r\n        <div className=\"mb-4 text-xl font-bold\">\r\n          Winner: {winner.name} 🏆\r\n        </div>\r\n      )}\r\n      <ResponsiveContainer width=\"100%\" height={300}>\r\n        <LineChart data={cryptos[0].priceHistory}>\r\n          <XAxis dataKey=\"time\" type=\"number\" domain={['dataMin', 'dataMax']} tickFormatter={(unixTime) => new Date(unixTime).toLocaleTimeString()} />\r\n          <YAxis />\r\n          <Tooltip labelFormatter={(label) => new Date(label).toLocaleTimeString()} />\r\n          <Legend />\r\n          {cryptos.map(crypto => (\r\n            <Line \r\n              key={crypto.id} \r\n              type=\"monotone\" \r\n              dataKey=\"price\" \r\n              stroke={crypto.color} \r\n              name={crypto.name} \r\n              data={crypto.priceHistory} \r\n            />\r\n          ))}\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoChickenRace;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,mBAAmB,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/F,MAAMC,aAAa,GAAG,KAAK,CAAC,CAAC;AAC7B,MAAMC,eAAe,GAAG,IAAI,CAAC,CAAC;AAC9B,MAAMC,YAAY,GAAG,GAAG;AAExB,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,CACrC;IAAEkB,EAAE,EAAE,SAAS;IAAEC,IAAI,EAAE,SAAS;IAAEC,KAAK,EAAE,SAAS;IAAEC,QAAQ,EAAE,CAAC;IAAEC,YAAY,EAAE;EAAG,CAAC,EACnF;IAAEJ,EAAE,EAAE,UAAU;IAAEC,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAE,SAAS;IAAEC,QAAQ,EAAE,CAAC;IAAEC,YAAY,EAAE;EAAG,CAAC,EACrF;IAAEJ,EAAE,EAAE,UAAU;IAAEC,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAE,SAAS;IAAEC,QAAQ,EAAE,CAAC;IAAEC,YAAY,EAAE;EAAG,CAAC,CACtF,CAAC;EACF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACyB,MAAM,EAAEC,SAAS,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAAC2B,QAAQ,EAAEC,WAAW,CAAC,GAAG5B,QAAQ,CAACW,aAAa,GAAG,IAAI,CAAC;EAE9DV,SAAS,CAAC,MAAM;IACd,IAAIsB,WAAW,EAAE;MACf,MAAMM,QAAQ,GAAGC,WAAW,CAAC,MAAM;QACjCC,YAAY,CAAC,CAAC;QACdH,WAAW,CAAEI,QAAQ,IAAK;UACxB,IAAIA,QAAQ,IAAI,CAAC,EAAE;YACjBC,aAAa,CAACJ,QAAQ,CAAC;YACvBK,OAAO,CAAC,CAAC;YACT,OAAO,CAAC;UACV;UACA,OAAOF,QAAQ,GAAG,CAAC;QACrB,CAAC,CAAC;MACJ,CAAC,EAAEpB,eAAe,CAAC;MAEnB,OAAO,MAAMqB,aAAa,CAACJ,QAAQ,CAAC;IACtC;EACF,CAAC,EAAE,CAACN,WAAW,CAAC,CAAC;EAEjB,MAAMY,SAAS,GAAGA,CAAA,KAAM;IACtBX,cAAc,CAAC,IAAI,CAAC;IACpBE,SAAS,CAAC,IAAI,CAAC;IACfE,WAAW,CAACjB,aAAa,GAAG,IAAI,CAAC;IACjCM,UAAU,CAACD,OAAO,CAACoB,GAAG,CAACC,MAAM,KAAK;MAAE,GAAGA,MAAM;MAAEhB,QAAQ,EAAE,CAAC;MAAEC,YAAY,EAAE;IAAG,CAAC,CAAC,CAAC,CAAC;EACnF,CAAC;EAED,MAAMS,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMO,GAAG,GAAGtB,OAAO,CAACoB,GAAG,CAACC,MAAM,IAAIA,MAAM,CAACnB,EAAE,CAAC,CAACqB,IAAI,CAAC,GAAG,CAAC;IACtD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qDAAqDH,GAAG,oBAAoB,CAAC;MAC1G,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC1B,UAAU,CAAC2B,WAAW,IACpBA,WAAW,CAACR,GAAG,CAACC,MAAM,IAAI;QAAA,IAAAQ,oBAAA;QACxB,MAAMC,QAAQ,GAAGJ,IAAI,CAACL,MAAM,CAACnB,EAAE,CAAC,CAAC6B,GAAG;QACpC,MAAMC,SAAS,GAAG,EAAAH,oBAAA,GAAAR,MAAM,CAACf,YAAY,CAACe,MAAM,CAACf,YAAY,CAAC2B,MAAM,GAAG,CAAC,CAAC,cAAAJ,oBAAA,uBAAnDA,oBAAA,CAAqDK,KAAK,KAAIJ,QAAQ;QACxF,MAAMK,WAAW,GAAI,CAACL,QAAQ,GAAGE,SAAS,IAAIA,SAAS,GAAI,GAAG;QAC9D,MAAMI,WAAW,GAAGC,IAAI,CAACC,GAAG,CAACzC,YAAY,EAAEwC,IAAI,CAACE,GAAG,CAAC,CAAC,EAAElB,MAAM,CAAChB,QAAQ,GAAG8B,WAAW,CAAC,CAAC;QAEtF,OAAO;UACL,GAAGd,MAAM;UACThB,QAAQ,EAAE+B,WAAW;UACrB9B,YAAY,EAAE,CAAC,GAAGe,MAAM,CAACf,YAAY,EAAE;YAAEkC,IAAI,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;YAAER,KAAK,EAAEJ;UAAS,CAAC;QAC9E,CAAC;MACH,CAAC,CACH,CAAC;IACH,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,MAAMzB,OAAO,GAAGA,CAAA,KAAM;IACpBV,cAAc,CAAC,KAAK,CAAC;IACrB,MAAMC,MAAM,GAAGT,OAAO,CAAC6C,MAAM,CAAC,CAACC,IAAI,EAAEC,OAAO,KACzCD,IAAI,CAACzC,QAAQ,GAAG0C,OAAO,CAAC1C,QAAQ,GAAIyC,IAAI,GAAGC,OAC9C,CAAC;IACDrC,SAAS,CAACD,MAAM,CAAC;EACnB,CAAC;EAED,oBACEf,OAAA;IAAKsD,SAAS,EAAC,wDAAwD;IAAAC,QAAA,gBACrEvD,OAAA;MAAIsD,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChE3D,OAAA;MAAKsD,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBvD,OAAA;QACE4D,OAAO,EAAEnC,SAAU;QACnBoC,QAAQ,EAAEhD,WAAY;QACtByC,SAAS,EAAC,iFAAiF;QAAAC,QAAA,EAE1F1C,WAAW,GAAG,kBAAkB,GAAG;MAAY;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,EACR9C,WAAW,iBAAIb,OAAA;QAAMsD,SAAS,EAAC,MAAM;QAAAC,QAAA,GAAC,aAAW,EAACtC,QAAQ,EAAC,GAAC;MAAA;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC,eACN3D,OAAA;MAAKsD,SAAS,EAAC,gCAAgC;MAAAC,QAAA,EAC5CjD,OAAO,CAACoB,GAAG,CAAC,CAACC,MAAM,EAAEmC,KAAK,kBACzB9D,OAAA;QAEE+D,KAAK,EAAE;UACLpD,QAAQ,EAAE,UAAU;UACpBqD,IAAI,EAAE,GAAGrC,MAAM,CAAChB,QAAQ,GAAG;UAC3BsD,GAAG,EAAE,GAAGH,KAAK,GAAG,EAAE,GAAG;UACrBI,UAAU,EAAE;QACd,CAAE;QAAAX,QAAA,GACH,eACI,EAAC5B,MAAM,CAAClB,IAAI;MAAA,GARVkB,MAAM,CAACnB,EAAE;QAAAgD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASX,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACL5C,MAAM,iBACLf,OAAA;MAAKsD,SAAS,EAAC,wBAAwB;MAAAC,QAAA,GAAC,UAC9B,EAACxC,MAAM,CAACN,IAAI,EAAC,eACvB;IAAA;MAAA+C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACN,eACD3D,OAAA,CAACF,mBAAmB;MAACqE,KAAK,EAAC,MAAM;MAACC,MAAM,EAAE,GAAI;MAAAb,QAAA,eAC5CvD,OAAA,CAACR,SAAS;QAACwC,IAAI,EAAE1B,OAAO,CAAC,CAAC,CAAC,CAACM,YAAa;QAAA2C,QAAA,gBACvCvD,OAAA,CAACN,KAAK;UAAC2E,OAAO,EAAC,MAAM;UAACC,IAAI,EAAC,QAAQ;UAACC,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,CAAE;UAACC,aAAa,EAAGC,QAAQ,IAAK,IAAI1B,IAAI,CAAC0B,QAAQ,CAAC,CAACC,kBAAkB,CAAC;QAAE;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC5I3D,OAAA,CAACL,KAAK;UAAA6D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACT3D,OAAA,CAACJ,OAAO;UAAC+E,cAAc,EAAGC,KAAK,IAAK,IAAI7B,IAAI,CAAC6B,KAAK,CAAC,CAACF,kBAAkB,CAAC;QAAE;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC5E3D,OAAA,CAACH,MAAM;UAAA2D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACTrD,OAAO,CAACoB,GAAG,CAACC,MAAM,iBACjB3B,OAAA,CAACP,IAAI;UAEH6E,IAAI,EAAC,UAAU;UACfD,OAAO,EAAC,OAAO;UACfQ,MAAM,EAAElD,MAAM,CAACjB,KAAM;UACrBD,IAAI,EAAEkB,MAAM,CAAClB,IAAK;UAClBuB,IAAI,EAAEL,MAAM,CAACf;QAAa,GALrBe,MAAM,CAACnB,EAAE;UAAAgD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMf,CACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV,CAAC;AAACtD,EAAA,CAzHID,iBAAiB;AAAA0E,EAAA,GAAjB1E,iBAAiB;AA2HvB,eAAeA,iBAAiB;AAAC,IAAA0E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}