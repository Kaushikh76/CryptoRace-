{"ast":null,"code":"var _jsxFileName = \"F:\\\\crypto-chicken-run\\\\src\\\\components\\\\CryptoChickenRace.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as roomService from '../services/roomService';\nimport LoadingScreen from './LoadingScreen';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RACE_DURATION = 60000; // 60 seconds\n\nconst CryptoChickenRace = ({\n  roomCode,\n  playerName,\n  isHost\n}) => {\n  _s();\n  const [crypto, setCrypto] = useState(null);\n  const [players, setPlayers] = useState([]);\n  const [raceStarted, setRaceStarted] = useState(false);\n  const [winner, setWinner] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(RACE_DURATION / 1000);\n  const [isLoading, setIsLoading] = useState(true);\n  const [prediction, setPrediction] = useState('');\n  const [initialPrice, setInitialPrice] = useState(null);\n  const [finalPrice, setFinalPrice] = useState(null);\n  const [error, setError] = useState(null);\n  const [priceData, setPriceData] = useState([]);\n  const chartRef = useRef(null);\n  useEffect(() => {\n    const fetchCryptoAndPlayers = async () => {\n      setIsLoading(true);\n      try {\n        const roomData = await roomService.getRoomData(roomCode);\n        if (roomData && roomData.selectedCrypto) {\n          setCrypto(roomData.selectedCrypto);\n          setPlayers(roomData.players || []);\n        } else {\n          setError('Failed to load room data. The room might not exist or no cryptocurrency was selected.');\n        }\n      } catch (err) {\n        console.error('Error fetching room data:', err);\n        setError('An error occurred while loading the room data.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCryptoAndPlayers();\n  }, [roomCode]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const updatedPlayers = roomService.getRoomPlayers(roomCode);\n      if (updatedPlayers) {\n        setPlayers(updatedPlayers);\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [roomCode]);\n  useEffect(() => {\n    if (raceStarted) {\n      const interval = setInterval(() => {\n        setTimeLeft(prevTime => {\n          if (prevTime <= 1) {\n            clearInterval(interval);\n            endRace();\n            return 0;\n          }\n          return prevTime - 1;\n        });\n        fetchCurrentPrice().then(price => {\n          if (price !== null) {\n            setPriceData(prevData => [...prevData, {\n              time: RACE_DURATION / 1000 - timeLeft,\n              price\n            }]);\n          }\n        });\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [raceStarted, timeLeft]);\n  const startRace = async () => {\n    setRaceStarted(true);\n    setWinner(null);\n    setTimeLeft(RACE_DURATION / 1000);\n    setPriceData([]);\n    roomService.startRace(roomCode);\n    const price = await fetchCurrentPrice();\n    setInitialPrice(price);\n    setPriceData([{\n      time: 0,\n      price\n    }]);\n  };\n  const fetchCurrentPrice = async () => {\n    if (!crypto || !crypto.id) {\n      setError('No cryptocurrency selected for this race.');\n      return null;\n    }\n    try {\n      var _data$crypto$id$usd, _data$crypto$id;\n      const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${crypto.id}&vs_currencies=usd`);\n      const data = await response.json();\n      return (_data$crypto$id$usd = (_data$crypto$id = data[crypto.id]) === null || _data$crypto$id === void 0 ? void 0 : _data$crypto$id.usd) !== null && _data$crypto$id$usd !== void 0 ? _data$crypto$id$usd : null;\n    } catch (error) {\n      console.error('Error fetching price:', error);\n      setError('Failed to fetch the current price. Please try again.');\n      return null;\n    }\n  };\n  const endRace = async () => {\n    setRaceStarted(false);\n    const finalPrice = await fetchCurrentPrice();\n    setFinalPrice(finalPrice);\n    if (finalPrice !== null) {\n      const winningPlayer = players.reduce((closest, player) => {\n        if (player.prediction === null) return closest;\n        const currentDiff = Math.abs(player.prediction - finalPrice);\n        const closestDiff = Math.abs(closest.prediction - finalPrice);\n        return currentDiff < closestDiff ? player : closest;\n      }, {\n        name: 'No winner',\n        prediction: Infinity\n      });\n      setWinner(winningPlayer);\n      roomService.updateWinner(roomCode, winningPlayer.name);\n    } else {\n      setError('Failed to determine the winner due to price fetch error.');\n    }\n  };\n  const submitPrediction = () => {\n    if (prediction && !isNaN(prediction)) {\n      roomService.updatePlayerPrediction(roomCode, playerName, parseFloat(prediction));\n      setPrediction('');\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center bg-gray-900 text-red-500\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-8 bg-gray-800 rounded-lg shadow-xl max-w-md w-full border border-red-500\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold mb-4\",\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gray-900 text-cyan-300\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-8 bg-gray-800 rounded-lg shadow-xl max-w-4xl w-full border border-cyan-500\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-4xl font-bold mb-6 text-center text-cyan-400 animate-pulse\",\n        children: \"Crypto Race 2077\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 text-center\",\n        children: [\"Room Code: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-bold text-pink-500\",\n          children: roomCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 54\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-2xl font-bold text-yellow-400\",\n          children: crypto && crypto.name ? `${crypto.name} (${crypto.symbol ? crypto.symbol.toUpperCase() : 'N/A'})` : 'No cryptocurrency selected'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), initialPrice && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg\",\n          children: [\"Starting Price: $\", initialPrice.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 28\n        }, this), finalPrice && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg\",\n          children: [\"Final Price: $\", finalPrice.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 flex justify-center\",\n        children: [isHost && !raceStarted && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startRace,\n          className: \"px-6 py-3 bg-pink-600 text-white rounded-full hover:bg-pink-700 transition duration-300 ease-in-out transform hover:-translate-y-1 hover:scale-110 shadow-lg shadow-pink-500/50\",\n          children: \"Initiate Race\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), raceStarted && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-2xl font-semibold text-yellow-400\",\n          children: [\"Time left: \", timeLeft, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), !raceStarted && !winner && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 flex justify-center items-center space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          placeholder: \"Your price prediction\",\n          value: prediction,\n          onChange: e => setPrediction(e.target.value),\n          className: \"p-2 border rounded bg-gray-700 text-cyan-300 border-cyan-500 placeholder-cyan-600 focus:outline-none focus:ring-2 focus:ring-pink-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: submitPrediction,\n          className: \"px-4 py-2 bg-cyan-600 text-white rounded hover:bg-cyan-700 transition duration-300 ease-in-out\",\n          children: \"Submit Prediction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 h-64\",\n        children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: \"100%\",\n          children: /*#__PURE__*/_jsxDEV(LineChart, {\n            data: priceData,\n            margin: {\n              top: 5,\n              right: 30,\n              left: 20,\n              bottom: 5\n            },\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"time\",\n              label: {\n                value: 'Time (s)',\n                position: 'insideBottomRight',\n                offset: -10\n              },\n              domain: [0, 60]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              label: {\n                value: 'Price (USD)',\n                angle: -90,\n                position: 'insideLeft'\n              },\n              domain: ['auto', 'auto']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: \"price\",\n              stroke: \"#8884d8\",\n              dot: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), players.map((player, index) => /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: () => player.prediction,\n              stroke: `hsl(${index * 137.5 % 360}, 70%, 50%)`,\n              strokeDasharray: \"5 5\",\n              name: `${player.name}'s Prediction`\n            }, player.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold mb-2 text-pink-400\",\n          children: \"Racers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: players.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between bg-gray-700 p-2 rounded border border-pink-700\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-cyan-300\",\n              children: player.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-yellow-400\",\n              children: player.prediction ? `$${player.prediction.toFixed(2)}` : 'No prediction yet'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this), winner && player.name === winner.name && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ml-2 text-2xl\",\n              children: \"\\uD83C\\uDFC6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 59\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), winner && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl font-bold text-center bg-yellow-600 text-black p-4 rounded-lg animate-pulse\",\n        children: [\"Winner: \", winner.name, \" \\uD83C\\uDFC6\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(CryptoChickenRace, \"hvHC9UNxm7r9of3vU4MMgMo8pH0=\");\n_c = CryptoChickenRace;\nexport default CryptoChickenRace;\nvar _c;\n$RefreshReg$(_c, \"CryptoChickenRace\");","map":{"version":3,"names":["React","useState","useEffect","useRef","roomService","LoadingScreen","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","RACE_DURATION","CryptoChickenRace","roomCode","playerName","isHost","_s","crypto","setCrypto","players","setPlayers","raceStarted","setRaceStarted","winner","setWinner","timeLeft","setTimeLeft","isLoading","setIsLoading","prediction","setPrediction","initialPrice","setInitialPrice","finalPrice","setFinalPrice","error","setError","priceData","setPriceData","chartRef","fetchCryptoAndPlayers","roomData","getRoomData","selectedCrypto","err","console","interval","setInterval","updatedPlayers","getRoomPlayers","clearInterval","prevTime","endRace","fetchCurrentPrice","then","price","prevData","time","startRace","id","_data$crypto$id$usd","_data$crypto$id","response","fetch","data","json","usd","winningPlayer","reduce","closest","player","currentDiff","Math","abs","closestDiff","name","Infinity","updateWinner","submitPrediction","isNaN","updatePlayerPrediction","parseFloat","fileName","_jsxFileName","lineNumber","columnNumber","className","children","symbol","toUpperCase","toFixed","onClick","type","step","placeholder","value","onChange","e","target","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","label","position","offset","domain","angle","stroke","dot","map","index","_c","$RefreshReg$"],"sources":["F:/crypto-chicken-run/src/components/CryptoChickenRace.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport * as roomService from '../services/roomService';\r\nimport LoadingScreen from './LoadingScreen';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\nconst RACE_DURATION = 60000; // 60 seconds\r\n\r\nconst CryptoChickenRace = ({ roomCode, playerName, isHost }) => {\r\n  const [crypto, setCrypto] = useState(null);\r\n  const [players, setPlayers] = useState([]);\r\n  const [raceStarted, setRaceStarted] = useState(false);\r\n  const [winner, setWinner] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(RACE_DURATION / 1000);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [prediction, setPrediction] = useState('');\r\n  const [initialPrice, setInitialPrice] = useState(null);\r\n  const [finalPrice, setFinalPrice] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [priceData, setPriceData] = useState([]);\r\n  const chartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchCryptoAndPlayers = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const roomData = await roomService.getRoomData(roomCode);\r\n        if (roomData && roomData.selectedCrypto) {\r\n          setCrypto(roomData.selectedCrypto);\r\n          setPlayers(roomData.players || []);\r\n        } else {\r\n          setError('Failed to load room data. The room might not exist or no cryptocurrency was selected.');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching room data:', err);\r\n        setError('An error occurred while loading the room data.');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    fetchCryptoAndPlayers();\r\n  }, [roomCode]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const updatedPlayers = roomService.getRoomPlayers(roomCode);\r\n      if (updatedPlayers) {\r\n        setPlayers(updatedPlayers);\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [roomCode]);\r\n\r\n  useEffect(() => {\r\n    if (raceStarted) {\r\n      const interval = setInterval(() => {\r\n        setTimeLeft((prevTime) => {\r\n          if (prevTime <= 1) {\r\n            clearInterval(interval);\r\n            endRace();\r\n            return 0;\r\n          }\r\n          return prevTime - 1;\r\n        });\r\n\r\n        fetchCurrentPrice().then(price => {\r\n          if (price !== null) {\r\n            setPriceData(prevData => [...prevData, { time: RACE_DURATION / 1000 - timeLeft, price }]);\r\n          }\r\n        });\r\n      }, 1000);\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [raceStarted, timeLeft]);\r\n\r\n  const startRace = async () => {\r\n    setRaceStarted(true);\r\n    setWinner(null);\r\n    setTimeLeft(RACE_DURATION / 1000);\r\n    setPriceData([]);\r\n    roomService.startRace(roomCode);\r\n    const price = await fetchCurrentPrice();\r\n    setInitialPrice(price);\r\n    setPriceData([{ time: 0, price }]);\r\n  };\r\n\r\n  const fetchCurrentPrice = async () => {\r\n    if (!crypto || !crypto.id) {\r\n      setError('No cryptocurrency selected for this race.');\r\n      return null;\r\n    }\r\n    try {\r\n      const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${crypto.id}&vs_currencies=usd`);\r\n      const data = await response.json();\r\n      return data[crypto.id]?.usd ?? null;\r\n    } catch (error) {\r\n      console.error('Error fetching price:', error);\r\n      setError('Failed to fetch the current price. Please try again.');\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const endRace = async () => {\r\n    setRaceStarted(false);\r\n    const finalPrice = await fetchCurrentPrice();\r\n    setFinalPrice(finalPrice);\r\n\r\n    if (finalPrice !== null) {\r\n      const winningPlayer = players.reduce((closest, player) => {\r\n        if (player.prediction === null) return closest;\r\n        const currentDiff = Math.abs(player.prediction - finalPrice);\r\n        const closestDiff = Math.abs(closest.prediction - finalPrice);\r\n        return currentDiff < closestDiff ? player : closest;\r\n      }, { name: 'No winner', prediction: Infinity });\r\n\r\n      setWinner(winningPlayer);\r\n      roomService.updateWinner(roomCode, winningPlayer.name);\r\n    } else {\r\n      setError('Failed to determine the winner due to price fetch error.');\r\n    }\r\n  };\r\n\r\n  const submitPrediction = () => {\r\n    if (prediction && !isNaN(prediction)) {\r\n      roomService.updatePlayerPrediction(roomCode, playerName, parseFloat(prediction));\r\n      setPrediction('');\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <LoadingScreen />;\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-900 text-red-500\">\r\n        <div className=\"p-8 bg-gray-800 rounded-lg shadow-xl max-w-md w-full border border-red-500\">\r\n          <h2 className=\"text-2xl font-bold mb-4\">Error</h2>\r\n          <p>{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-900 text-cyan-300\">\r\n      <div className=\"p-8 bg-gray-800 rounded-lg shadow-xl max-w-4xl w-full border border-cyan-500\">\r\n        <h2 className=\"text-4xl font-bold mb-6 text-center text-cyan-400 animate-pulse\">Crypto Race 2077</h2>\r\n        <div className=\"mb-4 text-center\">Room Code: <span className=\"font-bold text-pink-500\">{roomCode}</span></div>\r\n        <div className=\"mb-6 text-center\">\r\n          <h3 className=\"text-2xl font-bold text-yellow-400\">\r\n            {crypto && crypto.name ? \r\n              `${crypto.name} (${crypto.symbol ? crypto.symbol.toUpperCase() : 'N/A'})` : \r\n              'No cryptocurrency selected'}\r\n          </h3>\r\n          {initialPrice && <p className=\"text-lg\">Starting Price: ${initialPrice.toFixed(2)}</p>}\r\n          {finalPrice && <p className=\"text-lg\">Final Price: ${finalPrice.toFixed(2)}</p>}\r\n        </div>\r\n        <div className=\"mb-6 flex justify-center\">\r\n          {isHost && !raceStarted && (\r\n            <button \r\n              onClick={startRace} \r\n              className=\"px-6 py-3 bg-pink-600 text-white rounded-full hover:bg-pink-700 transition duration-300 ease-in-out transform hover:-translate-y-1 hover:scale-110 shadow-lg shadow-pink-500/50\"\r\n            >\r\n              Initiate Race\r\n            </button>\r\n          )}\r\n          {raceStarted && <span className=\"text-2xl font-semibold text-yellow-400\">Time left: {timeLeft}s</span>}\r\n        </div>\r\n        {!raceStarted && !winner && (\r\n          <div className=\"mb-6 flex justify-center items-center space-x-4\">\r\n            <input\r\n              type=\"number\"\r\n              step=\"0.01\"\r\n              placeholder=\"Your price prediction\"\r\n              value={prediction}\r\n              onChange={(e) => setPrediction(e.target.value)}\r\n              className=\"p-2 border rounded bg-gray-700 text-cyan-300 border-cyan-500 placeholder-cyan-600 focus:outline-none focus:ring-2 focus:ring-pink-500\"\r\n            />\r\n            <button\r\n              onClick={submitPrediction}\r\n              className=\"px-4 py-2 bg-cyan-600 text-white rounded hover:bg-cyan-700 transition duration-300 ease-in-out\"\r\n            >\r\n              Submit Prediction\r\n            </button>\r\n          </div>\r\n        )}\r\n        <div className=\"mb-6 h-64\">\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <LineChart\r\n              data={priceData}\r\n              margin={{\r\n                top: 5,\r\n                right: 30,\r\n                left: 20,\r\n                bottom: 5,\r\n              }}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis \r\n                dataKey=\"time\" \r\n                label={{ value: 'Time (s)', position: 'insideBottomRight', offset: -10 }} \r\n                domain={[0, 60]}\r\n              />\r\n              <YAxis \r\n                label={{ value: 'Price (USD)', angle: -90, position: 'insideLeft' }} \r\n                domain={['auto', 'auto']}\r\n              />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Line type=\"monotone\" dataKey=\"price\" stroke=\"#8884d8\" dot={false} />\r\n              {players.map((player, index) => (\r\n                <Line\r\n                  key={player.name}\r\n                  type=\"monotone\"\r\n                  dataKey={() => player.prediction}\r\n                  stroke={`hsl(${index * 137.5 % 360}, 70%, 50%)`}\r\n                  strokeDasharray=\"5 5\"\r\n                  name={`${player.name}'s Prediction`}\r\n                />\r\n              ))}\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n        <div className=\"mb-6\">\r\n          <h3 className=\"text-xl font-bold mb-2 text-pink-400\">Racers</h3>\r\n          <div className=\"space-y-2\">\r\n            {players.map((player, index) => (\r\n              <div key={index} className=\"flex items-center justify-between bg-gray-700 p-2 rounded border border-pink-700\">\r\n                <span className=\"text-cyan-300\">{player.name}</span>\r\n                <span className=\"text-yellow-400\">\r\n                  {player.prediction ? `$${player.prediction.toFixed(2)}` : 'No prediction yet'}\r\n                </span>\r\n                {winner && player.name === winner.name && <span className=\"ml-2 text-2xl\">🏆</span>}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        {winner && (\r\n          <div className=\"text-2xl font-bold text-center bg-yellow-600 text-black p-4 rounded-lg animate-pulse\">\r\n            Winner: {winner.name} 🏆\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoChickenRace;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}