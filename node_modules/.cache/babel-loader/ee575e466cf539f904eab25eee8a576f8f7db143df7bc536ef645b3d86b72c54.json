{"ast":null,"code":"var _jsxFileName = \"F:\\\\crypto-chicken-run\\\\src\\\\components\\\\WalletConnection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Web3Modal from \"web3modal\";\nimport { BrowserProvider, JsonRpcProvider } from \"ethers\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst networks = {\n  mainnet: {\n    chainId: '0x1',\n    chainName: 'Ethereum Mainnet',\n    nativeCurrency: {\n      name: 'Ether',\n      symbol: 'ETH',\n      decimals: 18\n    },\n    rpcUrls: ['https://mainnet.infura.io/v3/YOUR_INFURA_ID'],\n    blockExplorerUrls: ['https://etherscan.io/']\n  },\n  arbitrum: {\n    chainId: '0xa4b1',\n    chainName: 'Arbitrum One',\n    nativeCurrency: {\n      name: 'Ether',\n      symbol: 'ETH',\n      decimals: 18\n    },\n    rpcUrls: ['https://arb1.arbitrum.io/rpc'],\n    blockExplorerUrls: ['https://arbiscan.io/']\n  },\n  linea: {\n    chainId: '0xe708',\n    chainName: 'Linea Mainnet',\n    nativeCurrency: {\n      name: 'Ether',\n      symbol: 'ETH',\n      decimals: 18\n    },\n    rpcUrls: ['https://rpc.linea.build'],\n    blockExplorerUrls: ['https://lineascan.build/']\n  }\n  // Add more networks as needed\n};\nconst providerOptions = {\n  walletconnect: {\n    package: WalletConnectProvider,\n    options: {\n      infuraId: \"YOUR_INFURA_ID\" // Replace with your Infura ID\n    }\n  }\n};\nconst web3Modal = new Web3Modal({\n  network: \"mainnet\",\n  // Default network\n  cacheProvider: true,\n  providerOptions\n});\nconst WalletConnection = ({\n  onConnect\n}) => {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [network, setNetwork] = useState('mainnet');\n  const [provider, setProvider] = useState(null);\n  const connectWallet = async () => {\n    try {\n      const provider = await web3Modal.connect();\n      const library = new BrowserProvider(provider);\n      const accounts = await library.listAccounts();\n      const network = await library.getNetwork();\n      if (accounts && accounts.length > 0) {\n        const address = accounts[0].address || accounts[0];\n        setAccount(address);\n        setProvider(provider);\n        onConnect(address, library);\n      } else {\n        console.error(\"No accounts found\");\n      }\n    } catch (error) {\n      console.error(\"Could not connect to wallet:\", error);\n    }\n  };\n  const disconnectWallet = async () => {\n    await web3Modal.clearCachedProvider();\n    setAccount(null);\n    setProvider(null);\n  };\n  const switchNetwork = async networkName => {\n    if (!provider) {\n      console.error(\"Wallet not connected\");\n      return;\n    }\n    const networkConfig = networks[networkName];\n    try {\n      await provider.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{\n          chainId: networkConfig.chainId\n        }]\n      });\n      setNetwork(networkName);\n    } catch (switchError) {\n      // This error code indicates that the chain has not been added to MetaMask.\n      if (switchError.code === 4902) {\n        try {\n          await provider.request({\n            method: 'wallet_addEthereumChain',\n            params: [networkConfig]\n          });\n          setNetwork(networkName);\n        } catch (addError) {\n          console.error(\"Failed to add network:\", addError);\n        }\n      } else {\n        console.error(\"Failed to switch network:\", switchError);\n      }\n    }\n  };\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      connectWallet();\n    }\n  }, []);\n  const formatAddress = address => {\n    if (typeof address === 'string' && address.length > 10) {\n      return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n    }\n    return address;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4\",\n    children: account ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between bg-gray-700 p-2 rounded border border-cyan-500\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-cyan-300\",\n        children: [\"Connected: \", formatAddress(account)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: network,\n        onChange: e => switchNetwork(e.target.value),\n        className: \"mx-2 p-1 bg-gray-800 text-cyan-300 rounded border border-cyan-500\",\n        children: Object.keys(networks).map(networkName => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: networkName,\n          children: networks[networkName].chainName\n        }, networkName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: disconnectWallet,\n        className: \"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition duration-300 ease-in-out\",\n        children: \"Disconnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      className: \"w-full px-4 py-2 bg-cyan-600 text-white rounded hover:bg-cyan-700 transition duration-300 ease-in-out\",\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(WalletConnection, \"Xuh32oH5S1UQfeVRXRTArn+30ow=\");\n_c = WalletConnection;\nexport default WalletConnection;\nvar _c;\n$RefreshReg$(_c, \"WalletConnection\");","map":{"version":3,"names":["React","useState","useEffect","Web3Modal","BrowserProvider","JsonRpcProvider","WalletConnectProvider","jsxDEV","_jsxDEV","networks","mainnet","chainId","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","blockExplorerUrls","arbitrum","linea","providerOptions","walletconnect","package","options","infuraId","web3Modal","network","cacheProvider","WalletConnection","onConnect","_s","account","setAccount","setNetwork","provider","setProvider","connectWallet","connect","library","accounts","listAccounts","getNetwork","length","address","console","error","disconnectWallet","clearCachedProvider","switchNetwork","networkName","networkConfig","request","method","params","switchError","code","addError","cachedProvider","formatAddress","substring","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","Object","keys","map","onClick","_c","$RefreshReg$"],"sources":["F:/crypto-chicken-run/src/components/WalletConnection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Web3Modal from \"web3modal\";\r\nimport { BrowserProvider, JsonRpcProvider } from \"ethers\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\n\r\nconst networks = {\r\n  mainnet: { \r\n    chainId: '0x1',\r\n    chainName: 'Ethereum Mainnet',\r\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\r\n    rpcUrls: ['https://mainnet.infura.io/v3/YOUR_INFURA_ID'],\r\n    blockExplorerUrls: ['https://etherscan.io/']\r\n  },\r\n  arbitrum: {\r\n    chainId: '0xa4b1',\r\n    chainName: 'Arbitrum One',\r\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\r\n    rpcUrls: ['https://arb1.arbitrum.io/rpc'],\r\n    blockExplorerUrls: ['https://arbiscan.io/']\r\n  },\r\n  linea: {\r\n    chainId: '0xe708',\r\n    chainName: 'Linea Mainnet',\r\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\r\n    rpcUrls: ['https://rpc.linea.build'],\r\n    blockExplorerUrls: ['https://lineascan.build/']\r\n  },\r\n  // Add more networks as needed\r\n};\r\n\r\nconst providerOptions = {\r\n  walletconnect: {\r\n    package: WalletConnectProvider,\r\n    options: {\r\n      infuraId: \"YOUR_INFURA_ID\" // Replace with your Infura ID\r\n    }\r\n  }\r\n};\r\n\r\nconst web3Modal = new Web3Modal({\r\n  network: \"mainnet\", // Default network\r\n  cacheProvider: true,\r\n  providerOptions\r\n});\r\n\r\nconst WalletConnection = ({ onConnect }) => {\r\n  const [account, setAccount] = useState(null);\r\n  const [network, setNetwork] = useState('mainnet');\r\n  const [provider, setProvider] = useState(null);\r\n\r\n  const connectWallet = async () => {\r\n    try {\r\n      const provider = await web3Modal.connect();\r\n      const library = new BrowserProvider(provider);\r\n      const accounts = await library.listAccounts();\r\n      const network = await library.getNetwork();\r\n      if (accounts && accounts.length > 0) {\r\n        const address = accounts[0].address || accounts[0];\r\n        setAccount(address);\r\n        setProvider(provider);\r\n        onConnect(address, library);\r\n      } else {\r\n        console.error(\"No accounts found\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Could not connect to wallet:\", error);\r\n    }\r\n  };\r\n\r\n  const disconnectWallet = async () => {\r\n    await web3Modal.clearCachedProvider();\r\n    setAccount(null);\r\n    setProvider(null);\r\n  };\r\n\r\n  const switchNetwork = async (networkName) => {\r\n    if (!provider) {\r\n      console.error(\"Wallet not connected\");\r\n      return;\r\n    }\r\n\r\n    const networkConfig = networks[networkName];\r\n\r\n    try {\r\n      await provider.request({\r\n        method: 'wallet_switchEthereumChain',\r\n        params: [{ chainId: networkConfig.chainId }],\r\n      });\r\n      setNetwork(networkName);\r\n    } catch (switchError) {\r\n      // This error code indicates that the chain has not been added to MetaMask.\r\n      if (switchError.code === 4902) {\r\n        try {\r\n          await provider.request({\r\n            method: 'wallet_addEthereumChain',\r\n            params: [networkConfig],\r\n          });\r\n          setNetwork(networkName);\r\n        } catch (addError) {\r\n          console.error(\"Failed to add network:\", addError);\r\n        }\r\n      } else {\r\n        console.error(\"Failed to switch network:\", switchError);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (web3Modal.cachedProvider) {\r\n      connectWallet();\r\n    }\r\n  }, []);\r\n\r\n  const formatAddress = (address) => {\r\n    if (typeof address === 'string' && address.length > 10) {\r\n      return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\r\n    }\r\n    return address;\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-4\">\r\n      {account ? (\r\n        <div className=\"flex items-center justify-between bg-gray-700 p-2 rounded border border-cyan-500\">\r\n          <span className=\"text-cyan-300\">\r\n            Connected: {formatAddress(account)}\r\n          </span>\r\n          <select\r\n            value={network}\r\n            onChange={(e) => switchNetwork(e.target.value)}\r\n            className=\"mx-2 p-1 bg-gray-800 text-cyan-300 rounded border border-cyan-500\"\r\n          >\r\n            {Object.keys(networks).map((networkName) => (\r\n              <option key={networkName} value={networkName}>\r\n                {networks[networkName].chainName}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <button onClick={disconnectWallet} className=\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition duration-300 ease-in-out\">\r\n            Disconnect\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <button onClick={connectWallet} className=\"w-full px-4 py-2 bg-cyan-600 text-white rounded hover:bg-cyan-700 transition duration-300 ease-in-out\">\r\n          Connect Wallet\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WalletConnection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}