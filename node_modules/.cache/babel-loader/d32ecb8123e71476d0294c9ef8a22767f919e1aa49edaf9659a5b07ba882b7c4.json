{"ast":null,"code":"var _jsxFileName = \"F:\\\\crypto-chicken-run\\\\src\\\\components\\\\CryptoChickenRace.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as roomService from '../services/roomService';\nimport LoadingScreen from './LoadingScreen';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RACE_DURATION = 60000; // 60 seconds\n\nconst CryptoChickenRace = ({\n  roomCode,\n  playerName,\n  isHost\n}) => {\n  _s();\n  const [crypto, setCrypto] = useState(null);\n  const [players, setPlayers] = useState([]);\n  const [raceStarted, setRaceStarted] = useState(false);\n  const [winner, setWinner] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(RACE_DURATION / 1000);\n  const [isLoading, setIsLoading] = useState(true);\n  const [prediction, setPrediction] = useState('');\n  const [initialPrice, setInitialPrice] = useState(null);\n  const [currentPrice, setCurrentPrice] = useState(null);\n  const [finalPrice, setFinalPrice] = useState(null);\n  const [error, setError] = useState(null);\n  const [priceData, setPriceData] = useState([]);\n  const [startTimestamp, setStartTimestamp] = useState(null);\n  const [endTimestamp, setEndTimestamp] = useState(null);\n  const chartRef = useRef(null);\n  useEffect(() => {\n    const fetchCryptoAndPlayers = async () => {\n      setIsLoading(true);\n      try {\n        const roomData = await roomService.getRoomData(roomCode);\n        if (roomData && roomData.selectedCrypto) {\n          setCrypto(roomData.selectedCrypto);\n          setPlayers(roomData.players || []);\n        } else {\n          setError('Failed to load room data. The room might not exist or no cryptocurrency was selected.');\n        }\n      } catch (err) {\n        console.error('Error fetching room data:', err);\n        setError('An error occurred while loading the room data.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCryptoAndPlayers();\n  }, [roomCode]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const updatedPlayers = roomService.getRoomPlayers(roomCode);\n      if (updatedPlayers) {\n        setPlayers(updatedPlayers);\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [roomCode]);\n  useEffect(() => {\n    if (raceStarted) {\n      const interval = setInterval(() => {\n        setTimeLeft(prevTime => {\n          if (prevTime <= 1) {\n            clearInterval(interval);\n            endRace();\n            return 0;\n          }\n          return prevTime - 1;\n        });\n        fetchCurrentPrice().then(priceData => {\n          if (priceData !== null) {\n            setCurrentPrice(priceData.price);\n            setPriceData(prevData => [...prevData, priceData]);\n          }\n        });\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [raceStarted, timeLeft]);\n  const startRace = async () => {\n    setRaceStarted(true);\n    setWinner(null);\n    setTimeLeft(RACE_DURATION / 1000);\n    setPriceData([]);\n    const startTime = new Date();\n    setStartTimestamp(startTime);\n    roomService.startRace(roomCode);\n    const priceData = await fetchCurrentPrice();\n    if (priceData !== null) {\n      setInitialPrice(priceData.price);\n      setCurrentPrice(priceData.price);\n      setPriceData([priceData]);\n    }\n  };\n  const fetchCurrentPrice = async () => {\n    if (!crypto || !crypto.id) {\n      setError('No cryptocurrency selected for this race.');\n      return null;\n    }\n    try {\n      var _data$crypto$id;\n      const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${crypto.id}&vs_currencies=usd`);\n      const data = await response.json();\n      const price = (_data$crypto$id = data[crypto.id]) === null || _data$crypto$id === void 0 ? void 0 : _data$crypto$id.usd;\n      if (price === undefined) {\n        throw new Error('Price data not available');\n      }\n      const timestamp = new Date();\n      return {\n        time: RACE_DURATION / 1000 - timeLeft,\n        price: price,\n        timestamp: timestamp.toISOString()\n      };\n    } catch (error) {\n      console.error('Error fetching price:', error);\n      setError('Failed to fetch the current price. Please try again.');\n      return null;\n    }\n  };\n  const endRace = async () => {\n    setRaceStarted(false);\n    const endTime = new Date();\n    setEndTimestamp(endTime);\n    const finalPriceData = await fetchCurrentPrice();\n    if (finalPriceData !== null) {\n      setFinalPrice(finalPriceData.price);\n      setPriceData(prevData => [...prevData, finalPriceData]);\n      const winningPlayer = players.reduce((closest, player) => {\n        if (player.prediction === null) return closest;\n        const currentDiff = Math.abs(player.prediction - finalPriceData.price);\n        const closestDiff = Math.abs(closest.prediction - finalPriceData.price);\n        return currentDiff < closestDiff ? player : closest;\n      }, {\n        name: 'No winner',\n        prediction: Infinity\n      });\n      setWinner(winningPlayer);\n      roomService.updateWinner(roomCode, winningPlayer.name);\n    } else {\n      setError('Failed to determine the winner due to price fetch error.');\n    }\n  };\n  const submitPrediction = () => {\n    if (prediction && !isNaN(prediction)) {\n      const updatedPrediction = parseFloat(prediction);\n      roomService.updatePlayerPrediction(roomCode, playerName, updatedPrediction);\n      setPlayers(prevPlayers => prevPlayers.map(player => player.name === playerName ? {\n        ...player,\n        prediction: updatedPrediction\n      } : player));\n      setPrediction('');\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center bg-gray-900 text-red-500\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-8 bg-gray-800 rounded-lg shadow-xl max-w-md w-full border border-red-500\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold mb-4\",\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gray-900 text-cyan-300\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-8 bg-gray-800 rounded-lg shadow-xl max-w-4xl w-full border border-cyan-500\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-4xl font-bold mb-6 text-center text-cyan-400 animate-pulse\",\n        children: \"Crypto Race 2077\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 text-center\",\n        children: [\"Room Code: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-bold text-pink-500\",\n          children: roomCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 54\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-2xl font-bold text-yellow-400\",\n          children: crypto && crypto.name ? `${crypto.name} (${crypto.symbol ? crypto.symbol.toUpperCase() : 'N/A'})` : 'No cryptocurrency selected'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), initialPrice && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg\",\n          children: [\"Starting Price: $\", initialPrice.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 28\n        }, this), currentPrice && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg\",\n          children: [\"Current Price: $\", currentPrice.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 28\n        }, this), finalPrice && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg\",\n          children: [\"Final Price: $\", finalPrice.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 26\n        }, this), startTimestamp && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm\",\n          children: [\"Start Time: \", startTimestamp.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 30\n        }, this), endTimestamp && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm\",\n          children: [\"End Time: \", endTimestamp.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 flex justify-center\",\n        children: [isHost && !raceStarted && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startRace,\n          className: \"px-6 py-3 bg-pink-600 text-white rounded-full hover:bg-pink-700 transition duration-300 ease-in-out transform hover:-translate-y-1 hover:scale-110 shadow-lg shadow-pink-500/50\",\n          children: \"Initiate Race\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), raceStarted && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-2xl font-semibold text-yellow-400\",\n          children: [\"Time left: \", timeLeft, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), !raceStarted && !winner && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 flex justify-center items-center space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          placeholder: \"Your price prediction\",\n          value: prediction,\n          onChange: e => setPrediction(e.target.value),\n          className: \"p-2 border rounded bg-gray-700 text-cyan-300 border-cyan-500 placeholder-cyan-600 focus:outline-none focus:ring-2 focus:ring-pink-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: submitPrediction,\n          className: \"px-4 py-2 bg-cyan-600 text-white rounded hover:bg-cyan-700 transition duration-300 ease-in-out\",\n          children: \"Submit Prediction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 h-64\",\n        children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: \"100%\",\n          children: /*#__PURE__*/_jsxDEV(LineChart, {\n            data: priceData,\n            margin: {\n              top: 5,\n              right: 30,\n              left: 20,\n              bottom: 5\n            },\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"time\",\n              label: {\n                value: 'Time (s)',\n                position: 'insideBottomRight',\n                offset: -10\n              },\n              domain: [0, 60]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              label: {\n                value: 'Price (USD)',\n                angle: -90,\n                position: 'insideLeft'\n              },\n              domain: ['auto', 'auto']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              labelFormatter: value => `Time: ${value}s`,\n              formatter: (value, name, props) => [`$${value.toFixed(2)}`, name, `Timestamp: ${new Date(props.payload.timestamp).toLocaleString()}`]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: \"price\",\n              stroke: \"#8884d8\",\n              dot: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), players.map((player, index) => /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: () => player.prediction,\n              stroke: `hsl(${index * 137.5 % 360}, 70%, 50%)`,\n              strokeDasharray: \"5 5\",\n              name: `${player.name}'s Prediction`\n            }, player.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold mb-2 text-pink-400\",\n          children: \"Racers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: players.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between bg-gray-700 p-2 rounded border border-pink-700\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-cyan-300\",\n              children: player.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-yellow-400\",\n              children: player.prediction ? `$${player.prediction.toFixed(2)}` : 'No prediction yet'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this), winner && player.name === winner.name && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ml-2 text-2xl\",\n              children: \"\\uD83C\\uDFC6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 59\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), winner && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl font-bold text-center bg-yellow-600 text-black p-4 rounded-lg animate-pulse\",\n        children: [\"Winner: \", winner.name, \" \\uD83C\\uDFC6\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n_s(CryptoChickenRace, \"blk/m4MXgcDx4h377g0dz+w24HM=\");\n_c = CryptoChickenRace;\nexport default CryptoChickenRace;\nvar _c;\n$RefreshReg$(_c, \"CryptoChickenRace\");","map":{"version":3,"names":["React","useState","useEffect","useRef","roomService","LoadingScreen","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","RACE_DURATION","CryptoChickenRace","roomCode","playerName","isHost","_s","crypto","setCrypto","players","setPlayers","raceStarted","setRaceStarted","winner","setWinner","timeLeft","setTimeLeft","isLoading","setIsLoading","prediction","setPrediction","initialPrice","setInitialPrice","currentPrice","setCurrentPrice","finalPrice","setFinalPrice","error","setError","priceData","setPriceData","startTimestamp","setStartTimestamp","endTimestamp","setEndTimestamp","chartRef","fetchCryptoAndPlayers","roomData","getRoomData","selectedCrypto","err","console","interval","setInterval","updatedPlayers","getRoomPlayers","clearInterval","prevTime","endRace","fetchCurrentPrice","then","price","prevData","startRace","startTime","Date","id","_data$crypto$id","response","fetch","data","json","usd","undefined","Error","timestamp","time","toISOString","endTime","finalPriceData","winningPlayer","reduce","closest","player","currentDiff","Math","abs","closestDiff","name","Infinity","updateWinner","submitPrediction","isNaN","updatedPrediction","parseFloat","updatePlayerPrediction","prevPlayers","map","fileName","_jsxFileName","lineNumber","columnNumber","className","children","symbol","toUpperCase","toFixed","toLocaleString","onClick","type","step","placeholder","value","onChange","e","target","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","label","position","offset","domain","angle","labelFormatter","formatter","props","payload","stroke","dot","index","_c","$RefreshReg$"],"sources":["F:/crypto-chicken-run/src/components/CryptoChickenRace.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport * as roomService from '../services/roomService';\r\nimport LoadingScreen from './LoadingScreen';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\nconst RACE_DURATION = 60000; // 60 seconds\r\n\r\nconst CryptoChickenRace = ({ roomCode, playerName, isHost }) => {\r\n  const [crypto, setCrypto] = useState(null);\r\n  const [players, setPlayers] = useState([]);\r\n  const [raceStarted, setRaceStarted] = useState(false);\r\n  const [winner, setWinner] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(RACE_DURATION / 1000);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [prediction, setPrediction] = useState('');\r\n  const [initialPrice, setInitialPrice] = useState(null);\r\n  const [currentPrice, setCurrentPrice] = useState(null);\r\n  const [finalPrice, setFinalPrice] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [priceData, setPriceData] = useState([]);\r\n  const [startTimestamp, setStartTimestamp] = useState(null);\r\n  const [endTimestamp, setEndTimestamp] = useState(null);\r\n  const chartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchCryptoAndPlayers = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const roomData = await roomService.getRoomData(roomCode);\r\n        if (roomData && roomData.selectedCrypto) {\r\n          setCrypto(roomData.selectedCrypto);\r\n          setPlayers(roomData.players || []);\r\n        } else {\r\n          setError('Failed to load room data. The room might not exist or no cryptocurrency was selected.');\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching room data:', err);\r\n        setError('An error occurred while loading the room data.');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    fetchCryptoAndPlayers();\r\n  }, [roomCode]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const updatedPlayers = roomService.getRoomPlayers(roomCode);\r\n      if (updatedPlayers) {\r\n        setPlayers(updatedPlayers);\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [roomCode]);\r\n\r\n  useEffect(() => {\r\n    if (raceStarted) {\r\n      const interval = setInterval(() => {\r\n        setTimeLeft((prevTime) => {\r\n          if (prevTime <= 1) {\r\n            clearInterval(interval);\r\n            endRace();\r\n            return 0;\r\n          }\r\n          return prevTime - 1;\r\n        });\r\n\r\n        fetchCurrentPrice().then(priceData => {\r\n          if (priceData !== null) {\r\n            setCurrentPrice(priceData.price);\r\n            setPriceData(prevData => [...prevData, priceData]);\r\n          }\r\n        });\r\n      }, 1000);\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [raceStarted, timeLeft]);\r\n\r\n  const startRace = async () => {\r\n    setRaceStarted(true);\r\n    setWinner(null);\r\n    setTimeLeft(RACE_DURATION / 1000);\r\n    setPriceData([]);\r\n    const startTime = new Date();\r\n    setStartTimestamp(startTime);\r\n    roomService.startRace(roomCode);\r\n    const priceData = await fetchCurrentPrice();\r\n    if (priceData !== null) {\r\n      setInitialPrice(priceData.price);\r\n      setCurrentPrice(priceData.price);\r\n      setPriceData([priceData]);\r\n    }\r\n  };\r\n\r\n  const fetchCurrentPrice = async () => {\r\n    if (!crypto || !crypto.id) {\r\n      setError('No cryptocurrency selected for this race.');\r\n      return null;\r\n    }\r\n    try {\r\n      const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${crypto.id}&vs_currencies=usd`);\r\n      const data = await response.json();\r\n      const price = data[crypto.id]?.usd;\r\n      if (price === undefined) {\r\n        throw new Error('Price data not available');\r\n      }\r\n      const timestamp = new Date();\r\n      return {\r\n        time: (RACE_DURATION / 1000) - timeLeft,\r\n        price: price,\r\n        timestamp: timestamp.toISOString(),\r\n      };\r\n    } catch (error) {\r\n      console.error('Error fetching price:', error);\r\n      setError('Failed to fetch the current price. Please try again.');\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const endRace = async () => {\r\n    setRaceStarted(false);\r\n    const endTime = new Date();\r\n    setEndTimestamp(endTime);\r\n    const finalPriceData = await fetchCurrentPrice();\r\n    if (finalPriceData !== null) {\r\n      setFinalPrice(finalPriceData.price);\r\n      setPriceData(prevData => [...prevData, finalPriceData]);\r\n\r\n      const winningPlayer = players.reduce((closest, player) => {\r\n        if (player.prediction === null) return closest;\r\n        const currentDiff = Math.abs(player.prediction - finalPriceData.price);\r\n        const closestDiff = Math.abs(closest.prediction - finalPriceData.price);\r\n        return currentDiff < closestDiff ? player : closest;\r\n      }, { name: 'No winner', prediction: Infinity });\r\n\r\n      setWinner(winningPlayer);\r\n      roomService.updateWinner(roomCode, winningPlayer.name);\r\n    } else {\r\n      setError('Failed to determine the winner due to price fetch error.');\r\n    }\r\n  };\r\n\r\n  const submitPrediction = () => {\r\n    if (prediction && !isNaN(prediction)) {\r\n      const updatedPrediction = parseFloat(prediction);\r\n      roomService.updatePlayerPrediction(roomCode, playerName, updatedPrediction);\r\n      setPlayers(prevPlayers => \r\n        prevPlayers.map(player => \r\n          player.name === playerName ? { ...player, prediction: updatedPrediction } : player\r\n        )\r\n      );\r\n      setPrediction('');\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <LoadingScreen />;\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-900 text-red-500\">\r\n        <div className=\"p-8 bg-gray-800 rounded-lg shadow-xl max-w-md w-full border border-red-500\">\r\n          <h2 className=\"text-2xl font-bold mb-4\">Error</h2>\r\n          <p>{error}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-900 text-cyan-300\">\r\n      <div className=\"p-8 bg-gray-800 rounded-lg shadow-xl max-w-4xl w-full border border-cyan-500\">\r\n        <h2 className=\"text-4xl font-bold mb-6 text-center text-cyan-400 animate-pulse\">Crypto Race 2077</h2>\r\n        <div className=\"mb-4 text-center\">Room Code: <span className=\"font-bold text-pink-500\">{roomCode}</span></div>\r\n        <div className=\"mb-6 text-center\">\r\n          <h3 className=\"text-2xl font-bold text-yellow-400\">\r\n            {crypto && crypto.name ? \r\n              `${crypto.name} (${crypto.symbol ? crypto.symbol.toUpperCase() : 'N/A'})` : \r\n              'No cryptocurrency selected'}\r\n          </h3>\r\n          {initialPrice && <p className=\"text-lg\">Starting Price: ${initialPrice.toFixed(2)}</p>}\r\n          {currentPrice && <p className=\"text-lg\">Current Price: ${currentPrice.toFixed(2)}</p>}\r\n          {finalPrice && <p className=\"text-lg\">Final Price: ${finalPrice.toFixed(2)}</p>}\r\n          {startTimestamp && <p className=\"text-sm\">Start Time: {startTimestamp.toLocaleString()}</p>}\r\n          {endTimestamp && <p className=\"text-sm\">End Time: {endTimestamp.toLocaleString()}</p>}\r\n        </div>\r\n        <div className=\"mb-6 flex justify-center\">\r\n          {isHost && !raceStarted && (\r\n            <button \r\n              onClick={startRace} \r\n              className=\"px-6 py-3 bg-pink-600 text-white rounded-full hover:bg-pink-700 transition duration-300 ease-in-out transform hover:-translate-y-1 hover:scale-110 shadow-lg shadow-pink-500/50\"\r\n            >\r\n              Initiate Race\r\n            </button>\r\n          )}\r\n          {raceStarted && <span className=\"text-2xl font-semibold text-yellow-400\">Time left: {timeLeft}s</span>}\r\n        </div>\r\n        {!raceStarted && !winner && (\r\n          <div className=\"mb-6 flex justify-center items-center space-x-4\">\r\n            <input\r\n              type=\"number\"\r\n              step=\"0.01\"\r\n              placeholder=\"Your price prediction\"\r\n              value={prediction}\r\n              onChange={(e) => setPrediction(e.target.value)}\r\n              className=\"p-2 border rounded bg-gray-700 text-cyan-300 border-cyan-500 placeholder-cyan-600 focus:outline-none focus:ring-2 focus:ring-pink-500\"\r\n            />\r\n            <button\r\n              onClick={submitPrediction}\r\n              className=\"px-4 py-2 bg-cyan-600 text-white rounded hover:bg-cyan-700 transition duration-300 ease-in-out\"\r\n            >\r\n              Submit Prediction\r\n            </button>\r\n          </div>\r\n        )}\r\n        <div className=\"mb-6 h-64\">\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <LineChart\r\n              data={priceData}\r\n              margin={{\r\n                top: 5,\r\n                right: 30,\r\n                left: 20,\r\n                bottom: 5,\r\n              }}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis \r\n                dataKey=\"time\" \r\n                label={{ value: 'Time (s)', position: 'insideBottomRight', offset: -10 }} \r\n                domain={[0, 60]}\r\n              />\r\n              <YAxis \r\n                label={{ value: 'Price (USD)', angle: -90, position: 'insideLeft' }} \r\n                domain={['auto', 'auto']}\r\n              />\r\n              <Tooltip \r\n                labelFormatter={(value) => `Time: ${value}s`}\r\n                formatter={(value, name, props) => [\r\n                  `$${value.toFixed(2)}`, \r\n                  name, \r\n                  `Timestamp: ${new Date(props.payload.timestamp).toLocaleString()}`\r\n                ]}\r\n              />\r\n              <Legend />\r\n              <Line type=\"monotone\" dataKey=\"price\" stroke=\"#8884d8\" dot={false} />\r\n              {players.map((player, index) => (\r\n                <Line\r\n                  key={player.name}\r\n                  type=\"monotone\"\r\n                  dataKey={() => player.prediction}\r\n                  stroke={`hsl(${index * 137.5 % 360}, 70%, 50%)`}\r\n                  strokeDasharray=\"5 5\"\r\n                  name={`${player.name}'s Prediction`}\r\n                />\r\n              ))}\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n        <div className=\"mb-6\">\r\n          <h3 className=\"text-xl font-bold mb-2 text-pink-400\">Racers</h3>\r\n          <div className=\"space-y-2\">\r\n            {players.map((player, index) => (\r\n              <div key={index} className=\"flex items-center justify-between bg-gray-700 p-2 rounded border border-pink-700\">\r\n                <span className=\"text-cyan-300\">{player.name}</span>\r\n                <span className=\"text-yellow-400\">\r\n                  {player.prediction ? `$${player.prediction.toFixed(2)}` : 'No prediction yet'}\r\n                </span>\r\n                {winner && player.name === winner.name && <span className=\"ml-2 text-2xl\">🏆</span>}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        {winner && (\r\n          <div className=\"text-2xl font-bold text-center bg-yellow-600 text-black p-4 rounded-lg animate-pulse\">\r\n            Winner: {winner.name} 🏆\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoChickenRace;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,KAAKC,WAAW,MAAM,yBAAyB;AACtD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,MAAM,EAAEC,mBAAmB,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9G,MAAMC,aAAa,GAAG,KAAK,CAAC,CAAC;;AAE7B,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,UAAU;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC9D,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACuB,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACyB,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC2B,MAAM,EAAEC,SAAS,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAAC6B,QAAQ,EAAEC,WAAW,CAAC,GAAG9B,QAAQ,CAACe,aAAa,GAAG,IAAI,CAAC;EAC9D,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACiC,UAAU,EAAEC,aAAa,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACmC,YAAY,EAAEC,eAAe,CAAC,GAAGpC,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACqC,YAAY,EAAEC,eAAe,CAAC,GAAGtC,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACuC,UAAU,EAAEC,aAAa,CAAC,GAAGxC,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACyC,KAAK,EAAEC,QAAQ,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC2C,SAAS,EAAEC,YAAY,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC6C,cAAc,EAAEC,iBAAiB,CAAC,GAAG9C,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAAC+C,YAAY,EAAEC,eAAe,CAAC,GAAGhD,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAMiD,QAAQ,GAAG/C,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd,MAAMiD,qBAAqB,GAAG,MAAAA,CAAA,KAAY;MACxClB,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACF,MAAMmB,QAAQ,GAAG,MAAMhD,WAAW,CAACiD,WAAW,CAACnC,QAAQ,CAAC;QACxD,IAAIkC,QAAQ,IAAIA,QAAQ,CAACE,cAAc,EAAE;UACvC/B,SAAS,CAAC6B,QAAQ,CAACE,cAAc,CAAC;UAClC7B,UAAU,CAAC2B,QAAQ,CAAC5B,OAAO,IAAI,EAAE,CAAC;QACpC,CAAC,MAAM;UACLmB,QAAQ,CAAC,uFAAuF,CAAC;QACnG;MACF,CAAC,CAAC,OAAOY,GAAG,EAAE;QACZC,OAAO,CAACd,KAAK,CAAC,2BAA2B,EAAEa,GAAG,CAAC;QAC/CZ,QAAQ,CAAC,gDAAgD,CAAC;MAC5D,CAAC,SAAS;QACRV,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IACDkB,qBAAqB,CAAC,CAAC;EACzB,CAAC,EAAE,CAACjC,QAAQ,CAAC,CAAC;EAEdhB,SAAS,CAAC,MAAM;IACd,MAAMuD,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,MAAMC,cAAc,GAAGvD,WAAW,CAACwD,cAAc,CAAC1C,QAAQ,CAAC;MAC3D,IAAIyC,cAAc,EAAE;QAClBlC,UAAU,CAACkC,cAAc,CAAC;MAC5B;IACF,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAME,aAAa,CAACJ,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACvC,QAAQ,CAAC,CAAC;EAEdhB,SAAS,CAAC,MAAM;IACd,IAAIwB,WAAW,EAAE;MACf,MAAM+B,QAAQ,GAAGC,WAAW,CAAC,MAAM;QACjC3B,WAAW,CAAE+B,QAAQ,IAAK;UACxB,IAAIA,QAAQ,IAAI,CAAC,EAAE;YACjBD,aAAa,CAACJ,QAAQ,CAAC;YACvBM,OAAO,CAAC,CAAC;YACT,OAAO,CAAC;UACV;UACA,OAAOD,QAAQ,GAAG,CAAC;QACrB,CAAC,CAAC;QAEFE,iBAAiB,CAAC,CAAC,CAACC,IAAI,CAACrB,SAAS,IAAI;UACpC,IAAIA,SAAS,KAAK,IAAI,EAAE;YACtBL,eAAe,CAACK,SAAS,CAACsB,KAAK,CAAC;YAChCrB,YAAY,CAACsB,QAAQ,IAAI,CAAC,GAAGA,QAAQ,EAAEvB,SAAS,CAAC,CAAC;UACpD;QACF,CAAC,CAAC;MACJ,CAAC,EAAE,IAAI,CAAC;MAER,OAAO,MAAMiB,aAAa,CAACJ,QAAQ,CAAC;IACtC;EACF,CAAC,EAAE,CAAC/B,WAAW,EAAEI,QAAQ,CAAC,CAAC;EAE3B,MAAMsC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5BzC,cAAc,CAAC,IAAI,CAAC;IACpBE,SAAS,CAAC,IAAI,CAAC;IACfE,WAAW,CAACf,aAAa,GAAG,IAAI,CAAC;IACjC6B,YAAY,CAAC,EAAE,CAAC;IAChB,MAAMwB,SAAS,GAAG,IAAIC,IAAI,CAAC,CAAC;IAC5BvB,iBAAiB,CAACsB,SAAS,CAAC;IAC5BjE,WAAW,CAACgE,SAAS,CAAClD,QAAQ,CAAC;IAC/B,MAAM0B,SAAS,GAAG,MAAMoB,iBAAiB,CAAC,CAAC;IAC3C,IAAIpB,SAAS,KAAK,IAAI,EAAE;MACtBP,eAAe,CAACO,SAAS,CAACsB,KAAK,CAAC;MAChC3B,eAAe,CAACK,SAAS,CAACsB,KAAK,CAAC;MAChCrB,YAAY,CAAC,CAACD,SAAS,CAAC,CAAC;IAC3B;EACF,CAAC;EAED,MAAMoB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI,CAAC1C,MAAM,IAAI,CAACA,MAAM,CAACiD,EAAE,EAAE;MACzB5B,QAAQ,CAAC,2CAA2C,CAAC;MACrD,OAAO,IAAI;IACb;IACA,IAAI;MAAA,IAAA6B,eAAA;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qDAAqDpD,MAAM,CAACiD,EAAE,oBAAoB,CAAC;MAChH,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,MAAMV,KAAK,IAAAM,eAAA,GAAGG,IAAI,CAACrD,MAAM,CAACiD,EAAE,CAAC,cAAAC,eAAA,uBAAfA,eAAA,CAAiBK,GAAG;MAClC,IAAIX,KAAK,KAAKY,SAAS,EAAE;QACvB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;MACA,MAAMC,SAAS,GAAG,IAAIV,IAAI,CAAC,CAAC;MAC5B,OAAO;QACLW,IAAI,EAAGjE,aAAa,GAAG,IAAI,GAAIc,QAAQ;QACvCoC,KAAK,EAAEA,KAAK;QACZc,SAAS,EAAEA,SAAS,CAACE,WAAW,CAAC;MACnC,CAAC;IACH,CAAC,CAAC,OAAOxC,KAAK,EAAE;MACdc,OAAO,CAACd,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CC,QAAQ,CAAC,sDAAsD,CAAC;MAChE,OAAO,IAAI;IACb;EACF,CAAC;EAED,MAAMoB,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1BpC,cAAc,CAAC,KAAK,CAAC;IACrB,MAAMwD,OAAO,GAAG,IAAIb,IAAI,CAAC,CAAC;IAC1BrB,eAAe,CAACkC,OAAO,CAAC;IACxB,MAAMC,cAAc,GAAG,MAAMpB,iBAAiB,CAAC,CAAC;IAChD,IAAIoB,cAAc,KAAK,IAAI,EAAE;MAC3B3C,aAAa,CAAC2C,cAAc,CAAClB,KAAK,CAAC;MACnCrB,YAAY,CAACsB,QAAQ,IAAI,CAAC,GAAGA,QAAQ,EAAEiB,cAAc,CAAC,CAAC;MAEvD,MAAMC,aAAa,GAAG7D,OAAO,CAAC8D,MAAM,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACxD,IAAIA,MAAM,CAACtD,UAAU,KAAK,IAAI,EAAE,OAAOqD,OAAO;QAC9C,MAAME,WAAW,GAAGC,IAAI,CAACC,GAAG,CAACH,MAAM,CAACtD,UAAU,GAAGkD,cAAc,CAAClB,KAAK,CAAC;QACtE,MAAM0B,WAAW,GAAGF,IAAI,CAACC,GAAG,CAACJ,OAAO,CAACrD,UAAU,GAAGkD,cAAc,CAAClB,KAAK,CAAC;QACvE,OAAOuB,WAAW,GAAGG,WAAW,GAAGJ,MAAM,GAAGD,OAAO;MACrD,CAAC,EAAE;QAAEM,IAAI,EAAE,WAAW;QAAE3D,UAAU,EAAE4D;MAAS,CAAC,CAAC;MAE/CjE,SAAS,CAACwD,aAAa,CAAC;MACxBjF,WAAW,CAAC2F,YAAY,CAAC7E,QAAQ,EAAEmE,aAAa,CAACQ,IAAI,CAAC;IACxD,CAAC,MAAM;MACLlD,QAAQ,CAAC,0DAA0D,CAAC;IACtE;EACF,CAAC;EAED,MAAMqD,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAI9D,UAAU,IAAI,CAAC+D,KAAK,CAAC/D,UAAU,CAAC,EAAE;MACpC,MAAMgE,iBAAiB,GAAGC,UAAU,CAACjE,UAAU,CAAC;MAChD9B,WAAW,CAACgG,sBAAsB,CAAClF,QAAQ,EAAEC,UAAU,EAAE+E,iBAAiB,CAAC;MAC3EzE,UAAU,CAAC4E,WAAW,IACpBA,WAAW,CAACC,GAAG,CAACd,MAAM,IACpBA,MAAM,CAACK,IAAI,KAAK1E,UAAU,GAAG;QAAE,GAAGqE,MAAM;QAAEtD,UAAU,EAAEgE;MAAkB,CAAC,GAAGV,MAC9E,CACF,CAAC;MACDrD,aAAa,CAAC,EAAE,CAAC;IACnB;EACF,CAAC;EAED,IAAIH,SAAS,EAAE;IACb,oBAAOjB,OAAA,CAACV,aAAa;MAAAkG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC1B;EAEA,IAAIhE,KAAK,EAAE;IACT,oBACE3B,OAAA;MAAK4F,SAAS,EAAC,wEAAwE;MAAAC,QAAA,eACrF7F,OAAA;QAAK4F,SAAS,EAAC,4EAA4E;QAAAC,QAAA,gBACzF7F,OAAA;UAAI4F,SAAS,EAAC,yBAAyB;UAAAC,QAAA,EAAC;QAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClD3F,OAAA;UAAA6F,QAAA,EAAIlE;QAAK;UAAA6D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,oBACE3F,OAAA;IAAK4F,SAAS,EAAC,yEAAyE;IAAAC,QAAA,eACtF7F,OAAA;MAAK4F,SAAS,EAAC,8EAA8E;MAAAC,QAAA,gBAC3F7F,OAAA;QAAI4F,SAAS,EAAC,iEAAiE;QAAAC,QAAA,EAAC;MAAgB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrG3F,OAAA;QAAK4F,SAAS,EAAC,kBAAkB;QAAAC,QAAA,GAAC,aAAW,eAAA7F,OAAA;UAAM4F,SAAS,EAAC,yBAAyB;UAAAC,QAAA,EAAE1F;QAAQ;UAAAqF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9G3F,OAAA;QAAK4F,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/B7F,OAAA;UAAI4F,SAAS,EAAC,oCAAoC;UAAAC,QAAA,EAC/CtF,MAAM,IAAIA,MAAM,CAACuE,IAAI,GACpB,GAAGvE,MAAM,CAACuE,IAAI,KAAKvE,MAAM,CAACuF,MAAM,GAAGvF,MAAM,CAACuF,MAAM,CAACC,WAAW,CAAC,CAAC,GAAG,KAAK,GAAG,GACzE;QAA4B;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC,EACJtE,YAAY,iBAAIrB,OAAA;UAAG4F,SAAS,EAAC,SAAS;UAAAC,QAAA,GAAC,mBAAiB,EAACxE,YAAY,CAAC2E,OAAO,CAAC,CAAC,CAAC;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACrFpE,YAAY,iBAAIvB,OAAA;UAAG4F,SAAS,EAAC,SAAS;UAAAC,QAAA,GAAC,kBAAgB,EAACtE,YAAY,CAACyE,OAAO,CAAC,CAAC,CAAC;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACpFlE,UAAU,iBAAIzB,OAAA;UAAG4F,SAAS,EAAC,SAAS;UAAAC,QAAA,GAAC,gBAAc,EAACpE,UAAU,CAACuE,OAAO,CAAC,CAAC,CAAC;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAC9E5D,cAAc,iBAAI/B,OAAA;UAAG4F,SAAS,EAAC,SAAS;UAAAC,QAAA,GAAC,cAAY,EAAC9D,cAAc,CAACkE,cAAc,CAAC,CAAC;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAC1F1D,YAAY,iBAAIjC,OAAA;UAAG4F,SAAS,EAAC,SAAS;UAAAC,QAAA,GAAC,YAAU,EAAC5D,YAAY,CAACgE,cAAc,CAAC,CAAC;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClF,CAAC,eACN3F,OAAA;QAAK4F,SAAS,EAAC,0BAA0B;QAAAC,QAAA,GACtCxF,MAAM,IAAI,CAACM,WAAW,iBACrBX,OAAA;UACEkG,OAAO,EAAE7C,SAAU;UACnBuC,SAAS,EAAC,iLAAiL;UAAAC,QAAA,EAC5L;QAED;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACT,EACAhF,WAAW,iBAAIX,OAAA;UAAM4F,SAAS,EAAC,wCAAwC;UAAAC,QAAA,GAAC,aAAW,EAAC9E,QAAQ,EAAC,GAAC;QAAA;UAAAyE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnG,CAAC,EACL,CAAChF,WAAW,IAAI,CAACE,MAAM,iBACtBb,OAAA;QAAK4F,SAAS,EAAC,iDAAiD;QAAAC,QAAA,gBAC9D7F,OAAA;UACEmG,IAAI,EAAC,QAAQ;UACbC,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,uBAAuB;UACnCC,KAAK,EAAEnF,UAAW;UAClBoF,QAAQ,EAAGC,CAAC,IAAKpF,aAAa,CAACoF,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC/CV,SAAS,EAAC;QAAuI;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClJ,CAAC,eACF3F,OAAA;UACEkG,OAAO,EAAEjB,gBAAiB;UAC1BW,SAAS,EAAC,gGAAgG;UAAAC,QAAA,EAC3G;QAED;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACN,eACD3F,OAAA;QAAK4F,SAAS,EAAC,WAAW;QAAAC,QAAA,eACxB7F,OAAA,CAACF,mBAAmB;UAAC4G,KAAK,EAAC,MAAM;UAACC,MAAM,EAAC,MAAM;UAAAd,QAAA,eAC7C7F,OAAA,CAACT,SAAS;YACRqE,IAAI,EAAE/B,SAAU;YAChB+E,MAAM,EAAE;cACNC,GAAG,EAAE,CAAC;cACNC,KAAK,EAAE,EAAE;cACTC,IAAI,EAAE,EAAE;cACRC,MAAM,EAAE;YACV,CAAE;YAAAnB,QAAA,gBAEF7F,OAAA,CAACL,aAAa;cAACsH,eAAe,EAAC;YAAK;cAAAzB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACvC3F,OAAA,CAACP,KAAK;cACJyH,OAAO,EAAC,MAAM;cACdC,KAAK,EAAE;gBAAEb,KAAK,EAAE,UAAU;gBAAEc,QAAQ,EAAE,mBAAmB;gBAAEC,MAAM,EAAE,CAAC;cAAG,CAAE;cACzEC,MAAM,EAAE,CAAC,CAAC,EAAE,EAAE;YAAE;cAAA9B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjB,CAAC,eACF3F,OAAA,CAACN,KAAK;cACJyH,KAAK,EAAE;gBAAEb,KAAK,EAAE,aAAa;gBAAEiB,KAAK,EAAE,CAAC,EAAE;gBAAEH,QAAQ,EAAE;cAAa,CAAE;cACpEE,MAAM,EAAE,CAAC,MAAM,EAAE,MAAM;YAAE;cAAA9B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1B,CAAC,eACF3F,OAAA,CAACJ,OAAO;cACN4H,cAAc,EAAGlB,KAAK,IAAK,SAASA,KAAK,GAAI;cAC7CmB,SAAS,EAAEA,CAACnB,KAAK,EAAExB,IAAI,EAAE4C,KAAK,KAAK,CACjC,IAAIpB,KAAK,CAACN,OAAO,CAAC,CAAC,CAAC,EAAE,EACtBlB,IAAI,EACJ,cAAc,IAAIvB,IAAI,CAACmE,KAAK,CAACC,OAAO,CAAC1D,SAAS,CAAC,CAACgC,cAAc,CAAC,CAAC,EAAE;YAClE;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACF3F,OAAA,CAACH,MAAM;cAAA2F,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACV3F,OAAA,CAACR,IAAI;cAAC2G,IAAI,EAAC,UAAU;cAACe,OAAO,EAAC,OAAO;cAACU,MAAM,EAAC,SAAS;cAACC,GAAG,EAAE;YAAM;cAAArC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EACpElF,OAAO,CAAC8E,GAAG,CAAC,CAACd,MAAM,EAAEqD,KAAK,kBACzB9H,OAAA,CAACR,IAAI;cAEH2G,IAAI,EAAC,UAAU;cACfe,OAAO,EAAEA,CAAA,KAAMzC,MAAM,CAACtD,UAAW;cACjCyG,MAAM,EAAE,OAAOE,KAAK,GAAG,KAAK,GAAG,GAAG,aAAc;cAChDb,eAAe,EAAC,KAAK;cACrBnC,IAAI,EAAE,GAAGL,MAAM,CAACK,IAAI;YAAgB,GAL/BL,MAAM,CAACK,IAAI;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAMjB,CACF,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC,eACN3F,OAAA;QAAK4F,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnB7F,OAAA;UAAI4F,SAAS,EAAC,sCAAsC;UAAAC,QAAA,EAAC;QAAM;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChE3F,OAAA;UAAK4F,SAAS,EAAC,WAAW;UAAAC,QAAA,EACvBpF,OAAO,CAAC8E,GAAG,CAAC,CAACd,MAAM,EAAEqD,KAAK,kBACzB9H,OAAA;YAAiB4F,SAAS,EAAC,kFAAkF;YAAAC,QAAA,gBAC3G7F,OAAA;cAAM4F,SAAS,EAAC,eAAe;cAAAC,QAAA,EAAEpB,MAAM,CAACK;YAAI;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACpD3F,OAAA;cAAM4F,SAAS,EAAC,iBAAiB;cAAAC,QAAA,EAC9BpB,MAAM,CAACtD,UAAU,GAAG,IAAIsD,MAAM,CAACtD,UAAU,CAAC6E,OAAO,CAAC,CAAC,CAAC,EAAE,GAAG;YAAmB;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzE,CAAC,EACN9E,MAAM,IAAI4D,MAAM,CAACK,IAAI,KAAKjE,MAAM,CAACiE,IAAI,iBAAI9E,OAAA;cAAM4F,SAAS,EAAC,eAAe;cAAAC,QAAA,EAAC;YAAE;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA,GAL3EmC,KAAK;YAAAtC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAMV,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EACL9E,MAAM,iBACLb,OAAA;QAAK4F,SAAS,EAAC,sFAAsF;QAAAC,QAAA,GAAC,UAC5F,EAAChF,MAAM,CAACiE,IAAI,EAAC,eACvB;MAAA;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrF,EAAA,CArRIJ,iBAAiB;AAAA6H,EAAA,GAAjB7H,iBAAiB;AAuRvB,eAAeA,iBAAiB;AAAC,IAAA6H,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}