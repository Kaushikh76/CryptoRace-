{"ast":null,"code":"var _jsxFileName = \"F:\\\\crypto-chicken-run\\\\src\\\\components\\\\CryptoPriceTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CryptoPriceTracker = () => {\n  _s();\n  const [cryptoData, setCryptoData] = useState([]);\n  const [selectedCrypto, setSelectedCrypto] = useState('bitcoin');\n  const [price, setPrice] = useState(null);\n  useEffect(() => {\n    const fetchCryptoList = async () => {\n      try {\n        const response = await fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false');\n        const data = await response.json();\n        setCryptoData(data);\n      } catch (error) {\n        console.error('Error fetching crypto list:', error);\n      }\n    };\n    fetchCryptoList();\n  }, []);\n  useEffect(() => {\n    const fetchPrice = async () => {\n      try {\n        const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${selectedCrypto}&vs_currencies=usd`);\n        const data = await response.json();\n        setPrice(data[selectedCrypto].usd);\n      } catch (error) {\n        console.error('Error fetching price:', error);\n      }\n    };\n    if (selectedCrypto) {\n      fetchPrice();\n      const interval = setInterval(fetchPrice, 60000); // Update every minute\n      return () => clearInterval(interval);\n    }\n  }, [selectedCrypto]);\n  const handleCryptoChange = event => {\n    setSelectedCrypto(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 bg-white rounded shadow-md max-w-md mx-auto mt-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Crypto Price Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCrypto,\n        onChange: handleCryptoChange,\n        className: \"w-full p-2 border rounded\",\n        children: cryptoData.map(crypto => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: crypto.id,\n          children: crypto.name\n        }, crypto.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), price !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-2xl font-bold\",\n      children: [\"Price: $\", price.toFixed(2), \" USD\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(CryptoPriceTracker, \"P0FhXiI2lqCnyZ6zrWvycynBnZE=\");\n_c = CryptoPriceTracker;\nexport default CryptoPriceTracker;\nvar _c;\n$RefreshReg$(_c, \"CryptoPriceTracker\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CryptoPriceTracker","_s","cryptoData","setCryptoData","selectedCrypto","setSelectedCrypto","price","setPrice","fetchCryptoList","response","fetch","data","json","error","console","fetchPrice","usd","interval","setInterval","clearInterval","handleCryptoChange","event","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","crypto","id","name","toFixed","_c","$RefreshReg$"],"sources":["F:/crypto-chicken-run/src/components/CryptoPriceTracker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst CryptoPriceTracker = () => {\r\n  const [cryptoData, setCryptoData] = useState([]);\r\n  const [selectedCrypto, setSelectedCrypto] = useState('bitcoin');\r\n  const [price, setPrice] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchCryptoList = async () => {\r\n      try {\r\n        const response = await fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false');\r\n        const data = await response.json();\r\n        setCryptoData(data);\r\n      } catch (error) {\r\n        console.error('Error fetching crypto list:', error);\r\n      }\r\n    };\r\n\r\n    fetchCryptoList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchPrice = async () => {\r\n      try {\r\n        const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${selectedCrypto}&vs_currencies=usd`);\r\n        const data = await response.json();\r\n        setPrice(data[selectedCrypto].usd);\r\n      } catch (error) {\r\n        console.error('Error fetching price:', error);\r\n      }\r\n    };\r\n\r\n    if (selectedCrypto) {\r\n      fetchPrice();\r\n      const interval = setInterval(fetchPrice, 60000); // Update every minute\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [selectedCrypto]);\r\n\r\n  const handleCryptoChange = (event) => {\r\n    setSelectedCrypto(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 bg-white rounded shadow-md max-w-md mx-auto mt-10\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Crypto Price Tracker</h2>\r\n      <div className=\"mb-4\">\r\n        <select\r\n          value={selectedCrypto}\r\n          onChange={handleCryptoChange}\r\n          className=\"w-full p-2 border rounded\"\r\n        >\r\n          {cryptoData.map((crypto) => (\r\n            <option key={crypto.id} value={crypto.id}>\r\n              {crypto.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      {price !== null && (\r\n        <div className=\"text-2xl font-bold\">\r\n          Price: ${price.toFixed(2)} USD\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoPriceTracker;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}