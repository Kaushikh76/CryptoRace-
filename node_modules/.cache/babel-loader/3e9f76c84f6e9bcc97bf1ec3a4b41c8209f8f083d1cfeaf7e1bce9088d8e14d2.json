{"ast":null,"code":"var _jsxFileName = \"F:\\\\crypto-chicken-run\\\\src\\\\components\\\\CryptoChickenRace.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as roomService from '../services/roomService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RACE_DURATION = 60000; // 60 seconds\nconst UPDATE_INTERVAL = 1000; // 1 second\nconst CHART_WIDTH = 800;\nconst CHART_HEIGHT = 400;\nconst CryptoChickenRace = ({\n  roomCode,\n  playerName,\n  isHost\n}) => {\n  _s();\n  const [cryptos, setCryptos] = useState([]);\n  const [players, setPlayers] = useState([]);\n  const [raceStarted, setRaceStarted] = useState(false);\n  const [winner, setWinner] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(RACE_DURATION / 1000);\n  const chartRef = useRef(null);\n  useEffect(() => {\n    const fetchCryptos = async () => {\n      const fetchedCryptos = await roomService.fetchCryptocurrencies();\n      setCryptos(fetchedCryptos.map(crypto => ({\n        ...crypto,\n        position: {\n          x: 0,\n          y: Math.random() * CHART_HEIGHT\n        },\n        startPrice: 0,\n        currentPrice: 0,\n        color: `hsl(${Math.random() * 360}, 100%, 50%)` // Random vibrant color\n      })));\n    };\n    fetchCryptos();\n  }, []);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const updatedPlayers = roomService.getRoomPlayers(roomCode);\n      if (updatedPlayers) {\n        setPlayers(updatedPlayers);\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [roomCode]);\n  useEffect(() => {\n    if (raceStarted) {\n      const interval = setInterval(() => {\n        updatePrices();\n        setTimeLeft(prevTime => {\n          if (prevTime <= 1) {\n            clearInterval(interval);\n            endRace();\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, UPDATE_INTERVAL);\n      return () => clearInterval(interval);\n    }\n  }, [raceStarted]);\n  useEffect(() => {\n    if (chartRef.current) {\n      const ctx = chartRef.current.getContext('2d');\n      drawChart(ctx);\n    }\n  }, [cryptos, raceStarted]);\n  const startRace = async () => {\n    if (players.some(player => player.selection === null)) {\n      alert('All players must select a cryptocurrency before starting the race!');\n      return;\n    }\n    setRaceStarted(true);\n    setWinner(null);\n    setTimeLeft(RACE_DURATION / 1000);\n    roomService.startRace(roomCode);\n    await fetchInitialPrices();\n  };\n  const fetchInitialPrices = async () => {\n    const selectedCryptos = players.map(player => player.selection);\n    const ids = [...new Set(selectedCryptos)].join(',');\n    try {\n      const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${ids}&vs_currencies=usd`);\n      const data = await response.json();\n      setCryptos(prevCryptos => prevCryptos.map(crypto => {\n        var _data$crypto$id, _data$crypto$id2;\n        return {\n          ...crypto,\n          position: {\n            ...crypto.position,\n            x: 0\n          },\n          startPrice: ((_data$crypto$id = data[crypto.id]) === null || _data$crypto$id === void 0 ? void 0 : _data$crypto$id.usd) || Math.random() * 1000,\n          currentPrice: ((_data$crypto$id2 = data[crypto.id]) === null || _data$crypto$id2 === void 0 ? void 0 : _data$crypto$id2.usd) || Math.random() * 1000\n        };\n      }));\n    } catch (error) {\n      console.error('Error fetching initial prices:', error);\n      setCryptos(prevCryptos => prevCryptos.map(crypto => ({\n        ...crypto,\n        position: {\n          ...crypto.position,\n          x: 0\n        },\n        startPrice: Math.random() * 1000,\n        currentPrice: Math.random() * 1000\n      })));\n    }\n  };\n  const updatePrices = () => {\n    setCryptos(prevCryptos => prevCryptos.map(crypto => {\n      if (players.some(player => player.selection === crypto.id)) {\n        const priceChange = (Math.random() - 0.5) * 2; // Random price change between -1% and 1%\n        const newPrice = crypto.currentPrice * (1 + priceChange / 100);\n        const totalChange = (newPrice - crypto.startPrice) / crypto.startPrice * 100;\n        const newX = Math.min(CHART_WIDTH, Math.max(0, (totalChange + 10) * (CHART_WIDTH / 20))); // Scale to fit chart\n        const newY = crypto.position.y + (Math.random() - 0.5) * 20; // Random vertical movement\n\n        return {\n          ...crypto,\n          position: {\n            x: newX,\n            y: Math.min(CHART_HEIGHT - 20, Math.max(20, newY)) // Keep within chart bounds\n          },\n          currentPrice: newPrice\n        };\n      }\n      return crypto;\n    }));\n  };\n  const endRace = () => {\n    setRaceStarted(false);\n    const selectedCryptos = cryptos.filter(crypto => players.some(player => player.selection === crypto.id));\n    const winningCrypto = selectedCryptos.reduce((prev, current) => prev.position.x > current.position.x ? prev : current);\n    setWinner(winningCrypto);\n    setPlayers(prevPlayers => prevPlayers.map(player => ({\n      ...player,\n      winner: player.selection === winningCrypto.id\n    })));\n  };\n  const selectCrypto = (playerName, cryptoId) => {\n    roomService.updatePlayerSelection(roomCode, playerName, cryptoId);\n  };\n  const drawChart = ctx => {\n    ctx.clearRect(0, 0, CHART_WIDTH, CHART_HEIGHT);\n\n    // Draw grid lines\n    ctx.strokeStyle = 'rgba(255, 255, 255, 0.1)';\n    ctx.beginPath();\n    for (let i = 0; i < CHART_WIDTH; i += 50) {\n      ctx.moveTo(i, 0);\n      ctx.lineTo(i, CHART_HEIGHT);\n    }\n    for (let i = 0; i < CHART_HEIGHT; i += 50) {\n      ctx.moveTo(0, i);\n      ctx.lineTo(CHART_WIDTH, i);\n    }\n    ctx.stroke();\n\n    // Draw crypto icons\n    cryptos.forEach(crypto => {\n      if (players.some(player => player.selection === crypto.id)) {\n        ctx.fillStyle = crypto.color;\n        ctx.beginPath();\n        ctx.arc(crypto.position.x, crypto.position.y, 10, 0, 2 * Math.PI);\n        ctx.fill();\n        ctx.fillStyle = 'white';\n        ctx.font = '12px Arial';\n        ctx.fillText(crypto.symbol.toUpperCase(), crypto.position.x - 10, crypto.position.y - 15);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gray-900 text-cyan-300\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-8 bg-gray-800 rounded-lg shadow-xl max-w-4xl w-full border border-cyan-500\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-4xl font-bold mb-6 text-center text-cyan-400 animate-pulse\",\n        children: \"Crypto Race 2077\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 text-center\",\n        children: [\"Room Code: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-bold text-pink-500\",\n          children: roomCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 54\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 flex justify-center\",\n        children: [isHost && !raceStarted && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startRace,\n          className: \"px-6 py-3 bg-pink-600 text-white rounded-full hover:bg-pink-700 transition duration-300 ease-in-out transform hover:-translate-y-1 hover:scale-110 shadow-lg shadow-pink-500/50\",\n          children: \"Initiate Race\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), raceStarted && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-2xl font-semibold text-yellow-400\",\n          children: [\"Time left: \", timeLeft, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: chartRef,\n          width: CHART_WIDTH,\n          height: CHART_HEIGHT,\n          className: \"bg-gray-700 rounded-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold mb-2 text-pink-400\",\n          children: \"Racers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: players.map((player, index) => {\n            var _cryptos$find;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between bg-gray-700 p-2 rounded border border-pink-700\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-cyan-300\",\n                children: player.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 17\n              }, this), !raceStarted && /*#__PURE__*/_jsxDEV(\"select\", {\n                value: player.selection || '',\n                onChange: e => selectCrypto(player.name, e.target.value),\n                disabled: playerName !== player.name,\n                className: \"p-1 border rounded bg-gray-800 text-cyan-300 border-cyan-500\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select a crypto\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 21\n                }, this), cryptos.map(crypto => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: crypto.id,\n                  children: crypto.name\n                }, crypto.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this), raceStarted && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-yellow-400\",\n                children: player.selection ? (_cryptos$find = cryptos.find(c => c.id === player.selection)) === null || _cryptos$find === void 0 ? void 0 : _cryptos$find.name : 'Not selected'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 19\n              }, this), winner && player.winner && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2 text-2xl\",\n                children: \"\\uD83C\\uDFC6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 45\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), winner && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl font-bold text-center bg-yellow-600 text-black p-4 rounded-lg animate-pulse\",\n        children: [\"Champion Crypto: \", winner.name, \" (\", winner.symbol.toUpperCase(), \") \\uD83C\\uDFC6\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n_s(CryptoChickenRace, \"0Ae4yw3h8166qgT66mTsLAfyT7s=\");\n_c = CryptoChickenRace;\nexport default CryptoChickenRace;\nvar _c;\n$RefreshReg$(_c, \"CryptoChickenRace\");","map":{"version":3,"names":["React","useState","useEffect","useRef","roomService","jsxDEV","_jsxDEV","RACE_DURATION","UPDATE_INTERVAL","CHART_WIDTH","CHART_HEIGHT","CryptoChickenRace","roomCode","playerName","isHost","_s","cryptos","setCryptos","players","setPlayers","raceStarted","setRaceStarted","winner","setWinner","timeLeft","setTimeLeft","chartRef","fetchCryptos","fetchedCryptos","fetchCryptocurrencies","map","crypto","position","x","y","Math","random","startPrice","currentPrice","color","interval","setInterval","updatedPlayers","getRoomPlayers","clearInterval","updatePrices","prevTime","endRace","current","ctx","getContext","drawChart","startRace","some","player","selection","alert","fetchInitialPrices","selectedCryptos","ids","Set","join","response","fetch","data","json","prevCryptos","_data$crypto$id","_data$crypto$id2","id","usd","error","console","priceChange","newPrice","totalChange","newX","min","max","newY","filter","winningCrypto","reduce","prev","prevPlayers","selectCrypto","cryptoId","updatePlayerSelection","clearRect","strokeStyle","beginPath","i","moveTo","lineTo","stroke","forEach","fillStyle","arc","PI","fill","font","fillText","symbol","toUpperCase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","width","height","index","_cryptos$find","name","value","onChange","e","target","disabled","find","c","_c","$RefreshReg$"],"sources":["F:/crypto-chicken-run/src/components/CryptoChickenRace.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport * as roomService from '../services/roomService';\r\n\r\nconst RACE_DURATION = 60000; // 60 seconds\r\nconst UPDATE_INTERVAL = 1000; // 1 second\r\nconst CHART_WIDTH = 800;\r\nconst CHART_HEIGHT = 400;\r\n\r\nconst CryptoChickenRace = ({ roomCode, playerName, isHost }) => {\r\n  const [cryptos, setCryptos] = useState([]);\r\n  const [players, setPlayers] = useState([]);\r\n  const [raceStarted, setRaceStarted] = useState(false);\r\n  const [winner, setWinner] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(RACE_DURATION / 1000);\r\n  const chartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchCryptos = async () => {\r\n      const fetchedCryptos = await roomService.fetchCryptocurrencies();\r\n      setCryptos(fetchedCryptos.map(crypto => ({\r\n        ...crypto,\r\n        position: { x: 0, y: Math.random() * CHART_HEIGHT },\r\n        startPrice: 0,\r\n        currentPrice: 0,\r\n        color: `hsl(${Math.random() * 360}, 100%, 50%)` // Random vibrant color\r\n      })));\r\n    };\r\n    fetchCryptos();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const updatedPlayers = roomService.getRoomPlayers(roomCode);\r\n      if (updatedPlayers) {\r\n        setPlayers(updatedPlayers);\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [roomCode]);\r\n\r\n  useEffect(() => {\r\n    if (raceStarted) {\r\n      const interval = setInterval(() => {\r\n        updatePrices();\r\n        setTimeLeft((prevTime) => {\r\n          if (prevTime <= 1) {\r\n            clearInterval(interval);\r\n            endRace();\r\n            return 0;\r\n          }\r\n          return prevTime - 1;\r\n        });\r\n      }, UPDATE_INTERVAL);\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [raceStarted]);\r\n\r\n  useEffect(() => {\r\n    if (chartRef.current) {\r\n      const ctx = chartRef.current.getContext('2d');\r\n      drawChart(ctx);\r\n    }\r\n  }, [cryptos, raceStarted]);\r\n\r\n  const startRace = async () => {\r\n    if (players.some(player => player.selection === null)) {\r\n      alert('All players must select a cryptocurrency before starting the race!');\r\n      return;\r\n    }\r\n    setRaceStarted(true);\r\n    setWinner(null);\r\n    setTimeLeft(RACE_DURATION / 1000);\r\n    roomService.startRace(roomCode);\r\n    await fetchInitialPrices();\r\n  };\r\n\r\n  const fetchInitialPrices = async () => {\r\n    const selectedCryptos = players.map(player => player.selection);\r\n    const ids = [...new Set(selectedCryptos)].join(',');\r\n    try {\r\n      const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${ids}&vs_currencies=usd`);\r\n      const data = await response.json();\r\n      \r\n      setCryptos(prevCryptos => \r\n        prevCryptos.map(crypto => ({\r\n          ...crypto,\r\n          position: { ...crypto.position, x: 0 },\r\n          startPrice: data[crypto.id]?.usd || Math.random() * 1000,\r\n          currentPrice: data[crypto.id]?.usd || Math.random() * 1000\r\n        }))\r\n      );\r\n    } catch (error) {\r\n      console.error('Error fetching initial prices:', error);\r\n      setCryptos(prevCryptos => \r\n        prevCryptos.map(crypto => ({\r\n          ...crypto,\r\n          position: { ...crypto.position, x: 0 },\r\n          startPrice: Math.random() * 1000,\r\n          currentPrice: Math.random() * 1000\r\n        }))\r\n      );\r\n    }\r\n  };\r\n\r\n  const updatePrices = () => {\r\n    setCryptos(prevCryptos => \r\n      prevCryptos.map(crypto => {\r\n        if (players.some(player => player.selection === crypto.id)) {\r\n          const priceChange = (Math.random() - 0.5) * 2; // Random price change between -1% and 1%\r\n          const newPrice = crypto.currentPrice * (1 + priceChange / 100);\r\n          const totalChange = ((newPrice - crypto.startPrice) / crypto.startPrice) * 100;\r\n          const newX = Math.min(CHART_WIDTH, Math.max(0, (totalChange + 10) * (CHART_WIDTH / 20))); // Scale to fit chart\r\n          const newY = crypto.position.y + (Math.random() - 0.5) * 20; // Random vertical movement\r\n          \r\n          return {\r\n            ...crypto,\r\n            position: { \r\n              x: newX, \r\n              y: Math.min(CHART_HEIGHT - 20, Math.max(20, newY)) // Keep within chart bounds\r\n            },\r\n            currentPrice: newPrice,\r\n          };\r\n        }\r\n        return crypto;\r\n      })\r\n    );\r\n  };\r\n\r\n  const endRace = () => {\r\n    setRaceStarted(false);\r\n    const selectedCryptos = cryptos.filter(crypto => \r\n      players.some(player => player.selection === crypto.id)\r\n    );\r\n    const winningCrypto = selectedCryptos.reduce((prev, current) => \r\n      (prev.position.x > current.position.x) ? prev : current\r\n    );\r\n    setWinner(winningCrypto);\r\n    \r\n    setPlayers(prevPlayers => \r\n      prevPlayers.map(player => ({\r\n        ...player,\r\n        winner: player.selection === winningCrypto.id\r\n      }))\r\n    );\r\n  };\r\n\r\n  const selectCrypto = (playerName, cryptoId) => {\r\n    roomService.updatePlayerSelection(roomCode, playerName, cryptoId);\r\n  };\r\n\r\n  const drawChart = (ctx) => {\r\n    ctx.clearRect(0, 0, CHART_WIDTH, CHART_HEIGHT);\r\n    \r\n    // Draw grid lines\r\n    ctx.strokeStyle = 'rgba(255, 255, 255, 0.1)';\r\n    ctx.beginPath();\r\n    for (let i = 0; i < CHART_WIDTH; i += 50) {\r\n      ctx.moveTo(i, 0);\r\n      ctx.lineTo(i, CHART_HEIGHT);\r\n    }\r\n    for (let i = 0; i < CHART_HEIGHT; i += 50) {\r\n      ctx.moveTo(0, i);\r\n      ctx.lineTo(CHART_WIDTH, i);\r\n    }\r\n    ctx.stroke();\r\n\r\n    // Draw crypto icons\r\n    cryptos.forEach(crypto => {\r\n      if (players.some(player => player.selection === crypto.id)) {\r\n        ctx.fillStyle = crypto.color;\r\n        ctx.beginPath();\r\n        ctx.arc(crypto.position.x, crypto.position.y, 10, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n        \r\n        ctx.fillStyle = 'white';\r\n        ctx.font = '12px Arial';\r\n        ctx.fillText(crypto.symbol.toUpperCase(), crypto.position.x - 10, crypto.position.y - 15);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-900 text-cyan-300\">\r\n      <div className=\"p-8 bg-gray-800 rounded-lg shadow-xl max-w-4xl w-full border border-cyan-500\">\r\n        <h2 className=\"text-4xl font-bold mb-6 text-center text-cyan-400 animate-pulse\">Crypto Race 2077</h2>\r\n        <div className=\"mb-4 text-center\">Room Code: <span className=\"font-bold text-pink-500\">{roomCode}</span></div>\r\n        <div className=\"mb-6 flex justify-center\">\r\n          {isHost && !raceStarted && (\r\n            <button \r\n              onClick={startRace} \r\n              className=\"px-6 py-3 bg-pink-600 text-white rounded-full hover:bg-pink-700 transition duration-300 ease-in-out transform hover:-translate-y-1 hover:scale-110 shadow-lg shadow-pink-500/50\"\r\n            >\r\n              Initiate Race\r\n            </button>\r\n          )}\r\n          {raceStarted && <span className=\"text-2xl font-semibold text-yellow-400\">Time left: {timeLeft}s</span>}\r\n        </div>\r\n        <div className=\"mb-6\">\r\n          <canvas ref={chartRef} width={CHART_WIDTH} height={CHART_HEIGHT} className=\"bg-gray-700 rounded-lg\" />\r\n        </div>\r\n        <div className=\"mb-6\">\r\n          <h3 className=\"text-xl font-bold mb-2 text-pink-400\">Racers</h3>\r\n          <div className=\"space-y-2\">\r\n            {players.map((player, index) => (\r\n              <div key={index} className=\"flex items-center justify-between bg-gray-700 p-2 rounded border border-pink-700\">\r\n                <span className=\"text-cyan-300\">{player.name}</span>\r\n                {!raceStarted && (\r\n                  <select\r\n                    value={player.selection || ''}\r\n                    onChange={(e) => selectCrypto(player.name, e.target.value)}\r\n                    disabled={playerName !== player.name}\r\n                    className=\"p-1 border rounded bg-gray-800 text-cyan-300 border-cyan-500\"\r\n                  >\r\n                    <option value=\"\">Select a crypto</option>\r\n                    {cryptos.map(crypto => (\r\n                      <option key={crypto.id} value={crypto.id}>{crypto.name}</option>\r\n                    ))}\r\n                  </select>\r\n                )}\r\n                {raceStarted && (\r\n                  <span className=\"text-yellow-400\">{player.selection ? cryptos.find(c => c.id === player.selection)?.name : 'Not selected'}</span>\r\n                )}\r\n                {winner && player.winner && <span className=\"ml-2 text-2xl\">🏆</span>}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        {winner && (\r\n          <div className=\"text-2xl font-bold text-center bg-yellow-600 text-black p-4 rounded-lg animate-pulse\">\r\n            Champion Crypto: {winner.name} ({winner.symbol.toUpperCase()}) 🏆\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoChickenRace;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}