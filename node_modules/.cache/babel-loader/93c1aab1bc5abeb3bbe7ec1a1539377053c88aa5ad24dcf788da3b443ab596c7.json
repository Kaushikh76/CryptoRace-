{"ast":null,"code":"var _jsxFileName = \"F:\\\\crypto-chicken-run\\\\src\\\\components\\\\CryptoChickenRace.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport * as roomService from '../services/roomService';\nimport LoadingScreen from './LoadingScreen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RACE_DURATION = 60000; // 60 seconds\nconst UPDATE_INTERVAL = 1000; // 1 second\nconst TRACK_LENGTH = 100;\nconst CryptoChickenRace = ({\n  roomCode,\n  playerName,\n  isHost\n}) => {\n  _s();\n  const [cryptos, setCryptos] = useState([]);\n  const [players, setPlayers] = useState([]);\n  const [raceStarted, setRaceStarted] = useState(false);\n  const [winner, setWinner] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(RACE_DURATION / 1000);\n  const [isLoading, setIsLoading] = useState(true);\n  const [historicalPrices, setHistoricalPrices] = useState({});\n  useEffect(() => {\n    const fetchCryptos = async () => {\n      setIsLoading(true);\n      const fetchedCryptos = await roomService.fetchCryptocurrencies();\n      setCryptos(fetchedCryptos.map(crypto => ({\n        ...crypto,\n        position: 0,\n        startPrice: 0,\n        currentPrice: 0,\n        color: `#${Math.floor(Math.random() * 16777215).toString(16)}` // Random color\n      })));\n      setIsLoading(false);\n    };\n    fetchCryptos();\n  }, []);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const updatedPlayers = roomService.getRoomPlayers(roomCode);\n      if (updatedPlayers) {\n        setPlayers(updatedPlayers);\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [roomCode]);\n  useEffect(() => {\n    if (raceStarted) {\n      const interval = setInterval(() => {\n        updatePrices();\n        setTimeLeft(prevTime => {\n          if (prevTime <= 1) {\n            clearInterval(interval);\n            endRace();\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, UPDATE_INTERVAL);\n      return () => clearInterval(interval);\n    }\n  }, [raceStarted]);\n  const fetchHistoricalPrice = async (cryptoId, timestamp) => {\n    try {\n      const date = new Date(timestamp);\n      const formattedDate = date.toISOString().split('T')[0]; // Format: YYYY-MM-DD\n      const response = await fetch(`https://api.coingecko.com/api/v3/coins/${cryptoId}/history?date=${formattedDate}`);\n      const data = await response.json();\n      return data.market_data.current_price.usd;\n    } catch (error) {\n      console.error(`Error fetching historical price for ${cryptoId}:`, error);\n      return null;\n    }\n  };\n  const startRace = async () => {\n    if (players.some(player => player.selection === null)) {\n      alert('All players must select a cryptocurrency before starting the race!');\n      return;\n    }\n    setRaceStarted(true);\n    setWinner(null);\n    setTimeLeft(RACE_DURATION / 1000);\n    roomService.startRace(roomCode);\n\n    // Fetch historical prices for the start of the race\n    const startTimestamp = Date.now();\n    const selectedCryptos = players.map(player => player.selection);\n    const uniqueCryptos = [...new Set(selectedCryptos)];\n    const historicalPricesData = {};\n    for (const cryptoId of uniqueCryptos) {\n      const price = await fetchHistoricalPrice(cryptoId, startTimestamp);\n      historicalPricesData[cryptoId] = price;\n    }\n    setHistoricalPrices(historicalPricesData);\n    await fetchInitialPrices();\n  };\n  const fetchInitialPrices = async () => {\n    const selectedCryptos = players.map(player => player.selection);\n    const ids = [...new Set(selectedCryptos)].join(',');\n    try {\n      const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${ids}&vs_currencies=usd`);\n      const data = await response.json();\n      setCryptos(prevCryptos => prevCryptos.map(crypto => {\n        var _data$crypto$id, _data$crypto$id2;\n        return {\n          ...crypto,\n          position: 0,\n          startPrice: historicalPrices[crypto.id] || ((_data$crypto$id = data[crypto.id]) === null || _data$crypto$id === void 0 ? void 0 : _data$crypto$id.usd) || Math.random() * 1000,\n          currentPrice: ((_data$crypto$id2 = data[crypto.id]) === null || _data$crypto$id2 === void 0 ? void 0 : _data$crypto$id2.usd) || Math.random() * 1000\n        };\n      }));\n    } catch (error) {\n      console.error('Error fetching initial prices:', error);\n      setCryptos(prevCryptos => prevCryptos.map(crypto => ({\n        ...crypto,\n        position: 0,\n        startPrice: historicalPrices[crypto.id] || Math.random() * 1000,\n        currentPrice: Math.random() * 1000\n      })));\n    }\n  };\n  const updatePrices = () => {\n    setCryptos(prevCryptos => prevCryptos.map(crypto => {\n      if (players.some(player => player.selection === crypto.id)) {\n        const priceChange = (Math.random() - 0.5) * 2; // Random price change between -1% and 1%\n        const newPrice = crypto.currentPrice * (1 + priceChange / 100);\n        const totalChange = (newPrice - crypto.startPrice) / crypto.startPrice * 100;\n        const newPosition = Math.min(TRACK_LENGTH, Math.max(0, totalChange));\n        return {\n          ...crypto,\n          position: newPosition,\n          currentPrice: newPrice\n        };\n      }\n      return crypto;\n    }));\n  };\n  const endRace = () => {\n    setRaceStarted(false);\n    const selectedCryptos = cryptos.filter(crypto => players.some(player => player.selection === crypto.id));\n    const winningCrypto = selectedCryptos.reduce((prev, current) => prev.position > current.position ? prev : current);\n    setWinner(winningCrypto);\n    setPlayers(prevPlayers => prevPlayers.map(player => ({\n      ...player,\n      winner: player.selection === winningCrypto.id\n    })));\n  };\n  const selectCrypto = (playerName, cryptoId) => {\n    roomService.updatePlayerSelection(roomCode, playerName, cryptoId);\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(LoadingScreen, {\n      cryptos: cryptos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gray-900 text-cyan-300\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-8 bg-gray-800 rounded-lg shadow-xl max-w-4xl w-full border border-cyan-500\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-4xl font-bold mb-6 text-center text-cyan-400 animate-pulse\",\n        children: \"Crypto Race 2077\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 text-center\",\n        children: [\"Room Code: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-bold text-pink-500\",\n          children: roomCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 54\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 flex justify-center\",\n        children: [isHost && !raceStarted && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startRace,\n          className: \"px-6 py-3 bg-pink-600 text-white rounded-full hover:bg-pink-700 transition duration-300 ease-in-out transform hover:-translate-y-1 hover:scale-110 shadow-lg shadow-pink-500/50\",\n          children: \"Initiate Race\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), raceStarted && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-2xl font-semibold text-yellow-400\",\n          children: [\"Time left: \", timeLeft, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 space-y-4\",\n        children: cryptos.filter(crypto => players.some(player => player.selection === crypto.id)).map(crypto => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-700 rounded-lg p-4 shadow-lg border border-cyan-700\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: crypto.image,\n              alt: crypto.name,\n              className: \"w-8 h-8 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-24 font-semibold text-cyan-300\",\n              children: crypto.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-grow bg-gray-600 h-10 rounded-full relative overflow-hidden\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"h-full absolute top-0 left-0 flex items-center justify-center text-white font-bold rounded-full\",\n                style: {\n                  width: `${crypto.position}%`,\n                  backgroundColor: crypto.color,\n                  transition: 'width 1s linear'\n                },\n                children: crypto.symbol.toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-48 text-right font-mono\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-yellow-400\",\n                children: [\"Start: $\", crypto.startPrice.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-green-400\",\n                children: [\"Current: $\", crypto.currentPrice.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)\n        }, crypto.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold mb-2 text-pink-400\",\n          children: \"Racers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: players.map((player, index) => {\n            var _cryptos$find;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between bg-gray-700 p-2 rounded border border-pink-700\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-cyan-300\",\n                children: player.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this), !raceStarted && /*#__PURE__*/_jsxDEV(\"select\", {\n                value: player.selection || '',\n                onChange: e => selectCrypto(player.name, e.target.value),\n                disabled: playerName !== player.name,\n                className: \"p-1 border rounded bg-gray-800 text-cyan-300 border-cyan-500\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select a crypto\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 21\n                }, this), cryptos.map(crypto => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: crypto.id,\n                  children: crypto.name\n                }, crypto.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this), raceStarted && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-yellow-400\",\n                children: player.selection ? (_cryptos$find = cryptos.find(c => c.id === player.selection)) === null || _cryptos$find === void 0 ? void 0 : _cryptos$find.name : 'Not selected'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 19\n              }, this), winner && player.winner && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2 text-2xl\",\n                children: \"\\uD83C\\uDFC6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 45\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), winner && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl font-bold text-center bg-yellow-600 text-black p-4 rounded-lg animate-pulse\",\n        children: [\"Champion Crypto: \", winner.name, \" (\", winner.symbol.toUpperCase(), \") \\uD83C\\uDFC6\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-lg mt-2\",\n          children: [\"Start: $\", winner.startPrice.toFixed(2), \" | End: $\", winner.currentPrice.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n_s(CryptoChickenRace, \"bXbry6FUJEZNCxS4PR589B1zHNg=\");\n_c = CryptoChickenRace;\nexport default CryptoChickenRace;\nvar _c;\n$RefreshReg$(_c, \"CryptoChickenRace\");","map":{"version":3,"names":["React","useState","useEffect","roomService","LoadingScreen","jsxDEV","_jsxDEV","RACE_DURATION","UPDATE_INTERVAL","TRACK_LENGTH","CryptoChickenRace","roomCode","playerName","isHost","_s","cryptos","setCryptos","players","setPlayers","raceStarted","setRaceStarted","winner","setWinner","timeLeft","setTimeLeft","isLoading","setIsLoading","historicalPrices","setHistoricalPrices","fetchCryptos","fetchedCryptos","fetchCryptocurrencies","map","crypto","position","startPrice","currentPrice","color","Math","floor","random","toString","interval","setInterval","updatedPlayers","getRoomPlayers","clearInterval","updatePrices","prevTime","endRace","fetchHistoricalPrice","cryptoId","timestamp","date","Date","formattedDate","toISOString","split","response","fetch","data","json","market_data","current_price","usd","error","console","startRace","some","player","selection","alert","startTimestamp","now","selectedCryptos","uniqueCryptos","Set","historicalPricesData","price","fetchInitialPrices","ids","join","prevCryptos","_data$crypto$id","_data$crypto$id2","id","priceChange","newPrice","totalChange","newPosition","min","max","filter","winningCrypto","reduce","prev","current","prevPlayers","selectCrypto","updatePlayerSelection","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","src","image","alt","name","style","width","backgroundColor","transition","symbol","toUpperCase","toFixed","index","_cryptos$find","value","onChange","e","target","disabled","find","c","_c","$RefreshReg$"],"sources":["F:/crypto-chicken-run/src/components/CryptoChickenRace.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport * as roomService from '../services/roomService';\r\nimport LoadingScreen from './LoadingScreen';\r\n\r\nconst RACE_DURATION = 60000; // 60 seconds\r\nconst UPDATE_INTERVAL = 1000; // 1 second\r\nconst TRACK_LENGTH = 100;\r\n\r\nconst CryptoChickenRace = ({ roomCode, playerName, isHost }) => {\r\n  const [cryptos, setCryptos] = useState([]);\r\n  const [players, setPlayers] = useState([]);\r\n  const [raceStarted, setRaceStarted] = useState(false);\r\n  const [winner, setWinner] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(RACE_DURATION / 1000);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [historicalPrices, setHistoricalPrices] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchCryptos = async () => {\r\n      setIsLoading(true);\r\n      const fetchedCryptos = await roomService.fetchCryptocurrencies();\r\n      setCryptos(fetchedCryptos.map(crypto => ({\r\n        ...crypto,\r\n        position: 0,\r\n        startPrice: 0,\r\n        currentPrice: 0,\r\n        color: `#${Math.floor(Math.random()*16777215).toString(16)}` // Random color\r\n      })));\r\n      setIsLoading(false);\r\n    };\r\n    fetchCryptos();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const updatedPlayers = roomService.getRoomPlayers(roomCode);\r\n      if (updatedPlayers) {\r\n        setPlayers(updatedPlayers);\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [roomCode]);\r\n\r\n  useEffect(() => {\r\n    if (raceStarted) {\r\n      const interval = setInterval(() => {\r\n        updatePrices();\r\n        setTimeLeft((prevTime) => {\r\n          if (prevTime <= 1) {\r\n            clearInterval(interval);\r\n            endRace();\r\n            return 0;\r\n          }\r\n          return prevTime - 1;\r\n        });\r\n      }, UPDATE_INTERVAL);\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [raceStarted]);\r\n\r\n  const fetchHistoricalPrice = async (cryptoId, timestamp) => {\r\n    try {\r\n      const date = new Date(timestamp);\r\n      const formattedDate = date.toISOString().split('T')[0]; // Format: YYYY-MM-DD\r\n      const response = await fetch(`https://api.coingecko.com/api/v3/coins/${cryptoId}/history?date=${formattedDate}`);\r\n      const data = await response.json();\r\n      return data.market_data.current_price.usd;\r\n    } catch (error) {\r\n      console.error(`Error fetching historical price for ${cryptoId}:`, error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const startRace = async () => {\r\n    if (players.some(player => player.selection === null)) {\r\n      alert('All players must select a cryptocurrency before starting the race!');\r\n      return;\r\n    }\r\n    setRaceStarted(true);\r\n    setWinner(null);\r\n    setTimeLeft(RACE_DURATION / 1000);\r\n    roomService.startRace(roomCode);\r\n    \r\n    // Fetch historical prices for the start of the race\r\n    const startTimestamp = Date.now();\r\n    const selectedCryptos = players.map(player => player.selection);\r\n    const uniqueCryptos = [...new Set(selectedCryptos)];\r\n    \r\n    const historicalPricesData = {};\r\n    for (const cryptoId of uniqueCryptos) {\r\n      const price = await fetchHistoricalPrice(cryptoId, startTimestamp);\r\n      historicalPricesData[cryptoId] = price;\r\n    }\r\n    setHistoricalPrices(historicalPricesData);\r\n\r\n    await fetchInitialPrices();\r\n  };\r\n\r\n  const fetchInitialPrices = async () => {\r\n    const selectedCryptos = players.map(player => player.selection);\r\n    const ids = [...new Set(selectedCryptos)].join(',');\r\n    try {\r\n      const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${ids}&vs_currencies=usd`);\r\n      const data = await response.json();\r\n      \r\n      setCryptos(prevCryptos => \r\n        prevCryptos.map(crypto => ({\r\n          ...crypto,\r\n          position: 0,\r\n          startPrice: historicalPrices[crypto.id] || data[crypto.id]?.usd || Math.random() * 1000,\r\n          currentPrice: data[crypto.id]?.usd || Math.random() * 1000\r\n        }))\r\n      );\r\n    } catch (error) {\r\n      console.error('Error fetching initial prices:', error);\r\n      setCryptos(prevCryptos => \r\n        prevCryptos.map(crypto => ({\r\n          ...crypto,\r\n          position: 0,\r\n          startPrice: historicalPrices[crypto.id] || Math.random() * 1000,\r\n          currentPrice: Math.random() * 1000\r\n        }))\r\n      );\r\n    }\r\n  };\r\n\r\n  const updatePrices = () => {\r\n    setCryptos(prevCryptos => \r\n      prevCryptos.map(crypto => {\r\n        if (players.some(player => player.selection === crypto.id)) {\r\n          const priceChange = (Math.random() - 0.5) * 2; // Random price change between -1% and 1%\r\n          const newPrice = crypto.currentPrice * (1 + priceChange / 100);\r\n          const totalChange = ((newPrice - crypto.startPrice) / crypto.startPrice) * 100;\r\n          const newPosition = Math.min(TRACK_LENGTH, Math.max(0, totalChange));\r\n          \r\n          return {\r\n            ...crypto,\r\n            position: newPosition,\r\n            currentPrice: newPrice,\r\n          };\r\n        }\r\n        return crypto;\r\n      })\r\n    );\r\n  };\r\n\r\n  const endRace = () => {\r\n    setRaceStarted(false);\r\n    const selectedCryptos = cryptos.filter(crypto => \r\n      players.some(player => player.selection === crypto.id)\r\n    );\r\n    const winningCrypto = selectedCryptos.reduce((prev, current) => \r\n      (prev.position > current.position) ? prev : current\r\n    );\r\n    setWinner(winningCrypto);\r\n    \r\n    setPlayers(prevPlayers => \r\n      prevPlayers.map(player => ({\r\n        ...player,\r\n        winner: player.selection === winningCrypto.id\r\n      }))\r\n    );\r\n  };\r\n\r\n  const selectCrypto = (playerName, cryptoId) => {\r\n    roomService.updatePlayerSelection(roomCode, playerName, cryptoId);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <LoadingScreen cryptos={cryptos} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-900 text-cyan-300\">\r\n      <div className=\"p-8 bg-gray-800 rounded-lg shadow-xl max-w-4xl w-full border border-cyan-500\">\r\n        <h2 className=\"text-4xl font-bold mb-6 text-center text-cyan-400 animate-pulse\">Crypto Race 2077</h2>\r\n        <div className=\"mb-4 text-center\">Room Code: <span className=\"font-bold text-pink-500\">{roomCode}</span></div>\r\n        <div className=\"mb-6 flex justify-center\">\r\n          {isHost && !raceStarted && (\r\n            <button \r\n              onClick={startRace} \r\n              className=\"px-6 py-3 bg-pink-600 text-white rounded-full hover:bg-pink-700 transition duration-300 ease-in-out transform hover:-translate-y-1 hover:scale-110 shadow-lg shadow-pink-500/50\"\r\n            >\r\n              Initiate Race\r\n            </button>\r\n          )}\r\n          {raceStarted && <span className=\"text-2xl font-semibold text-yellow-400\">Time left: {timeLeft}s</span>}\r\n        </div>\r\n        <div className=\"mb-6 space-y-4\">\r\n          {cryptos.filter(crypto => players.some(player => player.selection === crypto.id)).map((crypto) => (\r\n            <div key={crypto.id} className=\"bg-gray-700 rounded-lg p-4 shadow-lg border border-cyan-700\">\r\n              <div className=\"flex items-center\">\r\n                <img src={crypto.image} alt={crypto.name} className=\"w-8 h-8 mr-2\" />\r\n                <div className=\"w-24 font-semibold text-cyan-300\">{crypto.name}</div>\r\n                <div className=\"flex-grow bg-gray-600 h-10 rounded-full relative overflow-hidden\">\r\n                  <div\r\n                    className=\"h-full absolute top-0 left-0 flex items-center justify-center text-white font-bold rounded-full\"\r\n                    style={{\r\n                      width: `${crypto.position}%`,\r\n                      backgroundColor: crypto.color,\r\n                      transition: 'width 1s linear'\r\n                    }}\r\n                  >\r\n                    {crypto.symbol.toUpperCase()}\r\n                  </div>\r\n                </div>\r\n                <div className=\"w-48 text-right font-mono\">\r\n                  <div className=\"text-yellow-400\">\r\n                    Start: ${crypto.startPrice.toFixed(2)}\r\n                  </div>\r\n                  <div className=\"text-green-400\">\r\n                    Current: ${crypto.currentPrice.toFixed(2)}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"mb-6\">\r\n          <h3 className=\"text-xl font-bold mb-2 text-pink-400\">Racers</h3>\r\n          <div className=\"space-y-2\">\r\n            {players.map((player, index) => (\r\n              <div key={index} className=\"flex items-center justify-between bg-gray-700 p-2 rounded border border-pink-700\">\r\n                <span className=\"text-cyan-300\">{player.name}</span>\r\n                {!raceStarted && (\r\n                  <select\r\n                    value={player.selection || ''}\r\n                    onChange={(e) => selectCrypto(player.name, e.target.value)}\r\n                    disabled={playerName !== player.name}\r\n                    className=\"p-1 border rounded bg-gray-800 text-cyan-300 border-cyan-500\"\r\n                  >\r\n                    <option value=\"\">Select a crypto</option>\r\n                    {cryptos.map(crypto => (\r\n                      <option key={crypto.id} value={crypto.id}>{crypto.name}</option>\r\n                    ))}\r\n                  </select>\r\n                )}\r\n                {raceStarted && (\r\n                  <span className=\"text-yellow-400\">{player.selection ? cryptos.find(c => c.id === player.selection)?.name : 'Not selected'}</span>\r\n                )}\r\n                {winner && player.winner && <span className=\"ml-2 text-2xl\">🏆</span>}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        {winner && (\r\n          <div className=\"text-2xl font-bold text-center bg-yellow-600 text-black p-4 rounded-lg animate-pulse\">\r\n            Champion Crypto: {winner.name} ({winner.symbol.toUpperCase()}) 🏆\r\n            <div className=\"text-lg mt-2\">\r\n              Start: ${winner.startPrice.toFixed(2)} | End: ${winner.currentPrice.toFixed(2)}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoChickenRace;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}