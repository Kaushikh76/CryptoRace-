{"ast":null,"code":"var _jsxFileName = \"F:\\\\crypto-chicken-run\\\\src\\\\components\\\\CryptoChickenRace.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RACE_DURATION = 60000; // 60 seconds\nconst UPDATE_INTERVAL = 1000; // 1 second\nconst TRACK_LENGTH = 100;\nconst CryptoChickenRace = () => {\n  _s();\n  const [cryptos, setCryptos] = useState([{\n    id: 'bitcoin',\n    name: 'Bitcoin',\n    emoji: '🐔',\n    color: '#f7931a',\n    position: 0,\n    startPrice: 0,\n    currentPrice: 0\n  }, {\n    id: 'ethereum',\n    name: 'Ethereum',\n    emoji: '🐓',\n    color: '#62688f',\n    position: 0,\n    startPrice: 0,\n    currentPrice: 0\n  }, {\n    id: 'dogecoin',\n    name: 'Dogecoin',\n    emoji: '🐥',\n    color: '#c3a634',\n    position: 0,\n    startPrice: 0,\n    currentPrice: 0\n  }]);\n  const [raceStarted, setRaceStarted] = useState(false);\n  const [winner, setWinner] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(RACE_DURATION / 1000);\n  useEffect(() => {\n    if (raceStarted) {\n      const interval = setInterval(() => {\n        updatePrices();\n        setTimeLeft(prevTime => {\n          if (prevTime <= 1) {\n            clearInterval(interval);\n            endRace();\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, UPDATE_INTERVAL);\n      return () => clearInterval(interval);\n    }\n  }, [raceStarted]);\n  const startRace = async () => {\n    setRaceStarted(true);\n    setWinner(null);\n    setTimeLeft(RACE_DURATION / 1000);\n\n    // Fetch initial prices\n    await fetchInitialPrices();\n  };\n  const fetchInitialPrices = async () => {\n    const ids = cryptos.map(crypto => crypto.id).join(',');\n    try {\n      const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${ids}&vs_currencies=usd`);\n      const data = await response.json();\n      setCryptos(prevCryptos => prevCryptos.map(crypto => ({\n        ...crypto,\n        position: 0,\n        startPrice: data[crypto.id].usd,\n        currentPrice: data[crypto.id].usd\n      })));\n    } catch (error) {\n      console.error('Error fetching initial prices:', error);\n      // Use fallback prices if API call fails\n      setCryptos(prevCryptos => prevCryptos.map(crypto => ({\n        ...crypto,\n        position: 0,\n        startPrice: Math.random() * 1000,\n        currentPrice: Math.random() * 1000\n      })));\n    }\n  };\n  const updatePrices = () => {\n    setCryptos(prevCryptos => prevCryptos.map(crypto => {\n      const priceChange = (Math.random() - 0.5) * 2; // Random price change between -1% and 1%\n      const newPrice = crypto.currentPrice * (1 + priceChange / 100);\n      const totalChange = (newPrice - crypto.startPrice) / crypto.startPrice * 100;\n      const newPosition = Math.min(TRACK_LENGTH, Math.max(0, totalChange));\n      return {\n        ...crypto,\n        position: newPosition,\n        currentPrice: newPrice\n      };\n    }));\n  };\n  const endRace = () => {\n    setRaceStarted(false);\n    const winner = cryptos.reduce((prev, current) => prev.position > current.position ? prev : current);\n    setWinner(winner);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gradient-to-r from-purple-500 to-pink-500\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-8 bg-white rounded-lg shadow-xl max-w-4xl w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-4xl font-bold mb-6 text-center text-gray-800\",\n        children: \"Crypto Chicken Race\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 flex justify-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startRace,\n          disabled: raceStarted,\n          className: \"px-6 py-3 bg-blue-500 text-white rounded-full hover:bg-blue-600 disabled:bg-gray-400 transition duration-300 ease-in-out transform hover:-translate-y-1 hover:scale-110\",\n          children: raceStarted ? 'Race in Progress' : 'Start Race'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), raceStarted && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-4 text-2xl font-semibold\",\n          children: [\"Time left: \", timeLeft, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 space-y-4\",\n        children: cryptos.map(crypto => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-100 rounded-lg p-4 shadow\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-24 font-semibold\",\n              children: crypto.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-grow bg-gray-300 h-10 rounded-full relative overflow-hidden\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"h-full absolute top-0 left-0 flex items-center justify-center text-white font-bold rounded-full\",\n                style: {\n                  width: `${crypto.position}%`,\n                  backgroundColor: crypto.color,\n                  transition: 'width 1s linear'\n                },\n                children: crypto.emoji\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-32 text-right font-mono\",\n              children: [\"$\", crypto.currentPrice.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)\n        }, crypto.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), winner && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl font-bold text-center bg-yellow-300 p-4 rounded-lg animate-pulse\",\n        children: [\"Winner: \", winner.name, \" \", winner.emoji, \" \\uD83C\\uDFC6\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(CryptoChickenRace, \"pVB/sSbCRFgHqpGk+eDzROK/5vI=\");\n_c = CryptoChickenRace;\nexport default CryptoChickenRace;\nvar _c;\n$RefreshReg$(_c, \"CryptoChickenRace\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","RACE_DURATION","UPDATE_INTERVAL","TRACK_LENGTH","CryptoChickenRace","_s","cryptos","setCryptos","id","name","emoji","color","position","startPrice","currentPrice","raceStarted","setRaceStarted","winner","setWinner","timeLeft","setTimeLeft","interval","setInterval","updatePrices","prevTime","clearInterval","endRace","startRace","fetchInitialPrices","ids","map","crypto","join","response","fetch","data","json","prevCryptos","usd","error","console","Math","random","priceChange","newPrice","totalChange","newPosition","min","max","reduce","prev","current","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","style","width","backgroundColor","transition","toFixed","_c","$RefreshReg$"],"sources":["F:/crypto-chicken-run/src/components/CryptoChickenRace.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst RACE_DURATION = 60000; // 60 seconds\r\nconst UPDATE_INTERVAL = 1000; // 1 second\r\nconst TRACK_LENGTH = 100;\r\n\r\nconst CryptoChickenRace = () => {\r\n  const [cryptos, setCryptos] = useState([\r\n    { id: 'bitcoin', name: 'Bitcoin', emoji: '🐔', color: '#f7931a', position: 0, startPrice: 0, currentPrice: 0 },\r\n    { id: 'ethereum', name: 'Ethereum', emoji: '🐓', color: '#62688f', position: 0, startPrice: 0, currentPrice: 0 },\r\n    { id: 'dogecoin', name: 'Dogecoin', emoji: '🐥', color: '#c3a634', position: 0, startPrice: 0, currentPrice: 0 },\r\n  ]);\r\n  const [raceStarted, setRaceStarted] = useState(false);\r\n  const [winner, setWinner] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(RACE_DURATION / 1000);\r\n\r\n  useEffect(() => {\r\n    if (raceStarted) {\r\n      const interval = setInterval(() => {\r\n        updatePrices();\r\n        setTimeLeft((prevTime) => {\r\n          if (prevTime <= 1) {\r\n            clearInterval(interval);\r\n            endRace();\r\n            return 0;\r\n          }\r\n          return prevTime - 1;\r\n        });\r\n      }, UPDATE_INTERVAL);\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [raceStarted]);\r\n\r\n  const startRace = async () => {\r\n    setRaceStarted(true);\r\n    setWinner(null);\r\n    setTimeLeft(RACE_DURATION / 1000);\r\n    \r\n    // Fetch initial prices\r\n    await fetchInitialPrices();\r\n  };\r\n\r\n  const fetchInitialPrices = async () => {\r\n    const ids = cryptos.map(crypto => crypto.id).join(',');\r\n    try {\r\n      const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${ids}&vs_currencies=usd`);\r\n      const data = await response.json();\r\n      \r\n      setCryptos(prevCryptos => \r\n        prevCryptos.map(crypto => ({\r\n          ...crypto,\r\n          position: 0,\r\n          startPrice: data[crypto.id].usd,\r\n          currentPrice: data[crypto.id].usd\r\n        }))\r\n      );\r\n    } catch (error) {\r\n      console.error('Error fetching initial prices:', error);\r\n      // Use fallback prices if API call fails\r\n      setCryptos(prevCryptos => \r\n        prevCryptos.map(crypto => ({\r\n          ...crypto,\r\n          position: 0,\r\n          startPrice: Math.random() * 1000,\r\n          currentPrice: Math.random() * 1000\r\n        }))\r\n      );\r\n    }\r\n  };\r\n\r\n  const updatePrices = () => {\r\n    setCryptos(prevCryptos => \r\n      prevCryptos.map(crypto => {\r\n        const priceChange = (Math.random() - 0.5) * 2; // Random price change between -1% and 1%\r\n        const newPrice = crypto.currentPrice * (1 + priceChange / 100);\r\n        const totalChange = ((newPrice - crypto.startPrice) / crypto.startPrice) * 100;\r\n        const newPosition = Math.min(TRACK_LENGTH, Math.max(0, totalChange));\r\n        \r\n        return {\r\n          ...crypto,\r\n          position: newPosition,\r\n          currentPrice: newPrice,\r\n        };\r\n      })\r\n    );\r\n  };\r\n\r\n  const endRace = () => {\r\n    setRaceStarted(false);\r\n    const winner = cryptos.reduce((prev, current) => \r\n      (prev.position > current.position) ? prev : current\r\n    );\r\n    setWinner(winner);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-r from-purple-500 to-pink-500\">\r\n      <div className=\"p-8 bg-white rounded-lg shadow-xl max-w-4xl w-full\">\r\n        <h2 className=\"text-4xl font-bold mb-6 text-center text-gray-800\">Crypto Chicken Race</h2>\r\n        <div className=\"mb-6 flex justify-center\">\r\n          <button \r\n            onClick={startRace} \r\n            disabled={raceStarted}\r\n            className=\"px-6 py-3 bg-blue-500 text-white rounded-full hover:bg-blue-600 disabled:bg-gray-400 transition duration-300 ease-in-out transform hover:-translate-y-1 hover:scale-110\"\r\n          >\r\n            {raceStarted ? 'Race in Progress' : 'Start Race'}\r\n          </button>\r\n          {raceStarted && <span className=\"ml-4 text-2xl font-semibold\">Time left: {timeLeft}s</span>}\r\n        </div>\r\n        <div className=\"mb-6 space-y-4\">\r\n          {cryptos.map((crypto) => (\r\n            <div key={crypto.id} className=\"bg-gray-100 rounded-lg p-4 shadow\">\r\n              <div className=\"flex items-center\">\r\n                <div className=\"w-24 font-semibold\">{crypto.name}</div>\r\n                <div className=\"flex-grow bg-gray-300 h-10 rounded-full relative overflow-hidden\">\r\n                  <div\r\n                    className=\"h-full absolute top-0 left-0 flex items-center justify-center text-white font-bold rounded-full\"\r\n                    style={{\r\n                      width: `${crypto.position}%`,\r\n                      backgroundColor: crypto.color,\r\n                      transition: 'width 1s linear'\r\n                    }}\r\n                  >\r\n                    {crypto.emoji}\r\n                  </div>\r\n                </div>\r\n                <div className=\"w-32 text-right font-mono\">\r\n                  ${crypto.currentPrice.toFixed(2)}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        {winner && (\r\n          <div className=\"text-2xl font-bold text-center bg-yellow-300 p-4 rounded-lg animate-pulse\">\r\n            Winner: {winner.name} {winner.emoji} 🏆\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoChickenRace;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}