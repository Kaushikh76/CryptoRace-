{"ast":null,"code":"var _jsxFileName = \"F:\\\\crypto-chicken-run\\\\src\\\\components\\\\CryptoChickenRace.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RACE_DURATION = 60000; // 60 seconds\nconst UPDATE_INTERVAL = 1000; // 1 second\nconst TRACK_LENGTH = 100;\nconst CryptoChickenRace = () => {\n  _s();\n  const [cryptos, setCryptos] = useState([{\n    id: 'bitcoin',\n    name: 'Bitcoin',\n    emoji: '🐔',\n    color: '#f7931a',\n    position: 0,\n    startPrice: 0,\n    currentPrice: 0\n  }, {\n    id: 'ethereum',\n    name: 'Ethereum',\n    emoji: '🐓',\n    color: '#62688f',\n    position: 0,\n    startPrice: 0,\n    currentPrice: 0\n  }, {\n    id: 'dogecoin',\n    name: 'Dogecoin',\n    emoji: '🐥',\n    color: '#c3a634',\n    position: 0,\n    startPrice: 0,\n    currentPrice: 0\n  }]);\n  const [raceStarted, setRaceStarted] = useState(false);\n  const [winner, setWinner] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(RACE_DURATION / 1000);\n  useEffect(() => {\n    if (raceStarted) {\n      const interval = setInterval(() => {\n        updatePrices();\n        setTimeLeft(prevTime => {\n          if (prevTime <= 1) {\n            clearInterval(interval);\n            endRace();\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, UPDATE_INTERVAL);\n      return () => clearInterval(interval);\n    }\n  }, [raceStarted]);\n  const startRace = async () => {\n    setRaceStarted(true);\n    setWinner(null);\n    setTimeLeft(RACE_DURATION / 1000);\n\n    // Fetch initial prices\n    const ids = cryptos.map(crypto => crypto.id).join(',');\n    try {\n      const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${ids}&vs_currencies=usd`);\n      const data = await response.json();\n      setCryptos(prevCryptos => prevCryptos.map(crypto => ({\n        ...crypto,\n        position: 0,\n        startPrice: data[crypto.id].usd,\n        currentPrice: data[crypto.id].usd\n      })));\n    } catch (error) {\n      console.error('Error fetching initial prices:', error);\n    }\n  };\n  const updatePrices = async () => {\n    const ids = cryptos.map(crypto => crypto.id).join(',');\n    try {\n      const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${ids}&vs_currencies=usd`);\n      const data = await response.json();\n      setCryptos(prevCryptos => prevCryptos.map(crypto => {\n        const newPrice = data[crypto.id].usd;\n        const priceChange = (newPrice - crypto.startPrice) / crypto.startPrice * 100;\n        const newPosition = Math.min(TRACK_LENGTH, Math.max(0, priceChange));\n        return {\n          ...crypto,\n          position: newPosition,\n          currentPrice: newPrice\n        };\n      }));\n    } catch (error) {\n      console.error('Error fetching prices:', error);\n    }\n  };\n  const endRace = () => {\n    setRaceStarted(false);\n    const winner = cryptos.reduce((prev, current) => prev.position > current.position ? prev : current);\n    setWinner(winner);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 bg-white rounded shadow-md max-w-4xl mx-auto mt-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Crypto Chicken Race\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startRace,\n        disabled: raceStarted,\n        className: \"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 disabled:bg-gray-400\",\n        children: raceStarted ? 'Race in Progress' : 'Start Race'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), raceStarted && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-4\",\n        children: [\"Time left: \", timeLeft, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: cryptos.map(crypto => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-24\",\n            children: crypto.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-grow bg-gray-200 h-8 relative\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"h-full absolute top-0 left-0 flex items-center pl-2 text-white\",\n              style: {\n                width: `${crypto.position}%`,\n                backgroundColor: crypto.color,\n                transition: 'width 1s linear'\n              },\n              children: crypto.emoji\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-24 text-right\",\n            children: [\"$\", crypto.currentPrice.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, crypto.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), winner && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 text-xl font-bold\",\n      children: [\"Winner: \", winner.name, \" \", winner.emoji, \" \\uD83C\\uDFC6\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(CryptoChickenRace, \"pVB/sSbCRFgHqpGk+eDzROK/5vI=\");\n_c = CryptoChickenRace;\nexport default CryptoChickenRace;\nvar _c;\n$RefreshReg$(_c, \"CryptoChickenRace\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","RACE_DURATION","UPDATE_INTERVAL","TRACK_LENGTH","CryptoChickenRace","_s","cryptos","setCryptos","id","name","emoji","color","position","startPrice","currentPrice","raceStarted","setRaceStarted","winner","setWinner","timeLeft","setTimeLeft","interval","setInterval","updatePrices","prevTime","clearInterval","endRace","startRace","ids","map","crypto","join","response","fetch","data","json","prevCryptos","usd","error","console","newPrice","priceChange","newPosition","Math","min","max","reduce","prev","current","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","style","width","backgroundColor","transition","toFixed","_c","$RefreshReg$"],"sources":["F:/crypto-chicken-run/src/components/CryptoChickenRace.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst RACE_DURATION = 60000; // 60 seconds\r\nconst UPDATE_INTERVAL = 1000; // 1 second\r\nconst TRACK_LENGTH = 100;\r\n\r\nconst CryptoChickenRace = () => {\r\n  const [cryptos, setCryptos] = useState([\r\n    { id: 'bitcoin', name: 'Bitcoin', emoji: '🐔', color: '#f7931a', position: 0, startPrice: 0, currentPrice: 0 },\r\n    { id: 'ethereum', name: 'Ethereum', emoji: '🐓', color: '#62688f', position: 0, startPrice: 0, currentPrice: 0 },\r\n    { id: 'dogecoin', name: 'Dogecoin', emoji: '🐥', color: '#c3a634', position: 0, startPrice: 0, currentPrice: 0 },\r\n  ]);\r\n  const [raceStarted, setRaceStarted] = useState(false);\r\n  const [winner, setWinner] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(RACE_DURATION / 1000);\r\n\r\n  useEffect(() => {\r\n    if (raceStarted) {\r\n      const interval = setInterval(() => {\r\n        updatePrices();\r\n        setTimeLeft((prevTime) => {\r\n          if (prevTime <= 1) {\r\n            clearInterval(interval);\r\n            endRace();\r\n            return 0;\r\n          }\r\n          return prevTime - 1;\r\n        });\r\n      }, UPDATE_INTERVAL);\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [raceStarted]);\r\n\r\n  const startRace = async () => {\r\n    setRaceStarted(true);\r\n    setWinner(null);\r\n    setTimeLeft(RACE_DURATION / 1000);\r\n    \r\n    // Fetch initial prices\r\n    const ids = cryptos.map(crypto => crypto.id).join(',');\r\n    try {\r\n      const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${ids}&vs_currencies=usd`);\r\n      const data = await response.json();\r\n      \r\n      setCryptos(prevCryptos => \r\n        prevCryptos.map(crypto => ({\r\n          ...crypto,\r\n          position: 0,\r\n          startPrice: data[crypto.id].usd,\r\n          currentPrice: data[crypto.id].usd\r\n        }))\r\n      );\r\n    } catch (error) {\r\n      console.error('Error fetching initial prices:', error);\r\n    }\r\n  };\r\n\r\n  const updatePrices = async () => {\r\n    const ids = cryptos.map(crypto => crypto.id).join(',');\r\n    try {\r\n      const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${ids}&vs_currencies=usd`);\r\n      const data = await response.json();\r\n      \r\n      setCryptos(prevCryptos => \r\n        prevCryptos.map(crypto => {\r\n          const newPrice = data[crypto.id].usd;\r\n          const priceChange = ((newPrice - crypto.startPrice) / crypto.startPrice) * 100;\r\n          const newPosition = Math.min(TRACK_LENGTH, Math.max(0, priceChange));\r\n          \r\n          return {\r\n            ...crypto,\r\n            position: newPosition,\r\n            currentPrice: newPrice\r\n          };\r\n        })\r\n      );\r\n    } catch (error) {\r\n      console.error('Error fetching prices:', error);\r\n    }\r\n  };\r\n\r\n  const endRace = () => {\r\n    setRaceStarted(false);\r\n    const winner = cryptos.reduce((prev, current) => \r\n      (prev.position > current.position) ? prev : current\r\n    );\r\n    setWinner(winner);\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 bg-white rounded shadow-md max-w-4xl mx-auto mt-10\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Crypto Chicken Race</h2>\r\n      <div className=\"mb-4\">\r\n        <button \r\n          onClick={startRace} \r\n          disabled={raceStarted}\r\n          className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 disabled:bg-gray-400\"\r\n        >\r\n          {raceStarted ? 'Race in Progress' : 'Start Race'}\r\n        </button>\r\n        {raceStarted && <span className=\"ml-4\">Time left: {timeLeft}s</span>}\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        {cryptos.map((crypto) => (\r\n          <div key={crypto.id} className=\"mb-2\">\r\n            <div className=\"flex items-center\">\r\n              <div className=\"w-24\">{crypto.name}</div>\r\n              <div className=\"flex-grow bg-gray-200 h-8 relative\">\r\n                <div\r\n                  className=\"h-full absolute top-0 left-0 flex items-center pl-2 text-white\"\r\n                  style={{\r\n                    width: `${crypto.position}%`,\r\n                    backgroundColor: crypto.color,\r\n                    transition: 'width 1s linear'\r\n                  }}\r\n                >\r\n                  {crypto.emoji}\r\n                </div>\r\n              </div>\r\n              <div className=\"w-24 text-right\">\r\n                ${crypto.currentPrice.toFixed(2)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {winner && (\r\n        <div className=\"mb-4 text-xl font-bold\">\r\n          Winner: {winner.name} {winner.emoji} 🏆\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoChickenRace;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}