{"ast":null,"code":"var _jsxFileName = \"F:\\\\crypto-chicken-run\\\\src\\\\components\\\\CryptoChickenRace.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport * as roomService from '../services/roomService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RACE_DURATION = 60000; // 60 seconds\nconst UPDATE_INTERVAL = 1000; // 1 second\nconst TRACK_LENGTH = 100;\nconst CryptoChickenRace = ({\n  roomCode,\n  playerName,\n  isHost\n}) => {\n  _s();\n  const [cryptos, setCryptos] = useState([{\n    id: 'bitcoin',\n    name: 'Bitcoin',\n    emoji: '🐔',\n    color: '#f7931a',\n    position: 0,\n    startPrice: 0,\n    currentPrice: 0\n  }, {\n    id: 'ethereum',\n    name: 'Ethereum',\n    emoji: '🐓',\n    color: '#62688f',\n    position: 0,\n    startPrice: 0,\n    currentPrice: 0\n  }, {\n    id: 'dogecoin',\n    name: 'Dogecoin',\n    emoji: '🐥',\n    color: '#c3a634',\n    position: 0,\n    startPrice: 0,\n    currentPrice: 0\n  }]);\n  const [players, setPlayers] = useState([]);\n  const [raceStarted, setRaceStarted] = useState(false);\n  const [winner, setWinner] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(RACE_DURATION / 1000);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const updatedPlayers = roomService.getRoomPlayers(roomCode);\n      if (updatedPlayers) {\n        setPlayers(updatedPlayers);\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [roomCode]);\n  useEffect(() => {\n    if (raceStarted) {\n      const interval = setInterval(() => {\n        updatePrices();\n        setTimeLeft(prevTime => {\n          if (prevTime <= 1) {\n            clearInterval(interval);\n            endRace();\n            return 0;\n          }\n          return prevTime - 1;\n        });\n      }, UPDATE_INTERVAL);\n      return () => clearInterval(interval);\n    }\n  }, [raceStarted]);\n  const startRace = async () => {\n    if (players.some(player => player.selection === null)) {\n      alert('All players must select a cryptocurrency before starting the race!');\n      return;\n    }\n    setRaceStarted(true);\n    setWinner(null);\n    setTimeLeft(RACE_DURATION / 1000);\n    roomService.startRace(roomCode);\n    await fetchInitialPrices();\n  };\n  const fetchInitialPrices = async () => {\n    const ids = cryptos.map(crypto => crypto.id).join(',');\n    try {\n      const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${ids}&vs_currencies=usd`);\n      const data = await response.json();\n      setCryptos(prevCryptos => prevCryptos.map(crypto => ({\n        ...crypto,\n        position: 0,\n        startPrice: data[crypto.id].usd,\n        currentPrice: data[crypto.id].usd\n      })));\n    } catch (error) {\n      console.error('Error fetching initial prices:', error);\n      // Use fallback prices if API call fails\n      setCryptos(prevCryptos => prevCryptos.map(crypto => ({\n        ...crypto,\n        position: 0,\n        startPrice: Math.random() * 1000,\n        currentPrice: Math.random() * 1000\n      })));\n    }\n  };\n  const updatePrices = () => {\n    setCryptos(prevCryptos => prevCryptos.map(crypto => {\n      const priceChange = (Math.random() - 0.5) * 2; // Random price change between -1% and 1%\n      const newPrice = crypto.currentPrice * (1 + priceChange / 100);\n      const totalChange = (newPrice - crypto.startPrice) / crypto.startPrice * 100;\n      const newPosition = Math.min(TRACK_LENGTH, Math.max(0, totalChange));\n      return {\n        ...crypto,\n        position: newPosition,\n        currentPrice: newPrice\n      };\n    }));\n  };\n  const endRace = () => {\n    setRaceStarted(false);\n    const winningCrypto = cryptos.reduce((prev, current) => prev.position > current.position ? prev : current);\n    setWinner(winningCrypto);\n\n    // Determine winning players\n    setPlayers(prevPlayers => prevPlayers.map(player => ({\n      ...player,\n      winner: player.selection === winningCrypto.id\n    })));\n  };\n  const selectCrypto = (playerName, cryptoId) => {\n    roomService.updatePlayerSelection(roomCode, playerName, cryptoId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gradient-to-r from-purple-500 to-pink-500\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-8 bg-white rounded-lg shadow-xl max-w-4xl w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-4xl font-bold mb-6 text-center text-gray-800\",\n        children: \"Crypto Chicken Race\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 text-center\",\n        children: [\"Room Code: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-bold\",\n          children: roomCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 54\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 flex justify-center\",\n        children: [isHost && !raceStarted && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startRace,\n          className: \"px-6 py-3 bg-blue-500 text-white rounded-full hover:bg-blue-600 transition duration-300 ease-in-out transform hover:-translate-y-1 hover:scale-110\",\n          children: \"Start Race\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), raceStarted && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-2xl font-semibold\",\n          children: [\"Time left: \", timeLeft, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 space-y-4\",\n        children: cryptos.map(crypto => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-100 rounded-lg p-4 shadow\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-24 font-semibold\",\n              children: crypto.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-grow bg-gray-300 h-10 rounded-full relative overflow-hidden\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"h-full absolute top-0 left-0 flex items-center justify-center text-white font-bold rounded-full\",\n                style: {\n                  width: `${crypto.position}%`,\n                  backgroundColor: crypto.color,\n                  transition: 'width 1s linear'\n                },\n                children: crypto.emoji\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-32 text-right font-mono\",\n              children: [\"$\", crypto.currentPrice.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)\n        }, crypto.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold mb-2\",\n          children: \"Players\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: players.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between bg-gray-100 p-2 rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: player.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this), !raceStarted && /*#__PURE__*/_jsxDEV(\"select\", {\n              value: player.selection || '',\n              onChange: e => selectCrypto(player.name, e.target.value),\n              disabled: playerName !== player.name,\n              className: \"p-1 border rounded\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a crypto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 21\n              }, this), cryptos.map(crypto => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: crypto.id,\n                children: crypto.name\n              }, crypto.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 19\n            }, this), raceStarted && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: player.selection ? cryptos.find(c => c.id === player.selection).name : 'Not selected'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this), winner && player.winner && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ml-2\",\n              children: \"\\uD83C\\uDFC6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 45\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), winner && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl font-bold text-center bg-yellow-300 p-4 rounded-lg animate-pulse\",\n        children: [\"Winning Crypto: \", winner.name, \" \", winner.emoji, \" \\uD83C\\uDFC6\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(CryptoChickenRace, \"bT+9PJCsy4mrdgktkz4bAR+SF4k=\");\n_c = CryptoChickenRace;\nexport default CryptoChickenRace;\nvar _c;\n$RefreshReg$(_c, \"CryptoChickenRace\");","map":{"version":3,"names":["React","useState","useEffect","roomService","jsxDEV","_jsxDEV","RACE_DURATION","UPDATE_INTERVAL","TRACK_LENGTH","CryptoChickenRace","roomCode","playerName","isHost","_s","cryptos","setCryptos","id","name","emoji","color","position","startPrice","currentPrice","players","setPlayers","raceStarted","setRaceStarted","winner","setWinner","timeLeft","setTimeLeft","interval","setInterval","updatedPlayers","getRoomPlayers","clearInterval","updatePrices","prevTime","endRace","startRace","some","player","selection","alert","fetchInitialPrices","ids","map","crypto","join","response","fetch","data","json","prevCryptos","usd","error","console","Math","random","priceChange","newPrice","totalChange","newPosition","min","max","winningCrypto","reduce","prev","current","prevPlayers","selectCrypto","cryptoId","updatePlayerSelection","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","width","backgroundColor","transition","toFixed","index","value","onChange","e","target","disabled","find","c","_c","$RefreshReg$"],"sources":["F:/crypto-chicken-run/src/components/CryptoChickenRace.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport * as roomService from '../services/roomService';\r\n\r\nconst RACE_DURATION = 60000; // 60 seconds\r\nconst UPDATE_INTERVAL = 1000; // 1 second\r\nconst TRACK_LENGTH = 100;\r\n\r\nconst CryptoChickenRace = ({ roomCode, playerName, isHost }) => {\r\n  const [cryptos, setCryptos] = useState([\r\n    { id: 'bitcoin', name: 'Bitcoin', emoji: '🐔', color: '#f7931a', position: 0, startPrice: 0, currentPrice: 0 },\r\n    { id: 'ethereum', name: 'Ethereum', emoji: '🐓', color: '#62688f', position: 0, startPrice: 0, currentPrice: 0 },\r\n    { id: 'dogecoin', name: 'Dogecoin', emoji: '🐥', color: '#c3a634', position: 0, startPrice: 0, currentPrice: 0 },\r\n  ]);\r\n  const [players, setPlayers] = useState([]);\r\n  const [raceStarted, setRaceStarted] = useState(false);\r\n  const [winner, setWinner] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(RACE_DURATION / 1000);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const updatedPlayers = roomService.getRoomPlayers(roomCode);\r\n      if (updatedPlayers) {\r\n        setPlayers(updatedPlayers);\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [roomCode]);\r\n\r\n  useEffect(() => {\r\n    if (raceStarted) {\r\n      const interval = setInterval(() => {\r\n        updatePrices();\r\n        setTimeLeft((prevTime) => {\r\n          if (prevTime <= 1) {\r\n            clearInterval(interval);\r\n            endRace();\r\n            return 0;\r\n          }\r\n          return prevTime - 1;\r\n        });\r\n      }, UPDATE_INTERVAL);\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [raceStarted]);\r\n\r\n  const startRace = async () => {\r\n    if (players.some(player => player.selection === null)) {\r\n      alert('All players must select a cryptocurrency before starting the race!');\r\n      return;\r\n    }\r\n    setRaceStarted(true);\r\n    setWinner(null);\r\n    setTimeLeft(RACE_DURATION / 1000);\r\n    roomService.startRace(roomCode);\r\n    await fetchInitialPrices();\r\n  };\r\n\r\n  const fetchInitialPrices = async () => {\r\n    const ids = cryptos.map(crypto => crypto.id).join(',');\r\n    try {\r\n      const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${ids}&vs_currencies=usd`);\r\n      const data = await response.json();\r\n      \r\n      setCryptos(prevCryptos => \r\n        prevCryptos.map(crypto => ({\r\n          ...crypto,\r\n          position: 0,\r\n          startPrice: data[crypto.id].usd,\r\n          currentPrice: data[crypto.id].usd\r\n        }))\r\n      );\r\n    } catch (error) {\r\n      console.error('Error fetching initial prices:', error);\r\n      // Use fallback prices if API call fails\r\n      setCryptos(prevCryptos => \r\n        prevCryptos.map(crypto => ({\r\n          ...crypto,\r\n          position: 0,\r\n          startPrice: Math.random() * 1000,\r\n          currentPrice: Math.random() * 1000\r\n        }))\r\n      );\r\n    }\r\n  };\r\n\r\n  const updatePrices = () => {\r\n    setCryptos(prevCryptos => \r\n      prevCryptos.map(crypto => {\r\n        const priceChange = (Math.random() - 0.5) * 2; // Random price change between -1% and 1%\r\n        const newPrice = crypto.currentPrice * (1 + priceChange / 100);\r\n        const totalChange = ((newPrice - crypto.startPrice) / crypto.startPrice) * 100;\r\n        const newPosition = Math.min(TRACK_LENGTH, Math.max(0, totalChange));\r\n        \r\n        return {\r\n          ...crypto,\r\n          position: newPosition,\r\n          currentPrice: newPrice,\r\n        };\r\n      })\r\n    );\r\n  };\r\n\r\n  const endRace = () => {\r\n    setRaceStarted(false);\r\n    const winningCrypto = cryptos.reduce((prev, current) => \r\n      (prev.position > current.position) ? prev : current\r\n    );\r\n    setWinner(winningCrypto);\r\n    \r\n    // Determine winning players\r\n    setPlayers(prevPlayers => \r\n      prevPlayers.map(player => ({\r\n        ...player,\r\n        winner: player.selection === winningCrypto.id\r\n      }))\r\n    );\r\n  };\r\n\r\n  const selectCrypto = (playerName, cryptoId) => {\r\n    roomService.updatePlayerSelection(roomCode, playerName, cryptoId);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-r from-purple-500 to-pink-500\">\r\n      <div className=\"p-8 bg-white rounded-lg shadow-xl max-w-4xl w-full\">\r\n        <h2 className=\"text-4xl font-bold mb-6 text-center text-gray-800\">Crypto Chicken Race</h2>\r\n        <div className=\"mb-4 text-center\">Room Code: <span className=\"font-bold\">{roomCode}</span></div>\r\n        <div className=\"mb-6 flex justify-center\">\r\n          {isHost && !raceStarted && (\r\n            <button \r\n              onClick={startRace} \r\n              className=\"px-6 py-3 bg-blue-500 text-white rounded-full hover:bg-blue-600 transition duration-300 ease-in-out transform hover:-translate-y-1 hover:scale-110\"\r\n            >\r\n              Start Race\r\n            </button>\r\n          )}\r\n          {raceStarted && <span className=\"text-2xl font-semibold\">Time left: {timeLeft}s</span>}\r\n        </div>\r\n        <div className=\"mb-6 space-y-4\">\r\n          {cryptos.map((crypto) => (\r\n            <div key={crypto.id} className=\"bg-gray-100 rounded-lg p-4 shadow\">\r\n              <div className=\"flex items-center\">\r\n                <div className=\"w-24 font-semibold\">{crypto.name}</div>\r\n                <div className=\"flex-grow bg-gray-300 h-10 rounded-full relative overflow-hidden\">\r\n                  <div\r\n                    className=\"h-full absolute top-0 left-0 flex items-center justify-center text-white font-bold rounded-full\"\r\n                    style={{\r\n                      width: `${crypto.position}%`,\r\n                      backgroundColor: crypto.color,\r\n                      transition: 'width 1s linear'\r\n                    }}\r\n                  >\r\n                    {crypto.emoji}\r\n                  </div>\r\n                </div>\r\n                <div className=\"w-32 text-right font-mono\">\r\n                  ${crypto.currentPrice.toFixed(2)}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"mb-6\">\r\n          <h3 className=\"text-xl font-bold mb-2\">Players</h3>\r\n          <div className=\"space-y-2\">\r\n            {players.map((player, index) => (\r\n              <div key={index} className=\"flex items-center justify-between bg-gray-100 p-2 rounded\">\r\n                <span>{player.name}</span>\r\n                {!raceStarted && (\r\n                  <select\r\n                    value={player.selection || ''}\r\n                    onChange={(e) => selectCrypto(player.name, e.target.value)}\r\n                    disabled={playerName !== player.name}\r\n                    className=\"p-1 border rounded\"\r\n                  >\r\n                    <option value=\"\">Select a crypto</option>\r\n                    {cryptos.map(crypto => (\r\n                      <option key={crypto.id} value={crypto.id}>{crypto.name}</option>\r\n                    ))}\r\n                  </select>\r\n                )}\r\n                {raceStarted && (\r\n                  <span>{player.selection ? cryptos.find(c => c.id === player.selection).name : 'Not selected'}</span>\r\n                )}\r\n                {winner && player.winner && <span className=\"ml-2\">🏆</span>}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        {winner && (\r\n          <div className=\"text-2xl font-bold text-center bg-yellow-300 p-4 rounded-lg animate-pulse\">\r\n            Winning Crypto: {winner.name} {winner.emoji} 🏆\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoChickenRace;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,KAAKC,WAAW,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,aAAa,GAAG,KAAK,CAAC,CAAC;AAC7B,MAAMC,eAAe,GAAG,IAAI,CAAC,CAAC;AAC9B,MAAMC,YAAY,GAAG,GAAG;AAExB,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,UAAU;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC9D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,CACrC;IAAEe,EAAE,EAAE,SAAS;IAAEC,IAAI,EAAE,SAAS;IAAEC,KAAK,EAAE,IAAI;IAAEC,KAAK,EAAE,SAAS;IAAEC,QAAQ,EAAE,CAAC;IAAEC,UAAU,EAAE,CAAC;IAAEC,YAAY,EAAE;EAAE,CAAC,EAC9G;IAAEN,EAAE,EAAE,UAAU;IAAEC,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAE,IAAI;IAAEC,KAAK,EAAE,SAAS;IAAEC,QAAQ,EAAE,CAAC;IAAEC,UAAU,EAAE,CAAC;IAAEC,YAAY,EAAE;EAAE,CAAC,EAChH;IAAEN,EAAE,EAAE,UAAU;IAAEC,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAE,IAAI;IAAEC,KAAK,EAAE,SAAS;IAAEC,QAAQ,EAAE,CAAC;IAAEC,UAAU,EAAE,CAAC;IAAEC,YAAY,EAAE;EAAE,CAAC,CACjH,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACwB,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC0B,MAAM,EAAEC,SAAS,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAAC4B,QAAQ,EAAEC,WAAW,CAAC,GAAG7B,QAAQ,CAACK,aAAa,GAAG,IAAI,CAAC;EAE9DJ,SAAS,CAAC,MAAM;IACd,MAAM6B,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,MAAMC,cAAc,GAAG9B,WAAW,CAAC+B,cAAc,CAACxB,QAAQ,CAAC;MAC3D,IAAIuB,cAAc,EAAE;QAClBT,UAAU,CAACS,cAAc,CAAC;MAC5B;IACF,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAME,aAAa,CAACJ,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACrB,QAAQ,CAAC,CAAC;EAEdR,SAAS,CAAC,MAAM;IACd,IAAIuB,WAAW,EAAE;MACf,MAAMM,QAAQ,GAAGC,WAAW,CAAC,MAAM;QACjCI,YAAY,CAAC,CAAC;QACdN,WAAW,CAAEO,QAAQ,IAAK;UACxB,IAAIA,QAAQ,IAAI,CAAC,EAAE;YACjBF,aAAa,CAACJ,QAAQ,CAAC;YACvBO,OAAO,CAAC,CAAC;YACT,OAAO,CAAC;UACV;UACA,OAAOD,QAAQ,GAAG,CAAC;QACrB,CAAC,CAAC;MACJ,CAAC,EAAE9B,eAAe,CAAC;MAEnB,OAAO,MAAM4B,aAAa,CAACJ,QAAQ,CAAC;IACtC;EACF,CAAC,EAAE,CAACN,WAAW,CAAC,CAAC;EAEjB,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAIhB,OAAO,CAACiB,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACC,SAAS,KAAK,IAAI,CAAC,EAAE;MACrDC,KAAK,CAAC,oEAAoE,CAAC;MAC3E;IACF;IACAjB,cAAc,CAAC,IAAI,CAAC;IACpBE,SAAS,CAAC,IAAI,CAAC;IACfE,WAAW,CAACxB,aAAa,GAAG,IAAI,CAAC;IACjCH,WAAW,CAACoC,SAAS,CAAC7B,QAAQ,CAAC;IAC/B,MAAMkC,kBAAkB,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMA,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,MAAMC,GAAG,GAAG/B,OAAO,CAACgC,GAAG,CAACC,MAAM,IAAIA,MAAM,CAAC/B,EAAE,CAAC,CAACgC,IAAI,CAAC,GAAG,CAAC;IACtD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qDAAqDL,GAAG,oBAAoB,CAAC;MAC1G,MAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElCrC,UAAU,CAACsC,WAAW,IACpBA,WAAW,CAACP,GAAG,CAACC,MAAM,KAAK;QACzB,GAAGA,MAAM;QACT3B,QAAQ,EAAE,CAAC;QACXC,UAAU,EAAE8B,IAAI,CAACJ,MAAM,CAAC/B,EAAE,CAAC,CAACsC,GAAG;QAC/BhC,YAAY,EAAE6B,IAAI,CAACJ,MAAM,CAAC/B,EAAE,CAAC,CAACsC;MAChC,CAAC,CAAC,CACJ,CAAC;IACH,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtD;MACAxC,UAAU,CAACsC,WAAW,IACpBA,WAAW,CAACP,GAAG,CAACC,MAAM,KAAK;QACzB,GAAGA,MAAM;QACT3B,QAAQ,EAAE,CAAC;QACXC,UAAU,EAAEoC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI;QAChCpC,YAAY,EAAEmC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG;MAChC,CAAC,CAAC,CACJ,CAAC;IACH;EACF,CAAC;EAED,MAAMtB,YAAY,GAAGA,CAAA,KAAM;IACzBrB,UAAU,CAACsC,WAAW,IACpBA,WAAW,CAACP,GAAG,CAACC,MAAM,IAAI;MACxB,MAAMY,WAAW,GAAG,CAACF,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;MAC/C,MAAME,QAAQ,GAAGb,MAAM,CAACzB,YAAY,IAAI,CAAC,GAAGqC,WAAW,GAAG,GAAG,CAAC;MAC9D,MAAME,WAAW,GAAI,CAACD,QAAQ,GAAGb,MAAM,CAAC1B,UAAU,IAAI0B,MAAM,CAAC1B,UAAU,GAAI,GAAG;MAC9E,MAAMyC,WAAW,GAAGL,IAAI,CAACM,GAAG,CAACvD,YAAY,EAAEiD,IAAI,CAACO,GAAG,CAAC,CAAC,EAAEH,WAAW,CAAC,CAAC;MAEpE,OAAO;QACL,GAAGd,MAAM;QACT3B,QAAQ,EAAE0C,WAAW;QACrBxC,YAAY,EAAEsC;MAChB,CAAC;IACH,CAAC,CACH,CAAC;EACH,CAAC;EAED,MAAMtB,OAAO,GAAGA,CAAA,KAAM;IACpBZ,cAAc,CAAC,KAAK,CAAC;IACrB,MAAMuC,aAAa,GAAGnD,OAAO,CAACoD,MAAM,CAAC,CAACC,IAAI,EAAEC,OAAO,KAChDD,IAAI,CAAC/C,QAAQ,GAAGgD,OAAO,CAAChD,QAAQ,GAAI+C,IAAI,GAAGC,OAC9C,CAAC;IACDxC,SAAS,CAACqC,aAAa,CAAC;;IAExB;IACAzC,UAAU,CAAC6C,WAAW,IACpBA,WAAW,CAACvB,GAAG,CAACL,MAAM,KAAK;MACzB,GAAGA,MAAM;MACTd,MAAM,EAAEc,MAAM,CAACC,SAAS,KAAKuB,aAAa,CAACjD;IAC7C,CAAC,CAAC,CACJ,CAAC;EACH,CAAC;EAED,MAAMsD,YAAY,GAAGA,CAAC3D,UAAU,EAAE4D,QAAQ,KAAK;IAC7CpE,WAAW,CAACqE,qBAAqB,CAAC9D,QAAQ,EAAEC,UAAU,EAAE4D,QAAQ,CAAC;EACnE,CAAC;EAED,oBACElE,OAAA;IAAKoE,SAAS,EAAC,4FAA4F;IAAAC,QAAA,eACzGrE,OAAA;MAAKoE,SAAS,EAAC,oDAAoD;MAAAC,QAAA,gBACjErE,OAAA;QAAIoE,SAAS,EAAC,mDAAmD;QAAAC,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1FzE,OAAA;QAAKoE,SAAS,EAAC,kBAAkB;QAAAC,QAAA,GAAC,aAAW,eAAArE,OAAA;UAAMoE,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAEhE;QAAQ;UAAAiE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChGzE,OAAA;QAAKoE,SAAS,EAAC,0BAA0B;QAAAC,QAAA,GACtC9D,MAAM,IAAI,CAACa,WAAW,iBACrBpB,OAAA;UACE0E,OAAO,EAAExC,SAAU;UACnBkC,SAAS,EAAC,oJAAoJ;UAAAC,QAAA,EAC/J;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACT,EACArD,WAAW,iBAAIpB,OAAA;UAAMoE,SAAS,EAAC,wBAAwB;UAAAC,QAAA,GAAC,aAAW,EAAC7C,QAAQ,EAAC,GAAC;QAAA;UAAA8C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnF,CAAC,eACNzE,OAAA;QAAKoE,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAC5B5D,OAAO,CAACgC,GAAG,CAAEC,MAAM,iBAClB1C,OAAA;UAAqBoE,SAAS,EAAC,mCAAmC;UAAAC,QAAA,eAChErE,OAAA;YAAKoE,SAAS,EAAC,mBAAmB;YAAAC,QAAA,gBAChCrE,OAAA;cAAKoE,SAAS,EAAC,oBAAoB;cAAAC,QAAA,EAAE3B,MAAM,CAAC9B;YAAI;cAAA0D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACvDzE,OAAA;cAAKoE,SAAS,EAAC,kEAAkE;cAAAC,QAAA,eAC/ErE,OAAA;gBACEoE,SAAS,EAAC,iGAAiG;gBAC3GO,KAAK,EAAE;kBACLC,KAAK,EAAE,GAAGlC,MAAM,CAAC3B,QAAQ,GAAG;kBAC5B8D,eAAe,EAAEnC,MAAM,CAAC5B,KAAK;kBAC7BgE,UAAU,EAAE;gBACd,CAAE;gBAAAT,QAAA,EAED3B,MAAM,CAAC7B;cAAK;gBAAAyD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACV;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACNzE,OAAA;cAAKoE,SAAS,EAAC,2BAA2B;cAAAC,QAAA,GAAC,GACxC,EAAC3B,MAAM,CAACzB,YAAY,CAAC8D,OAAO,CAAC,CAAC,CAAC;YAAA;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC,GAlBE/B,MAAM,CAAC/B,EAAE;UAAA2D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAmBd,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNzE,OAAA;QAAKoE,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBrE,OAAA;UAAIoE,SAAS,EAAC,wBAAwB;UAAAC,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnDzE,OAAA;UAAKoE,SAAS,EAAC,WAAW;UAAAC,QAAA,EACvBnD,OAAO,CAACuB,GAAG,CAAC,CAACL,MAAM,EAAE4C,KAAK,kBACzBhF,OAAA;YAAiBoE,SAAS,EAAC,2DAA2D;YAAAC,QAAA,gBACpFrE,OAAA;cAAAqE,QAAA,EAAOjC,MAAM,CAACxB;YAAI;cAAA0D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,EACzB,CAACrD,WAAW,iBACXpB,OAAA;cACEiF,KAAK,EAAE7C,MAAM,CAACC,SAAS,IAAI,EAAG;cAC9B6C,QAAQ,EAAGC,CAAC,IAAKlB,YAAY,CAAC7B,MAAM,CAACxB,IAAI,EAAEuE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;cAC3DI,QAAQ,EAAE/E,UAAU,KAAK8B,MAAM,CAACxB,IAAK;cACrCwD,SAAS,EAAC,oBAAoB;cAAAC,QAAA,gBAE9BrE,OAAA;gBAAQiF,KAAK,EAAC,EAAE;gBAAAZ,QAAA,EAAC;cAAe;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EACxChE,OAAO,CAACgC,GAAG,CAACC,MAAM,iBACjB1C,OAAA;gBAAwBiF,KAAK,EAAEvC,MAAM,CAAC/B,EAAG;gBAAA0D,QAAA,EAAE3B,MAAM,CAAC9B;cAAI,GAAzC8B,MAAM,CAAC/B,EAAE;gBAAA2D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAyC,CAChE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CACT,EACArD,WAAW,iBACVpB,OAAA;cAAAqE,QAAA,EAAOjC,MAAM,CAACC,SAAS,GAAG5B,OAAO,CAAC6E,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC5E,EAAE,KAAKyB,MAAM,CAACC,SAAS,CAAC,CAACzB,IAAI,GAAG;YAAc;cAAA0D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CACpG,EACAnD,MAAM,IAAIc,MAAM,CAACd,MAAM,iBAAItB,OAAA;cAAMoE,SAAS,EAAC,MAAM;cAAAC,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA,GAlBpDO,KAAK;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAmBV,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EACLnD,MAAM,iBACLtB,OAAA;QAAKoE,SAAS,EAAC,2EAA2E;QAAAC,QAAA,GAAC,kBACzE,EAAC/C,MAAM,CAACV,IAAI,EAAC,GAAC,EAACU,MAAM,CAACT,KAAK,EAAC,eAC9C;MAAA;QAAAyD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjE,EAAA,CAhMIJ,iBAAiB;AAAAoF,EAAA,GAAjBpF,iBAAiB;AAkMvB,eAAeA,iBAAiB;AAAC,IAAAoF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}