{"ast":null,"code":"var _jsxFileName = \"F:\\\\crypto-chicken-run\\\\src\\\\components\\\\CryptoPricePredictor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport * as roomService from '../services/roomService';\nimport LoadingScreen from './LoadingScreen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PREDICTION_DURATION = 60000; // 1 minute\nconst UPDATE_INTERVAL = 1000; // 1 second\n\nconst CryptoPricePredictor = ({\n  roomCode,\n  playerName,\n  isHost,\n  selectedCrypto\n}) => {\n  _s();\n  const [crypto, setCrypto] = useState(null);\n  const [players, setPlayers] = useState([]);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [winner, setWinner] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(PREDICTION_DURATION / 1000);\n  const [isLoading, setIsLoading] = useState(true);\n  const [prediction, setPrediction] = useState('');\n  const [priceHistory, setPriceHistory] = useState([]);\n  const [startTime, setStartTime] = useState(null);\n  const [startPrice, setStartPrice] = useState(null);\n  const [endTime, setEndTime] = useState(null);\n  const [endPrice, setEndPrice] = useState(null);\n  useEffect(() => {\n    const fetchCryptoData = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetch(`https://api.coingecko.com/api/v3/coins/${selectedCrypto}`);\n        const data = await response.json();\n        setCrypto({\n          id: data.id,\n          name: data.name,\n          symbol: data.symbol,\n          image: data.image.small,\n          currentPrice: data.market_data.current_price.usd\n        });\n        setPriceHistory([{\n          timestamp: Date.now(),\n          price: data.market_data.current_price.usd\n        }]);\n      } catch (error) {\n        console.error('Error fetching crypto data:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCryptoData();\n  }, [selectedCrypto]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const updatedPlayers = roomService.getRoomPlayers(roomCode);\n      if (updatedPlayers) {\n        setPlayers(updatedPlayers);\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [roomCode]);\n  useEffect(() => {\n    if (gameStarted) {\n      const interval = setInterval(() => {\n        setTimeLeft(prevTime => {\n          if (prevTime <= 1) {\n            clearInterval(interval);\n            endGame();\n            return 0;\n          }\n          return prevTime - 1;\n        });\n        fetchCurrentPrice();\n      }, UPDATE_INTERVAL);\n      return () => clearInterval(interval);\n    }\n  }, [gameStarted]);\n  const fetchCurrentPrice = async () => {\n    try {\n      const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${crypto.id}&vs_currencies=usd`);\n      const data = await response.json();\n      const currentPrice = data[crypto.id].usd;\n      const currentTime = Date.now();\n      setPriceHistory(prevHistory => [...prevHistory, {\n        timestamp: currentTime,\n        price: currentPrice\n      }]);\n      setCrypto(prevCrypto => ({\n        ...prevCrypto,\n        currentPrice: currentPrice\n      }));\n    } catch (error) {\n      console.error('Error fetching current price:', error);\n    }\n  };\n  const startGame = async () => {\n    setGameStarted(true);\n    setWinner(null);\n    setTimeLeft(PREDICTION_DURATION / 1000);\n    const startTimestamp = Date.now();\n    setStartTime(startTimestamp);\n    setStartPrice(crypto.currentPrice);\n    roomService.startGame(roomCode, startTimestamp, crypto.currentPrice);\n  };\n  const endGame = async () => {\n    setGameStarted(false);\n    const endTimestamp = Date.now();\n    setEndTime(endTimestamp);\n    setEndPrice(crypto.currentPrice);\n    const winningPlayer = players.reduce((closest, player) => {\n      const currentDiff = Math.abs(player.prediction - crypto.currentPrice);\n      const closestDiff = Math.abs(closest.prediction - crypto.currentPrice);\n      return currentDiff < closestDiff ? player : closest;\n    });\n    setWinner(winningPlayer);\n    setPlayers(prevPlayers => prevPlayers.map(player => ({\n      ...player,\n      winner: player.name === winningPlayer.name\n    })));\n    roomService.endGame(roomCode, endTimestamp, crypto.currentPrice, winningPlayer);\n  };\n  const submitPrediction = () => {\n    if (prediction && !isNaN(prediction)) {\n      roomService.updatePlayerPrediction(roomCode, playerName, parseFloat(prediction));\n      setPrediction('');\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 12\n    }, this);\n  }\n  if (!crypto) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error loading cryptocurrency data. Please try again.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 12\n    }, this);\n  }\n  const formatTimestamp = timestamp => {\n    return new Date(timestamp).toLocaleString();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col items-center justify-center bg-gray-900 text-cyan-300 p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-6xl bg-gray-800 rounded-lg shadow-xl border border-cyan-500 p-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-4xl font-bold mb-6 text-center text-cyan-400 animate-pulse\",\n        children: \"Crypto Price Predictor 2077\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 text-center\",\n        children: [\"Room Code: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-bold text-pink-500\",\n          children: roomCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 54\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 flex justify-center\",\n        children: [isHost && !gameStarted && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startGame,\n          className: \"px-6 py-3 bg-pink-600 text-white rounded-full hover:bg-pink-700 transition duration-300 ease-in-out transform hover:-translate-y-1 hover:scale-110 shadow-lg shadow-pink-500/50\",\n          children: \"Start Prediction Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), gameStarted && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-2xl font-semibold text-yellow-400\",\n          children: [\"Time left: \", timeLeft, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 bg-gray-700 rounded-lg p-4 shadow-lg border border-cyan-700\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: crypto.image,\n              alt: crypto.name,\n              className: \"w-8 h-8 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-semibold text-cyan-300\",\n              children: [crypto.name, \" (\", crypto.symbol.toUpperCase(), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-mono text-yellow-400\",\n            children: [\"Current Price: $\", crypto.currentPrice.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(LineChart, {\n            data: priceHistory,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\",\n              stroke: \"#2c3e50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"timestamp\",\n              tickFormatter: timestamp => new Date(timestamp).toLocaleTimeString(),\n              stroke: \"#61dafb\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              stroke: \"#61dafb\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              labelFormatter: label => formatTimestamp(label),\n              contentStyle: {\n                backgroundColor: '#1f2937',\n                border: '1px solid #3b82f6'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: \"price\",\n              stroke: \"#8884d8\",\n              dot: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), players.map((player, index) => /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: () => player.prediction,\n              stroke: `hsl(${index * 137.5 % 360}, 70%, 50%)`,\n              strokeDasharray: \"5 5\",\n              dot: false,\n              name: `${player.name}'s Prediction`\n            }, player.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n_s(CryptoPricePredictor, \"Irz5VEiQ+x+uQeXNVAuyQ6kfokA=\");\n_c = CryptoPricePredictor;\nexport default CryptoPricePredictor;\nvar _c;\n$RefreshReg$(_c, \"CryptoPricePredictor\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","roomService","LoadingScreen","jsxDEV","_jsxDEV","PREDICTION_DURATION","UPDATE_INTERVAL","CryptoPricePredictor","roomCode","playerName","isHost","selectedCrypto","_s","crypto","setCrypto","players","setPlayers","gameStarted","setGameStarted","winner","setWinner","timeLeft","setTimeLeft","isLoading","setIsLoading","prediction","setPrediction","priceHistory","setPriceHistory","startTime","setStartTime","startPrice","setStartPrice","endTime","setEndTime","endPrice","setEndPrice","fetchCryptoData","response","fetch","data","json","id","name","symbol","image","small","currentPrice","market_data","current_price","usd","timestamp","Date","now","price","error","console","interval","setInterval","updatedPlayers","getRoomPlayers","clearInterval","prevTime","endGame","fetchCurrentPrice","currentTime","prevHistory","prevCrypto","startGame","startTimestamp","endTimestamp","winningPlayer","reduce","closest","player","currentDiff","Math","abs","closestDiff","prevPlayers","map","submitPrediction","isNaN","updatePlayerPrediction","parseFloat","fileName","_jsxFileName","lineNumber","columnNumber","children","formatTimestamp","toLocaleString","className","onClick","src","alt","toUpperCase","toFixed","width","height","strokeDasharray","stroke","dataKey","tickFormatter","toLocaleTimeString","labelFormatter","label","contentStyle","backgroundColor","border","type","dot","index","_c","$RefreshReg$"],"sources":["F:/crypto-chicken-run/src/components/CryptoPricePredictor.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport * as roomService from '../services/roomService';\r\nimport LoadingScreen from './LoadingScreen';\r\n\r\nconst PREDICTION_DURATION = 60000; // 1 minute\r\nconst UPDATE_INTERVAL = 1000; // 1 second\r\n\r\nconst CryptoPricePredictor = ({ roomCode, playerName, isHost, selectedCrypto }) => {\r\n  const [crypto, setCrypto] = useState(null);\r\n  const [players, setPlayers] = useState([]);\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n  const [winner, setWinner] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(PREDICTION_DURATION / 1000);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [prediction, setPrediction] = useState('');\r\n  const [priceHistory, setPriceHistory] = useState([]);\r\n  const [startTime, setStartTime] = useState(null);\r\n  const [startPrice, setStartPrice] = useState(null);\r\n  const [endTime, setEndTime] = useState(null);\r\n  const [endPrice, setEndPrice] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchCryptoData = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await fetch(`https://api.coingecko.com/api/v3/coins/${selectedCrypto}`);\r\n        const data = await response.json();\r\n        setCrypto({\r\n          id: data.id,\r\n          name: data.name,\r\n          symbol: data.symbol,\r\n          image: data.image.small,\r\n          currentPrice: data.market_data.current_price.usd\r\n        });\r\n        setPriceHistory([{\r\n          timestamp: Date.now(),\r\n          price: data.market_data.current_price.usd\r\n        }]);\r\n      } catch (error) {\r\n        console.error('Error fetching crypto data:', error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    fetchCryptoData();\r\n  }, [selectedCrypto]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const updatedPlayers = roomService.getRoomPlayers(roomCode);\r\n      if (updatedPlayers) {\r\n        setPlayers(updatedPlayers);\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [roomCode]);\r\n\r\n  useEffect(() => {\r\n    if (gameStarted) {\r\n      const interval = setInterval(() => {\r\n        setTimeLeft((prevTime) => {\r\n          if (prevTime <= 1) {\r\n            clearInterval(interval);\r\n            endGame();\r\n            return 0;\r\n          }\r\n          return prevTime - 1;\r\n        });\r\n\r\n        fetchCurrentPrice();\r\n      }, UPDATE_INTERVAL);\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [gameStarted]);\r\n\r\n  const fetchCurrentPrice = async () => {\r\n    try {\r\n      const response = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${crypto.id}&vs_currencies=usd`);\r\n      const data = await response.json();\r\n      const currentPrice = data[crypto.id].usd;\r\n      const currentTime = Date.now();\r\n\r\n      setPriceHistory(prevHistory => [\r\n        ...prevHistory,\r\n        { timestamp: currentTime, price: currentPrice }\r\n      ]);\r\n\r\n      setCrypto(prevCrypto => ({\r\n        ...prevCrypto,\r\n        currentPrice: currentPrice\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error fetching current price:', error);\r\n    }\r\n  };\r\n\r\n  const startGame = async () => {\r\n    setGameStarted(true);\r\n    setWinner(null);\r\n    setTimeLeft(PREDICTION_DURATION / 1000);\r\n    const startTimestamp = Date.now();\r\n    setStartTime(startTimestamp);\r\n    setStartPrice(crypto.currentPrice);\r\n    roomService.startGame(roomCode, startTimestamp, crypto.currentPrice);\r\n  };\r\n\r\n  const endGame = async () => {\r\n    setGameStarted(false);\r\n    const endTimestamp = Date.now();\r\n    setEndTime(endTimestamp);\r\n    setEndPrice(crypto.currentPrice);\r\n\r\n    const winningPlayer = players.reduce((closest, player) => {\r\n      const currentDiff = Math.abs(player.prediction - crypto.currentPrice);\r\n      const closestDiff = Math.abs(closest.prediction - crypto.currentPrice);\r\n      return currentDiff < closestDiff ? player : closest;\r\n    });\r\n\r\n    setWinner(winningPlayer);\r\n    \r\n    setPlayers(prevPlayers => \r\n      prevPlayers.map(player => ({\r\n        ...player,\r\n        winner: player.name === winningPlayer.name\r\n      }))\r\n    );\r\n\r\n    roomService.endGame(roomCode, endTimestamp, crypto.currentPrice, winningPlayer);\r\n  };\r\n\r\n  const submitPrediction = () => {\r\n    if (prediction && !isNaN(prediction)) {\r\n      roomService.updatePlayerPrediction(roomCode, playerName, parseFloat(prediction));\r\n      setPrediction('');\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <LoadingScreen />;\r\n  }\r\n\r\n  if (!crypto) {\r\n    return <div>Error loading cryptocurrency data. Please try again.</div>;\r\n  }\r\n\r\n  const formatTimestamp = (timestamp) => {\r\n    return new Date(timestamp).toLocaleString();\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-900 text-cyan-300 p-4\">\r\n      <div className=\"w-full max-w-6xl bg-gray-800 rounded-lg shadow-xl border border-cyan-500 p-8\">\r\n        <h2 className=\"text-4xl font-bold mb-6 text-center text-cyan-400 animate-pulse\">Crypto Price Predictor 2077</h2>\r\n        <div className=\"mb-4 text-center\">Room Code: <span className=\"font-bold text-pink-500\">{roomCode}</span></div>\r\n        <div className=\"mb-6 flex justify-center\">\r\n          {isHost && !gameStarted && (\r\n            <button \r\n              onClick={startGame} \r\n              className=\"px-6 py-3 bg-pink-600 text-white rounded-full hover:bg-pink-700 transition duration-300 ease-in-out transform hover:-translate-y-1 hover:scale-110 shadow-lg shadow-pink-500/50\"\r\n            >\r\n              Start Prediction Game\r\n            </button>\r\n          )}\r\n          {gameStarted && <span className=\"text-2xl font-semibold text-yellow-400\">Time left: {timeLeft}s</span>}\r\n        </div>\r\n        <div className=\"mb-6 bg-gray-700 rounded-lg p-4 shadow-lg border border-cyan-700\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <div className=\"flex items-center\">\r\n              <img src={crypto.image} alt={crypto.name} className=\"w-8 h-8 mr-2\" />\r\n              <div className=\"font-semibold text-cyan-300\">{crypto.name} ({crypto.symbol.toUpperCase()})</div>\r\n            </div>\r\n            <div className=\"font-mono text-yellow-400\">\r\n              Current Price: ${crypto.currentPrice.toFixed(2)}\r\n            </div>\r\n          </div>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <LineChart data={priceHistory}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#2c3e50\" />\r\n              <XAxis \r\n                dataKey=\"timestamp\" \r\n                tickFormatter={(timestamp) => new Date(timestamp).toLocaleTimeString()}\r\n                stroke=\"#61dafb\"\r\n              />\r\n              <YAxis stroke=\"#61dafb\" />\r\n              <Tooltip \r\n                labelFormatter={(label) => formatTimestamp(label)}\r\n                contentStyle={{ backgroundColor: '#1f2937', border: '1px solid #3b82f6' }}\r\n              />\r\n              <Legend />\r\n              <Line type=\"monotone\" dataKey=\"price\" stroke=\"#8884d8\" dot={false} />\r\n              {players.map((player, index) => (\r\n                <Line \r\n                  key={player.name}\r\n                  type=\"monotone\" \r\n                  dataKey={() => player.prediction}\r\n                  stroke={`hsl(${index * 137.5 % 360}, 70%, 50%)`}\r\n                  strokeDasharray=\"5 5\"\r\n                  dot={false}\r\n                  name={`${player.name}'s Prediction`}\r\n                />\r\n              ))}\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n        {/* Rest of the component remains the same */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoPricePredictor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}